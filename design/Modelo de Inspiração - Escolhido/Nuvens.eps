%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Nuvens.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: Joao Vitor Lessa Barros
%%CreationDate: 8/3/2019
%%BoundingBox: 0 0 962 743
%%HiResBoundingBox: 0 0 961.4521 742.4629
%%CropBox: 0 0 961.4521 742.4629
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.0 x44 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of clouds in sky</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of clouds in sky. Fluffy, summer, weather. Can be used for topics like background, collection, meteorology</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>nobody</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>sky</rdf:li>
               <rdf:li>cloud</rdf:li>
               <rdf:li>blue</rdf:li>
               <rdf:li>natural</rdf:li>
               <rdf:li>summer</rdf:li>
               <rdf:li>cloudy</rdf:li>
               <rdf:li>nature</rdf:li>
               <rdf:li>day</rdf:li>
               <rdf:li>climate</rdf:li>
               <rdf:li>heaven</rdf:li>
               <rdf:li>weather</rdf:li>
               <rdf:li>meteorology</rdf:li>
               <rdf:li>clear</rdf:li>
               <rdf:li>air</rdf:li>
               <rdf:li>fluffy</rdf:li>
               <rdf:li>cloudscape</rdf:li>
               <rdf:li>shape</rdf:li>
               <rdf:li>season</rdf:li>
               <rdf:li>ozone</rdf:li>
               <rdf:li>outdoor</rdf:li>
               <rdf:li>daylight</rdf:li>
               <rdf:li>wind</rdf:li>
               <rdf:li>pattern</rdf:li>
               <rdf:li>morning</rdf:li>
               <rdf:li>environment</rdf:li>
               <rdf:li>overcast</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>condensation</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-08-03T01:17:38-03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-08-03T01:17:39-03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-08-03T01:17:39-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AlOd8+UuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVPrHyR5kvYhNHa+nEwqrSsqE/7Enl+GYOXtLDA0Tv5O0w9janILEaH&#xA;nt+1Dar5Y1zS09S8tWWGtPWUh08BUqTSvvlmDW4spqJ3adT2dnwC5x27+YSrMpwXYq7FXYq7FXYq&#xA;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&#xA;AFx/lXB3/YV/kHVfzR8w/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9062fa5a-33e3-c24e-823d-33c7af8cb2ad</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9062fa5a-33e3-c24e-823d-33c7af8cb2ad</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:207BF9D47D27E9118DAACDF05400C5A6</stRef:instanceID>
            <stRef:documentID>xmp.did:207BF9D47D27E9118DAACDF05400C5A6</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6d72db66-fa28-d44c-a846-ad7522383d44</stEvt:instanceID>
                  <stEvt:when>2018-12-12T22:37:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e547d670-d207-2643-ad7f-77d85cbbef33</stEvt:instanceID>
                  <stEvt:when>2018-12-14T22:28:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cedc7db6-b8df-5742-8cf1-777f21722f4a</stEvt:instanceID>
                  <stEvt:when>2018-12-31T17:33:57+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:207BF9D47D27E9118DAACDF05400C5A6</stEvt:instanceID>
                  <stEvt:when>2019-02-03T08:35:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9062fa5a-33e3-c24e-823d-33c7af8cb2ad</stEvt:instanceID>
                  <stEvt:when>2019-08-03T01:17:39-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>961.452077</stDim:w>
            <stDim:h>742.462900</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de amostras padrão</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -742.463 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 742.463 li
961.452 742.463 li
961.452 0 li
cp
clp
961.452 742.463 mo
0 742.463 li
0 0 li
961.452 0 li
961.452 742.463 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.592554 .0569467 0 0 cmyk
f
277.048 139.217 mo
277.048 143.637 270.328 147.217 262.048 147.217 cv
257.008 147.217 252.568 145.897 249.848 143.867 cv
241.438 145.377 232.468 143.727 226.618 137.697 cv
228.268 141.767 222.918 146.627 218.708 147.887 cv
211.228 150.137 203.548 150.827 195.808 149.737 cv
188.078 148.646 180.368 143.206 179.298 135.467 cv
177.468 145.427 167.128 152.847 157.048 151.907 cv
146.958 150.967 137.438 147.976 136.088 137.947 cv
134.128 146.597 126.398 147.497 117.518 147.186 cv
108.648 146.887 100.508 139.657 99.1578 130.887 cv
96.3579 137.646 89.628 143.107 82.3177 142.757 cv
75.0078 142.396 66.8681 136.257 68.8779 129.217 cv
70.6679 123.937 73.5677 126.167 72.228 125.217 cv
71.8578 124.957 71.498 124.677 71.1577 124.367 cv
69.3178 122.787 67.9878 120.757 67.1078 118.517 cv
59.9579 118.137 54.378 114.936 54.378 111.057 cv
54.378 107.067 60.2679 103.817 67.6879 103.577 cv
68.6078 101.587 69.8681 99.7665 71.478 98.2665 cv
79.0381 91.2769 91.5477 91.4165 100.068 97.1969 cv
98.0677 89.4566 101.508 80.6168 108.218 76.2769 cv
114.938 71.9267 124.408 72.4066 130.648 77.4067 cv
129.088 72.0167 135.388 65.107 140.708 63.3668 cv
148.878 60.6968 157.978 61.9364 165.808 65.4764 cv
173.628 69.0069 178.908 79.047 174.788 86.5868 cv
179.078 83.9366 185.118 84.5167 188.828 87.9467 cv
192.538 91.3667 193.588 97.3466 191.278 101.837 cv
194.158 97.2768 200.048 94.8569 205.298 96.0669 cv
210.548 97.2667 214.788 102.016 215.398 107.377 cv
217.288 104.396 219.658 101.717 222.388 99.4765 cv
229.248 93.8468 239.148 91.1968 247.228 94.8769 cv
256.588 99.1366 260.608 112.017 255.748 120.957 cv
258.148 117.927 263.568 117.727 266.468 120.547 cv
268.458 122.487 269.268 125.287 269.108 128.077 cv
269.028 129.397 268.728 130.706 268.228 131.937 cv
273.428 133.197 277.048 135.977 277.048 139.217 cv
.292454 .106081 0 0 cmyk
f
269.108 128.077 mo
268.998 128.077 268.898 128.077 268.788 128.087 cv
265.818 128.227 263.058 129.567 260.268 130.587 cv
257.478 131.607 254.328 132.307 251.578 131.187 cv
248.828 130.057 246.988 126.437 248.658 123.977 cv
242.138 129.517 230.798 127.667 226.378 120.337 cv
221.248 126.686 210.378 127.146 204.738 121.247 cv
199.758 128.847 188.378 131.307 180.718 126.437 cv
179.588 125.717 178.438 124.837 177.098 124.817 cv
176.108 124.807 175.178 125.277 174.268 125.687 cv
163.978 130.327 150.688 126.887 143.928 117.847 cv
139.698 123.017 132.728 125.797 126.108 124.967 cv
119.478 124.127 113.418 119.697 110.608 113.637 cv
106.888 118.737 101.408 123.067 95.0981 123.367 cv
88.7978 123.667 82.1278 118.567 82.518 112.266 cv
81.0582 117.857 76.5381 122.347 71.1577 124.367 cv
69.3178 122.787 67.9878 120.757 67.1078 118.517 cv
59.9579 118.137 54.378 114.936 54.378 111.057 cv
54.378 107.067 60.2679 103.817 67.6879 103.577 cv
68.6078 101.587 69.8681 99.7665 71.478 98.2665 cv
79.0381 91.2769 91.5477 91.4165 100.068 97.1969 cv
98.0677 89.4566 101.508 80.6168 108.218 76.2769 cv
114.938 71.9267 124.408 72.4066 130.648 77.4067 cv
129.088 72.0167 135.388 65.107 140.708 63.3668 cv
148.878 60.6968 157.978 61.9364 165.808 65.4764 cv
173.628 69.0069 178.908 79.047 174.788 86.5868 cv
179.078 83.9366 185.118 84.5167 188.828 87.9467 cv
192.538 91.3667 193.588 97.3466 191.278 101.837 cv
194.158 97.2768 200.048 94.8569 205.298 96.0669 cv
210.548 97.2667 214.788 102.016 215.398 107.377 cv
217.288 104.396 219.658 101.717 222.388 99.4765 cv
229.248 93.8468 239.148 91.1968 247.228 94.8769 cv
256.588 99.1366 260.608 112.017 255.748 120.957 cv
258.148 117.927 263.568 117.727 266.468 120.547 cv
268.458 122.487 269.268 125.287 269.108 128.077 cv
0 0 0 0 cmyk
f
102.878 121.887 mo
102.878 126.857 94.1474 130.887 83.3779 130.887 cv
72.6084 130.887 63.8779 126.857 63.8779 121.887 cv
63.8779 116.916 72.6084 112.887 83.3779 112.887 cv
94.1474 112.887 102.878 116.916 102.878 121.887 cv
cp
.156374 .0409552 0 0 cmyk
f
129.896 113.221 mo
129.896 119.757 120.713 125.056 109.387 125.056 cv
98.06 125.056 88.878 119.757 88.878 113.221 cv
88.878 106.685 98.06 101.387 109.387 101.387 cv
120.713 101.387 129.896 106.685 129.896 113.221 cv
f
151.703 100.943 mo
154.804 110.146 148.642 120.53 137.939 124.136 cv
127.238 127.741 116.049 123.203 112.948 113.999 cv
109.848 104.796 116.01 94.4126 126.711 90.8071 cv
137.413 87.2016 148.602 91.7398 151.703 100.943 cv
f
138.878 123.387 mo
138.878 127.529 130.819 130.887 120.878 130.887 cv
110.937 130.887 102.878 127.529 102.878 123.387 cv
102.878 119.245 110.937 115.887 120.878 115.887 cv
130.819 115.887 138.878 119.245 138.878 123.387 cv
cp
f
140.38 123.387 mo
140.38 127.529 131.985 130.887 121.629 130.887 cv
111.273 130.887 102.878 127.529 102.878 123.387 cv
102.878 119.245 111.273 115.887 121.629 115.887 cv
131.985 115.887 140.38 119.245 140.38 123.387 cv
cp
f
99.6967 117.935 mo
91.6963 117.935 84.5376 116.555 79.7246 114.381 cv
82.6133 118.454 91.0688 121.403 101.054 121.403 cv
112.742 121.403 122.334 117.362 123.353 112.207 cv
119.118 115.596 110.117 117.935 99.6967 117.935 cv
cp
.292454 .106081 0 0 cmyk
f
121.239 128.25 mo
115.041 128.25 109.495 125.608 105.766 121.448 cv
108.004 129.242 114.555 134.887 122.291 134.887 cv
131.346 134.887 138.778 127.153 139.567 117.289 cv
136.286 123.774 129.312 128.25 121.239 128.25 cv
cp
f
173.128 117.573 mo
173.128 125.407 165.461 131.759 156.003 131.759 cv
146.545 131.759 138.878 125.407 138.878 117.573 cv
138.878 109.738 146.545 103.387 156.003 103.387 cv
165.461 103.387 173.128 109.738 173.128 117.573 cv
.156374 .0409552 0 0 cmyk
f
188.378 129.137 mo
188.378 133.141 181.13 136.387 172.19 136.387 cv
163.251 136.387 156.003 133.141 156.003 129.137 cv
156.003 125.133 163.251 121.887 172.19 121.887 cv
181.13 121.887 188.378 125.133 188.378 129.137 cv
cp
f
205.378 123.887 mo
205.378 129.962 197.949 134.887 188.784 134.887 cv
179.62 134.887 172.19 129.962 172.19 123.887 cv
172.19 117.812 179.62 112.887 188.784 112.887 cv
197.949 112.887 205.378 117.812 205.378 123.887 cv
cp
f
161.092 125.366 mo
154.514 125.366 148.993 122.547 147.352 118.72 cv
147.808 123.408 153.484 127.116 160.438 127.116 cv
165.747 127.116 170.309 124.952 172.378 121.845 cv
169.773 123.982 165.693 125.366 161.092 125.366 cv
cp
.292454 .106081 0 0 cmyk
f
155.513 94.4364 mo
162.087 94.2237 167.696 96.8624 169.46 100.633 cv
168.853 95.9634 163.059 92.4414 156.109 92.6659 cv
150.804 92.8378 146.314 95.1484 144.347 98.3207 cv
146.881 96.1001 150.914 94.5854 155.513 94.4364 cv
.156374 .0409552 0 0 cmyk
f
172.259 98.7407 mo
177.479 98.5718 181.952 101.247 183.378 105.029 cv
182.864 100.356 178.24 96.7959 172.721 96.9746 cv
168.508 97.1113 164.958 99.3911 163.415 102.55 cv
165.414 100.346 168.607 98.8589 172.259 98.7407 cv
cp
f
178.113 104.749 mo
184.687 104.536 190.296 107.175 192.061 110.946 cv
191.453 106.276 185.66 102.753 178.709 102.979 cv
173.404 103.15 168.914 105.461 166.947 108.633 cv
169.482 106.413 173.514 104.898 178.113 104.749 cv
f
138.236 82.5566 mo
142.584 82.416 146.325 85.1147 147.534 88.9043 cv
147.08 84.229 143.208 80.645 138.612 80.7934 cv
135.102 80.9072 132.157 83.1675 130.889 86.3174 cv
132.542 84.125 135.195 82.6553 138.236 82.5566 cv
cp
f
145.492 79.6089 mo
148.304 79.5176 150.729 81.4204 151.518 84.0849 cv
151.216 80.7998 148.705 78.2744 145.731 78.3711 cv
143.461 78.4443 141.56 80.0268 140.746 82.2373 cv
141.811 80.7002 143.524 79.6723 145.492 79.6089 cv
cp
f
109.729 97.8359 mo
116.143 99.2939 120.902 103.266 121.654 107.361 cv
122.248 102.689 117.536 97.8154 110.754 96.2744 cv
105.578 95.0976 100.65 96.1968 97.9433 98.768 cv
100.957 97.2612 105.243 96.8164 109.729 97.8359 cv
cp
f
126.688 85.1709 mo
133.178 86.2417 138.167 89.9218 139.163 93.9642 cv
139.476 89.2657 134.479 84.683 127.618 83.5508 cv
122.38 82.6865 117.527 84.0791 114.98 86.8076 cv
117.897 85.123 122.148 84.4218 126.688 85.1709 cv
f
176.651 131.415 mo
172.005 131.415 168.105 128.597 166.947 124.771 cv
167.268 129.458 171.278 133.165 176.189 133.165 cv
179.939 133.165 183.161 131.002 184.623 127.895 cv
182.783 130.032 179.901 131.415 176.651 131.415 cv
cp
.292454 .106081 0 0 cmyk
f
138.424 133.754 mo
133.997 133.36 130.109 132.178 127.563 130.633 cv
128.943 133.225 133.464 135.415 138.989 135.907 cv
145.457 136.482 150.981 134.525 151.821 131.476 cv
149.296 133.305 144.19 134.268 138.424 133.754 cv
cp
.156374 .0409552 0 0 cmyk
f
215.239 121.742 mo
209.041 121.742 203.495 120.267 199.766 117.944 cv
202.004 122.296 208.555 125.448 216.291 125.448 cv
225.346 125.448 232.778 121.13 233.567 115.622 cv
230.286 119.243 223.312 121.742 215.239 121.742 cv
cp
f
238.654 124.803 mo
233.457 124.803 228.806 123.328 225.679 121.004 cv
227.556 125.356 233.049 128.508 239.536 128.508 cv
247.13 128.508 253.362 124.19 254.024 118.682 cv
251.272 122.303 245.424 124.803 238.654 124.803 cv
cp
f
130.89 113.974 mo
130.338 113.974 129.791 113.954 129.251 113.914 cv
130.698 113.811 132.165 113.578 133.623 113.181 cv
142.201 110.848 147.141 104.126 144.655 98.1683 cv
144.644 98.1415 144.633 98.1146 144.621 98.0879 cv
145.312 97.52 146.103 97.0022 146.977 96.546 cv
147.327 97.0579 147.624 97.5991 147.861 98.1683 cv
148.835 100.503 148.669 102.954 147.591 105.213 cv
144.361 106.725 141.783 109.08 140.293 111.918 cv
139.221 112.419 138.063 112.846 136.829 113.181 cv
134.841 113.722 132.834 113.974 130.89 113.974 cv
144.572 97.9766 mo
143.567 95.7192 141.619 93.9111 139.117 92.6767 cv
139.059 92.2508 138.96 91.828 138.82 91.4117 cv
142.032 92.2049 144.77 93.7639 146.512 95.9211 cv
145.741 96.5428 145.086 97.2337 144.572 97.9766 cv
.0564889 .0130922 0 0 cmyk
f
140.293 111.918 mo
141.783 109.08 144.361 106.725 147.591 105.213 cv
146.313 107.89 143.754 110.297 140.293 111.918 cv
f
144.621 98.0879 mo
144.605 98.0506 144.589 98.0137 144.572 97.9766 cv
145.086 97.2337 145.741 96.5428 146.512 95.9211 cv
146.676 96.124 146.832 96.3327 146.977 96.546 cv
146.103 97.0022 145.312 97.52 144.621 98.0879 cv
f
138.585 92.4264 mo
136.69 91.5783 134.511 91.0446 132.201 90.8745 cv
132.739 90.836 133.275 90.8171 133.805 90.8171 cv
135.188 90.8171 136.538 90.9457 137.824 91.1931 cv
138.118 91.5948 138.372 92.0069 138.585 92.4264 cv
f
139.117 92.6767 mo
138.942 92.5904 138.765 92.5071 138.585 92.4264 cv
138.372 92.0069 138.118 91.5948 137.824 91.1931 cv
138.16 91.2579 138.493 91.3308 138.82 91.4117 cv
138.96 91.828 139.059 92.2508 139.117 92.6767 cv
f
166.114 120.848 mo
166.558 120.272 166.938 119.62 167.226 118.887 cv
168.92 114.569 166.96 109.272 162.85 107.054 cv
161.629 106.395 160.356 106.084 159.125 106.084 cv
157.446 106.084 155.845 106.664 154.561 107.737 cv
155.954 105.929 158.025 104.925 160.233 104.925 cv
161.464 104.925 162.737 105.238 163.958 105.896 cv
165.17 106.55 166.195 107.472 166.995 108.557 cv
166.979 108.582 166.963 108.608 166.947 108.633 cv
166.968 108.615 166.989 108.596 167.01 108.578 cv
168.911 111.172 169.526 114.693 168.335 117.729 cv
167.832 119.014 167.056 120.06 166.114 120.848 cv
f
166.947 108.633 mo
166.963 108.608 166.979 108.582 166.995 108.557 cv
167 108.564 167.005 108.571 167.01 108.578 cv
166.989 108.596 166.968 108.615 166.947 108.633 cv
f
249.687 107.384 mo
247.535 103.217 240.721 100.814 233.35 101.238 cv
239.359 101.596 244.521 103.858 246.342 107.384 cv
248.935 112.404 243.782 118.067 234.833 120.034 cv
233.313 120.368 231.782 120.564 230.273 120.651 cv
232.819 120.802 235.515 120.619 238.178 120.034 cv
247.127 118.067 252.279 112.404 249.687 107.384 cv
cp
.156374 .0409552 0 0 cmyk
f
392.543 334.372 mo
392.543 343.394 383.986 350.708 373.431 350.708 cv
362.875 350.708 354.318 343.394 354.318 334.372 cv
354.318 325.35 362.875 318.037 373.431 318.037 cv
383.986 318.037 392.543 325.35 392.543 334.372 cv
cp
0 0 0 0 cmyk
f
367.684 333.941 mo
367.684 350.112 354.575 363.22 338.405 363.22 cv
322.235 363.22 309.126 350.112 309.126 333.941 cv
309.126 317.771 322.235 304.663 338.405 304.663 cv
354.575 304.663 367.684 317.771 367.684 333.941 cv
f
312.126 283.978 mo
295.742 283.978 282.46 293.432 282.46 305.093 cv
282.46 309.982 284.8 314.478 288.718 318.057 cv
272.872 318.492 260.211 327.767 260.211 339.152 cv
260.211 350.814 273.494 360.267 289.878 360.267 cv
306.262 360.267 319.544 350.814 319.544 339.152 cv
319.544 334.263 317.204 329.767 313.286 326.188 cv
329.132 325.753 341.793 316.478 341.793 305.093 cv
341.793 293.432 328.511 283.978 312.126 283.978 cv
.156374 .0409552 0 0 cmyk
f
463.753 318.036 mo
447.368 318.036 434.086 327.49 434.086 339.152 cv
434.086 350.814 447.368 360.267 463.753 360.267 cv
480.137 360.267 493.42 350.814 493.42 339.152 cv
493.42 327.49 480.137 318.036 463.753 318.036 cv
f
212.77 325.137 mo
196.385 325.137 183.103 336.386 183.103 350.262 cv
183.103 355.21 184.798 359.819 187.714 363.708 cv
186.698 363.619 185.667 363.572 184.623 363.572 cv
168.238 363.572 154.956 374.82 154.956 388.697 cv
154.956 389.759 155.043 390.803 155.194 391.831 cv
146.379 392.639 139.516 398.957 139.516 406.637 cv
139.516 414.864 147.391 421.534 157.106 421.534 cv
164.589 421.534 170.964 417.569 173.506 411.991 cv
176.94 413.168 180.69 413.822 184.623 413.822 cv
201.007 413.822 214.289 402.573 214.289 388.697 cv
214.289 383.749 212.594 379.14 209.678 375.251 cv
210.694 375.34 211.726 375.387 212.77 375.387 cv
229.154 375.387 242.436 364.138 242.436 350.262 cv
242.436 336.386 229.154 325.137 212.77 325.137 cv
cp
f
577.541 417.599 mo
575.722 417.599 573.99 417.753 572.401 418.027 cv
572.407 417.884 572.431 417.743 572.431 417.599 cv
572.431 409.924 564.073 403.702 553.764 403.702 cv
551.777 403.702 549.866 403.937 548.071 404.365 cv
543.9 399.822 536.524 396.385 527.642 395.02 cv
532.278 391.294 535.097 386.397 535.097 381.029 cv
535.097 370.081 523.39 361.08 508.399 360.02 cv
508.412 359.656 508.431 359.293 508.431 358.926 cv
508.431 339.349 490.522 323.478 468.43 323.478 cv
459.298 323.478 450.885 326.196 444.152 330.761 cv
440.972 328.891 436.964 327.765 432.597 327.765 cv
430.611 327.765 428.7 328.001 426.904 328.429 cv
423.897 325.154 419.218 322.456 413.517 320.691 cv
415.507 317.855 416.633 314.658 416.633 311.272 cv
416.633 306.547 414.451 302.185 410.767 298.667 cv
411.052 297.175 411.207 295.638 411.207 294.064 cv
411.207 280.603 400.294 269.69 386.833 269.69 cv
386.625 269.69 386.419 269.701 386.211 269.706 cv
380.279 256.712 365.915 247.542 349.126 247.542 cv
348.814 247.542 348.506 247.557 348.195 247.563 cv
347.884 247.557 347.576 247.542 347.264 247.542 cv
330.475 247.542 316.111 256.712 310.178 269.706 cv
309.971 269.701 309.765 269.69 309.557 269.69 cv
296.096 269.69 285.183 280.603 285.183 294.064 cv
285.183 307.525 296.096 318.438 309.557 318.438 cv
311.404 318.438 313.201 318.225 314.931 317.836 cv
314.298 318.673 313.707 319.537 313.155 320.423 cv
308.736 319.156 303.747 318.438 298.46 318.438 cv
285.861 318.438 274.936 322.493 269.486 328.429 cv
267.69 328.001 265.779 327.765 263.793 327.765 cv
259.426 327.765 255.418 328.891 252.238 330.761 cv
245.505 326.196 237.092 323.478 227.96 323.478 cv
205.868 323.478 187.96 339.349 187.96 358.926 cv
187.96 359.293 187.978 359.656 187.991 360.02 cv
173 361.08 161.293 370.081 161.293 381.029 cv
161.293 386.397 164.112 391.294 168.747 395.02 cv
159.866 396.385 152.489 399.822 148.319 404.365 cv
146.523 403.937 144.613 403.702 142.626 403.702 cv
132.317 403.702 123.96 409.924 123.96 417.599 cv
123.96 417.743 123.983 417.884 123.989 418.027 cv
122.4 417.753 120.668 417.599 118.85 417.599 cv
111.271 417.599 105.126 420.22 105.126 423.452 cv
105.126 426.685 111.271 429.306 118.85 429.306 cv
123.005 429.306 126.72 428.515 129.237 427.271 cv
132.629 429.873 137.37 431.496 142.626 431.496 cv
147.988 431.496 152.807 429.804 156.212 427.109 cv
161.902 429.844 169.256 431.496 177.293 431.496 cv
183.6 431.496 189.485 430.478 194.478 428.72 cv
199.846 435.347 208.046 439.588 217.238 439.588 cv
225.949 439.588 233.766 435.78 239.129 429.743 cv
242.921 432.174 247.426 433.59 252.264 433.59 cv
257.103 433.59 261.609 432.174 265.401 429.742 cv
266.248 429.789 267.099 429.821 267.96 429.821 cv
273.513 429.821 278.802 428.817 283.608 427.004 cv
289.327 429.802 296.764 431.496 304.902 431.496 cv
312.114 431.496 318.776 430.166 324.18 427.916 cv
325.575 428.421 327.204 428.81 328.993 429.046 cv
332.001 430.589 335.641 431.496 339.569 431.496 cv
342.683 431.496 345.613 430.921 348.195 429.916 cv
350.776 430.921 353.707 431.496 356.821 431.496 cv
360.75 431.496 364.39 430.589 367.397 429.046 cv
369.186 428.81 370.815 428.421 372.21 427.916 cv
377.614 430.166 384.276 431.496 391.488 431.496 cv
399.626 431.496 407.063 429.802 412.782 427.004 cv
417.588 428.817 422.877 429.821 428.43 429.821 cv
429.291 429.821 430.142 429.789 430.989 429.742 cv
434.781 432.174 439.286 433.59 444.126 433.59 cv
448.964 433.59 453.469 432.174 457.261 429.743 cv
462.624 435.78 470.441 439.588 479.151 439.588 cv
488.345 439.588 496.544 435.347 501.912 428.72 cv
506.905 430.478 512.791 431.496 519.097 431.496 cv
527.134 431.496 534.488 429.844 540.178 427.109 cv
543.583 429.804 548.402 431.496 553.764 431.496 cv
559.019 431.496 563.761 429.873 567.153 427.271 cv
569.67 428.515 573.386 429.306 577.541 429.306 cv
585.12 429.306 591.264 426.685 591.264 423.452 cv
591.264 420.22 585.12 417.599 577.541 417.599 cv
0 0 0 0 cmyk
f
404.817 322.122 mo
403.926 321.799 419.574 326.553 421.642 336.887 cv
423.711 347.22 413.23 356.22 413.23 356.22 cv
413.23 356.22 430.257 331.358 404.817 322.122 cv
cp
.156374 .0409552 0 0 cmyk
f
386.044 272.599 mo
386.044 272.599 403.517 279.22 404.781 293.22 cv
406.044 307.22 386.044 313.22 386.044 313.22 cv
386.044 313.22 418.711 293.645 386.044 272.599 cv
cp
f
364.711 337.22 mo
362.025 337.128 388.171 337.22 395.441 344.887 cv
402.711 352.553 404.461 364.22 401.753 367.887 cv
401.753 367.887 403.711 338.553 364.711 337.22 cv
f
449.148 386.867 mo
438.248 363.887 401.758 367.887 401.758 367.887 cv
440.278 358.016 448.928 386.117 449.148 386.867 cv
f
449.168 386.877 mo
449.248 386.807 449.608 386.486 450.278 386.047 cv
449.908 386.307 449.538 386.587 449.168 386.877 cv
f
493.418 392.887 mo
468.048 376.977 454.128 383.507 450.278 386.047 cv
472.008 370.337 493.418 392.887 493.418 392.887 cv
f
526.048 398.887 mo
507.048 381.526 493.888 392.476 493.428 392.877 cv
506.468 375.897 526.048 398.887 526.048 398.887 cv
f
526.048 398.887 mo
517.713 391.271 510.501 389.103 504.993 389.103 cv
497.945 389.103 493.686 392.652 493.428 392.877 cv
493.418 392.887 li
480.626 384.865 470.745 382.547 463.598 382.547 cv
456.57 382.547 452.187 384.788 450.278 386.047 cv
449.908 386.307 449.538 386.587 449.168 386.877 cv
449.158 386.887 li
449.148 386.867 li
441.063 369.821 418.897 367.62 407.988 367.62 cv
404.191 367.62 401.758 367.887 401.758 367.887 cv
401.758 367.887 li
401.758 367.887 404.191 367.62 407.988 367.62 cv
418.897 367.62 441.063 369.821 449.148 386.867 cv
448.961 386.229 442.673 365.788 417.066 365.788 cv
412.581 365.788 407.499 366.416 401.758 367.887 cv
401.758 367.887 413.528 360.487 425.458 360.017 cv
426.162 359.989 426.841 359.977 427.493 359.977 cv
437.876 359.977 441.708 363.217 441.708 363.217 cv
441.708 363.217 451.137 349.3 464.821 349.3 cv
468.348 349.3 472.154 350.223 476.158 352.547 cv
495.708 363.887 493.378 372.057 493.378 372.057 cv
493.378 372.057 494.065 371.987 495.304 371.987 cv
498.381 371.987 504.866 372.414 512.708 375.387 cv
523.708 379.556 526.048 398.887 526.048 398.887 cv
526.048 398.887 515.606 386.625 504.893 386.625 cv
500.938 386.625 496.944 388.298 493.428 392.877 cv
493.686 392.652 497.945 389.103 504.993 389.103 cv
510.501 389.103 517.713 391.271 526.048 398.887 cv
526.048 398.887 li
463.598 382.547 mo
470.745 382.547 480.626 384.865 493.418 392.887 cv
493.418 392.887 481.643 380.483 466.692 380.483 cv
461.485 380.483 455.891 381.989 450.278 386.047 cv
452.187 384.788 456.57 382.547 463.598 382.547 cv
450.278 386.047 mo
449.608 386.486 449.248 386.807 449.168 386.877 cv
449.538 386.587 449.908 386.307 450.278 386.047 cv
.0358892 .00909438 0 0 cmyk
f
449.148 386.867 mo
441.063 369.821 418.897 367.62 407.988 367.62 cv
404.191 367.62 401.758 367.887 401.758 367.887 cv
401.758 367.887 li
407.499 366.416 412.581 365.788 417.066 365.788 cv
442.673 365.788 448.961 386.229 449.148 386.867 cv
.156374 .0409552 0 0 cmyk
f
449.168 386.877 mo
449.248 386.807 449.608 386.486 450.278 386.047 cv
449.908 386.307 449.538 386.587 449.168 386.877 cv
f
493.418 392.887 mo
480.626 384.865 470.745 382.547 463.598 382.547 cv
456.57 382.547 452.187 384.788 450.278 386.047 cv
455.891 381.989 461.485 380.483 466.692 380.483 cv
481.643 380.483 493.418 392.887 493.418 392.887 cv
f
526.048 398.887 mo
517.713 391.271 510.501 389.103 504.993 389.103 cv
497.945 389.103 493.686 392.652 493.428 392.877 cv
496.944 388.298 500.938 386.625 504.893 386.625 cv
515.606 386.625 526.048 398.887 526.048 398.887 cv
526.048 398.887 li
f
293.878 371.217 mo
289.508 377.467 284.348 381.186 282.038 382.656 cv
281.998 382.677 li
281.458 383.026 281.088 383.236 280.918 383.327 cv
280.838 383.377 li
281.508 382.797 299.168 367.447 295.628 353.047 cv
293.838 345.757 286.628 338.706 269.048 333.936 cv
267.138 333.427 285.458 330.907 293.588 343.567 cv
295.748 346.937 297.198 349.877 298.038 352.547 cv
300.368 359.887 298.158 365.107 293.878 371.217 cv
f
309.128 386.627 mo
296.168 376.906 281.468 383.106 280.838 383.377 cv
280.918 383.327 li
281.278 383.097 281.638 382.887 281.998 382.677 cv
282.038 382.656 li
299.698 372.537 309.128 386.627 309.128 386.627 cv
f
343.378 400.887 mo
338.788 369.737 310.088 386.066 309.148 386.617 cv
344.208 362.377 343.378 400.887 343.378 400.887 cv
f
369.708 407.887 mo
360.058 389.547 344.508 400.087 343.438 400.847 cv
363.718 384.606 369.708 407.887 369.708 407.887 cv
f
369.858 407.787 mo
370.018 407.677 370.308 407.486 370.708 407.247 cv
370.428 407.417 370.148 407.597 369.858 407.787 cv
f
395.438 411.557 mo
391.538 405.677 386.748 403.837 382.348 403.787 cv
377.438 403.727 373.028 405.887 370.958 407.097 cv
377.528 403.026 382.428 401.976 386.048 402.457 cv
386.078 402.457 li
394.138 403.526 395.828 412.137 395.438 411.557 cv
f
187.991 360.02 mo
187.991 360.02 224.211 362.403 217.628 382.811 cv
211.044 403.22 186.622 404.554 186.622 404.554 cv
186.622 404.554 248.27 375.153 187.991 360.02 cv
cp
f
223.044 411.582 mo
223.044 411.582 213.908 392.328 190.976 403.94 cv
190.976 403.94 211.378 395.943 223.044 411.582 cv
cp
f
242.705 418.554 mo
242.705 418.554 239.378 402.61 223.044 411.582 cv
223.044 411.582 239.366 407.554 242.705 418.554 cv
cp
f
267.425 418.554 mo
267.425 418.554 255.7 404.887 242.705 418.554 cv
242.705 418.554 255.51 408.748 267.425 418.554 cv
cp
f
369.708 407.887 mo
365.291 399.491 359.636 397.147 354.701 397.147 cv
348.855 397.147 344.018 400.435 343.438 400.847 cv
343.398 400.867 li
343.378 400.887 li
341.156 385.804 333.278 381.852 325.639 381.852 cv
317.501 381.852 309.633 386.333 309.148 386.617 cv
309.128 386.627 li
303.486 382.396 297.514 381.181 292.517 381.181 cv
286.035 381.181 281.193 383.224 280.838 383.377 cv
280.838 383.377 li
281.193 383.224 286.035 381.181 292.517 381.181 cv
297.514 381.181 303.486 382.396 309.128 386.627 cv
309.128 386.627 304.024 378.999 294.29 378.999 cv
290.796 378.999 286.703 379.983 282.038 382.656 cv
281.998 382.677 li
281.998 382.677 li
281.998 382.677 li
282.038 382.656 li
284.348 381.186 289.508 377.467 293.878 371.217 cv
298.158 365.107 300.368 359.887 298.038 352.547 cv
298.038 352.547 302.79 348.908 308.969 348.908 cv
311.22 348.908 313.658 349.39 316.128 350.706 cv
325.378 355.637 321.328 365.787 321.328 365.787 cv
321.328 365.787 329.086 361.441 337.182 361.441 cv
339.885 361.441 342.625 361.925 345.128 363.217 cv
355.128 368.387 356.548 383.387 356.548 383.387 cv
356.548 383.387 362.028 380.498 367.755 380.498 cv
370.619 380.498 373.544 381.22 375.878 383.387 cv
382.878 389.887 381.628 395.087 381.628 395.087 cv
381.628 395.087 383.755 393.658 386.023 393.658 cv
387.644 393.658 389.336 394.387 390.378 396.887 cv
392.565 402.145 387.592 402.462 386.33 402.462 cv
386.208 402.462 386.121 402.459 386.078 402.457 cv
386.078 402.457 li
386.048 402.457 li
385.517 402.387 384.96 402.349 384.373 402.349 cv
380.956 402.349 376.565 403.623 370.958 407.097 cv
372.999 405.903 377.316 403.786 382.145 403.786 cv
382.212 403.786 382.281 403.786 382.348 403.787 cv
382.348 403.787 li
382.348 403.787 li
382.281 403.786 382.212 403.786 382.145 403.786 cv
377.316 403.786 372.999 405.903 370.958 407.097 cv
370.858 407.156 li
370.708 407.247 li
370.428 407.417 370.148 407.597 369.858 407.787 cv
369.748 407.867 li
369.708 407.887 li
354.701 397.147 mo
359.636 397.147 365.291 399.491 369.708 407.887 cv
369.708 407.887 366.417 395.09 356.448 395.09 cv
352.971 395.09 348.681 396.648 343.438 400.847 cv
344.018 400.435 348.855 397.147 354.701 397.147 cv
370.708 407.247 mo
370.308 407.486 370.018 407.677 369.858 407.787 cv
370.148 407.597 370.428 407.417 370.708 407.247 cv
325.639 381.852 mo
333.278 381.852 341.156 385.804 343.378 400.887 cv
343.378 400.887 343.859 378.607 328.66 378.607 cv
323.877 378.607 317.54 380.814 309.148 386.617 cv
309.633 386.333 317.501 381.852 325.639 381.852 cv
.0358892 .00909438 0 0 cmyk
f
280.838 383.377 mo
281.447 382.85 296.1 370.113 296.096 356.982 cv
296.096 355.67 295.949 354.355 295.628 353.047 cv
298.038 352.547 li
298.038 352.547 li
300.368 359.887 298.158 365.107 293.878 371.217 cv
289.508 377.467 284.348 381.186 282.038 382.656 cv
281.998 382.677 li
281.998 382.677 li
281.638 382.887 281.278 383.097 280.918 383.327 cv
280.918 383.327 li
280.838 383.377 li
.156374 .0409552 0 0 cmyk
f
309.128 386.627 mo
303.486 382.396 297.514 381.181 292.517 381.181 cv
286.035 381.181 281.193 383.224 280.838 383.377 cv
280.838 383.377 li
280.918 383.327 li
280.918 383.327 li
281.278 383.097 281.638 382.887 281.998 382.677 cv
281.998 382.677 li
282.038 382.656 li
286.703 379.983 290.796 378.999 294.29 378.999 cv
304.024 378.999 309.128 386.627 309.128 386.627 cv
f
343.378 400.887 mo
341.156 385.804 333.278 381.852 325.639 381.852 cv
317.501 381.852 309.633 386.333 309.148 386.617 cv
317.54 380.814 323.877 378.607 328.66 378.607 cv
343.859 378.607 343.378 400.887 343.378 400.887 cv
f
369.708 407.887 mo
365.291 399.491 359.636 397.147 354.701 397.147 cv
348.855 397.147 344.018 400.435 343.438 400.847 cv
348.681 396.648 352.971 395.09 356.448 395.09 cv
366.417 395.09 369.708 407.887 369.708 407.887 cv
f
369.858 407.787 mo
370.018 407.677 370.308 407.486 370.708 407.247 cv
370.428 407.417 370.148 407.597 369.858 407.787 cv
f
370.958 407.097 mo
376.565 403.623 380.956 402.349 384.373 402.349 cv
384.96 402.349 385.517 402.387 386.048 402.457 cv
386.078 402.457 li
386.078 402.457 li
386.078 402.457 li
386.048 402.457 li
386.048 402.457 384.598 402.977 382.348 403.787 cv
382.348 403.787 li
382.281 403.786 382.212 403.786 382.145 403.786 cv
377.316 403.786 372.999 405.903 370.958 407.097 cv
f
321.324 156.194 mo
321.324 159.427 315.18 162.047 307.601 162.047 cv
300.022 162.047 293.878 159.427 293.878 156.194 cv
293.878 152.961 300.022 150.34 307.601 150.34 cv
315.18 150.34 321.324 152.961 321.324 156.194 cv
cp
f
487.27 87.3388 mo
487.27 106.916 469.361 122.787 447.27 122.787 cv
425.179 122.787 407.27 106.916 407.27 87.3388 cv
407.27 67.7617 425.179 51.8911 447.27 51.8911 cv
469.361 51.8911 487.27 67.7617 487.27 87.3388 cv
cp
0 0 0 0 cmyk
f
509.351 98.4131 mo
509.351 111.874 498.438 122.787 484.977 122.787 cv
471.516 122.787 460.603 111.874 460.603 98.4131 cv
460.603 84.9516 471.516 74.0395 484.977 74.0395 cv
498.438 74.0395 509.351 84.9516 509.351 98.4131 cv
cp
f
525.269 127.43 mo
525.269 145.368 508.257 159.909 487.27 159.909 cv
466.283 159.909 449.27 145.368 449.27 127.43 cv
449.27 109.492 466.283 94.9507 487.27 94.9507 cv
508.257 94.9507 525.269 109.492 525.269 127.43 cv
cp
f
554.604 141.348 mo
554.604 151.599 544.473 159.909 531.977 159.909 cv
519.48 159.909 509.351 151.599 509.351 141.348 cv
509.351 131.097 519.48 122.787 531.977 122.787 cv
544.473 122.787 554.604 131.097 554.604 141.348 cv
cp
f
570.604 144.225 mo
570.604 148.827 563.888 152.558 555.604 152.558 cv
547.319 152.558 540.604 148.827 540.604 144.225 cv
540.604 139.622 547.319 135.891 555.604 135.891 cv
563.888 135.891 570.604 139.622 570.604 144.225 cv
cp
f
439.936 109.442 mo
439.936 121.104 426.654 130.558 410.27 130.558 cv
393.885 130.558 380.603 121.104 380.603 109.442 cv
380.603 97.7807 393.885 88.3271 410.27 88.3271 cv
426.654 88.3271 439.936 97.7807 439.936 109.442 cv
cp
f
465.828 138.721 mo
465.828 154.892 452.719 168 436.549 168 cv
420.378 168 407.27 154.892 407.27 138.721 cv
407.27 122.551 420.378 109.442 436.549 109.442 cv
452.719 109.442 465.828 122.551 465.828 138.721 cv
cp
f
429.27 141.348 mo
429.27 151.599 414.645 159.909 396.603 159.909 cv
378.562 159.909 363.936 151.599 363.936 141.348 cv
363.936 131.097 378.562 122.787 396.603 122.787 cv
414.645 122.787 429.27 131.097 429.27 141.348 cv
cp
f
380.603 146.012 mo
380.603 153.687 372.246 159.909 361.936 159.909 cv
351.627 159.909 343.27 153.687 343.27 146.012 cv
343.27 138.336 351.627 132.114 361.936 132.114 cv
372.246 132.114 380.603 138.336 380.603 146.012 cv
cp
f
570.606 144.227 mo
570.606 148.828 563.887 152.558 555.606 152.558 cv
553.797 152.558 552.066 152.368 550.467 152.048 cv
546.366 156.798 539.616 159.908 531.977 159.908 cv
523.986 159.908 516.967 156.508 512.936 151.378 cv
508.436 154.898 502.946 157.508 496.856 158.858 cv
493.797 159.548 490.576 159.908 487.267 159.908 cv
477.847 159.908 469.227 156.968 462.586 152.108 cv
457.727 161.548 447.896 167.998 436.546 167.998 cv
427.356 167.998 419.157 163.758 413.787 157.128 cv
408.796 158.888 402.907 159.908 396.606 159.908 cv
388.566 159.908 381.217 158.258 375.526 155.518 cv
372.117 158.218 367.296 159.908 361.936 159.908 cv
356.776 159.908 352.126 158.358 348.747 155.838 cv
348.736 155.838 li
345.356 153.318 343.267 149.848 343.267 146.008 cv
343.267 142.838 344.697 139.908 347.106 137.578 cv
350.517 134.258 355.887 132.118 361.936 132.118 cv
363.927 132.118 365.836 132.348 367.626 132.778 cv
371.796 128.238 379.177 124.798 388.057 123.428 cv
383.427 119.707 380.606 114.808 380.606 109.438 cv
380.606 98.498 392.307 89.4878 407.296 88.4277 cv
407.296 88.3379 407.287 88.248 407.287 88.1577 cv
407.276 87.8877 407.267 87.6177 407.267 87.3379 cv
407.267 67.7578 425.177 51.8877 447.267 51.8877 cv
464.057 51.8877 478.427 61.0576 484.356 74.0576 cv
484.566 74.0478 484.767 74.0376 484.977 74.0376 cv
498.436 74.0376 509.347 84.9477 509.347 98.418 cv
509.347 99.2578 509.307 100.098 509.227 100.928 cv
517.807 106.128 523.746 114.298 525.007 123.688 cv
527.207 123.108 529.547 122.788 531.977 122.788 cv
542.196 122.788 550.826 128.338 553.637 135.968 cv
554.276 135.928 554.936 135.888 555.606 135.888 cv
563.887 135.888 570.606 139.618 570.606 144.227 cv
cp
f
560.175 150.05 mo
559.347 150.05 558.537 150.076 557.738 150.113 cv
554.265 144.064 543.605 139.658 530.982 139.658 cv
521.292 139.658 512.758 142.255 507.742 146.198 cv
505.7 144.591 503.594 143.206 501.509 142.208 cv
501.639 141.273 501.697 140.315 501.697 139.346 cv
501.697 123.997 485.923 111.556 466.461 111.556 cv
466.158 111.556 465.854 111.567 465.565 111.567 cv
456.977 96.7534 436.214 86.2964 411.938 86.2964 cv
409.827 86.2964 407.745 86.376 405.692 86.5244 cv
405.692 86.6269 405.706 86.7295 405.706 86.8325 cv
384.033 88.041 367.116 98.3159 367.116 110.791 cv
367.116 116.915 371.193 122.503 377.888 126.745 cv
365.049 128.308 354.378 132.23 348.349 137.408 cv
345.761 136.917 342.999 136.655 340.122 136.655 cv
331.374 136.655 323.61 139.095 318.68 142.881 cv
316.656 145.675 315.542 148.731 315.542 151.924 cv
315.542 156.201 317.538 160.226 321.037 163.704 cv
321.051 163.704 li
325.938 166.578 332.661 168.346 340.122 168.346 cv
347.872 168.346 354.841 166.418 359.771 163.339 cv
367.998 166.464 378.625 168.346 390.25 168.346 cv
399.359 168.346 407.875 167.183 415.09 165.175 cv
422.854 172.736 434.71 177.571 447.997 177.571 cv
464.408 177.571 479.48 168.504 484.017 160.381 cv
493.134 165.644 507.403 168.335 520.347 167.987 cv
523.627 168.699 527.215 169.097 530.982 169.097 cv
540.419 169.097 548.745 166.628 553.808 162.858 cv
555.796 163.118 557.935 163.267 560.175 163.267 cv
570.411 163.267 578.709 160.308 578.709 156.658 cv
578.709 153.008 570.411 150.05 560.175 150.05 cv
cp
.292454 .106081 0 0 cmyk
f
564.574 140.299 mo
559.986 140.299 555.668 140.701 551.879 141.408 cv
550.492 139.485 547.443 137.796 543.306 136.538 cv
543.35 136.317 543.38 136.095 543.38 135.87 cv
543.38 130.596 531.229 126.32 516.24 126.32 cv
516.023 126.322 li
516.161 125.933 516.24 125.536 516.24 125.133 cv
516.24 123.01 514.268 121.048 510.935 119.462 cv
511.701 118.58 512.116 117.643 512.116 116.672 cv
512.116 111.398 499.966 107.123 484.977 107.123 cv
481.191 107.123 477.588 107.396 474.314 107.889 cv
474.372 107.636 474.409 107.381 474.409 107.123 cv
474.409 102.59 465.432 98.7983 453.395 97.8208 cv
454.115 96.2104 454.524 94.4311 454.524 92.5532 cv
454.524 85.4092 448.732 79.6177 441.588 79.6177 cv
437.063 79.6177 433.086 81.9453 430.774 85.4648 cv
427.861 80.1162 421.364 76.3862 413.8 76.3862 cv
403.518 76.3862 395.183 83.2666 395.183 91.7544 cv
395.183 93.5762 395.587 95.3159 396.292 96.9375 cv
386.774 98.4209 380.131 101.771 380.131 105.67 cv
380.131 107.912 382.332 109.972 386.009 111.602 cv
380.455 113.35 376.956 115.891 376.956 118.719 cv
376.956 119.663 377.352 120.574 378.076 121.435 cv
372.453 122.095 367.649 123.383 364.339 125.064 cv
362.117 123.734 359.287 122.934 356.202 122.934 cv
349.502 122.934 343.993 126.694 343.333 131.511 cv
341.776 131.021 340.064 130.749 338.266 130.749 cv
331.121 130.749 325.33 135.025 325.33 140.299 cv
325.33 145.573 331.121 149.848 338.266 149.848 cv
344.006 149.848 348.866 147.085 350.557 143.265 cv
352.746 146.246 357.02 148.27 361.936 148.27 cv
368.911 148.27 374.581 144.193 374.847 139.093 cv
378.418 139.701 382.426 140.043 386.661 140.043 cv
396.254 140.043 404.678 138.29 409.504 135.646 cv
409.709 135.887 409.942 136.124 410.198 136.355 cv
409.686 137.088 409.41 137.853 409.41 138.642 cv
409.41 143.915 421.56 148.19 436.549 148.19 cv
451.537 148.19 463.688 143.915 463.688 138.642 cv
463.688 137.477 463.094 136.361 462.009 135.329 cv
466.104 136.201 470.906 136.704 476.042 136.704 cv
480.787 136.704 485.246 136.274 489.127 135.521 cv
489.114 135.637 489.102 135.753 489.102 135.87 cv
489.102 138.758 492.751 141.344 498.509 143.095 cv
498.465 143.316 498.435 143.539 498.435 143.764 cv
498.435 149.038 510.586 153.314 525.574 153.314 cv
530.162 153.314 534.48 152.911 538.269 152.204 cv
541.252 156.338 551.897 159.397 564.574 159.397 cv
579.563 159.397 591.714 155.122 591.714 149.848 cv
591.714 144.574 579.563 140.299 564.574 140.299 cv
cp
.156374 .0409552 0 0 cmyk
f
445.542 122.787 mo
445.542 122.787 459.251 123.824 458.521 132.114 cv
458.521 132.114 457.292 124.918 445.542 122.787 cv
cp
0 0 0 0 cmyk
f
444.002 98.4131 mo
442.776 98.0425 458.206 97.9809 463.499 109.943 cv
468.792 121.904 457.042 125.154 457.042 125.154 cv
457.042 125.154 475.462 107.921 444.002 98.4131 cv
cp
f
386.009 111.602 mo
386.009 111.602 409.042 109.534 414.042 118.719 cv
419.042 127.904 414.042 130.558 414.042 130.558 cv
414.042 130.558 420.042 129.904 424.792 133.154 cv
429.542 136.404 426.105 140.299 426.105 140.299 cv
426.105 140.299 428.542 131.574 413.042 132.114 cv
413.042 132.114 422.226 111.799 386.009 111.602 cv
cp
f
888.402 147.473 mo
888.402 149.333 886.362 150.993 883.192 152.063 cv
880.852 152.853 877.902 153.323 874.682 153.323 cv
870.522 153.323 866.812 152.533 864.292 151.293 cv
860.902 153.893 856.162 155.513 850.902 155.513 cv
845.542 155.513 840.722 153.823 837.322 151.133 cv
831.632 153.863 824.272 155.513 816.232 155.513 cv
808.102 155.513 800.662 153.823 794.942 151.024 cv
790.132 152.833 784.851 153.843 779.292 153.843 cv
778.431 153.843 777.582 153.813 776.732 153.763 cv
772.942 156.193 768.442 157.613 763.601 157.613 cv
758.762 157.613 754.252 156.193 750.462 153.763 cv
745.102 159.803 737.282 163.603 728.572 163.603 cv
719.382 163.603 711.182 159.363 705.813 152.743 cv
700.822 154.503 694.931 155.513 688.632 155.513 cv
680.592 155.513 673.232 153.863 667.542 151.133 cv
667.242 151.373 666.932 151.603 666.602 151.823 cv
664.992 152.933 663.122 153.833 661.072 154.463 cv
658.882 155.143 656.482 155.513 653.962 155.513 cv
648.702 155.513 643.962 153.893 640.572 151.293 cv
638.772 152.183 636.372 152.833 633.622 153.133 cv
632.522 153.253 631.372 153.323 630.182 153.323 cv
622.601 153.323 616.462 150.703 616.462 147.473 cv
616.462 144.243 622.601 141.623 630.182 141.623 cv
632.002 141.623 633.732 141.773 635.322 142.043 cv
635.322 141.903 635.292 141.763 635.292 141.623 cv
635.292 133.943 643.652 127.723 653.962 127.723 cv
655.952 127.723 657.862 127.953 659.652 128.383 cv
663.822 123.843 671.202 120.403 680.082 119.043 cv
675.442 115.313 672.632 110.413 672.632 105.053 cv
672.632 94.1031 684.332 85.103 699.322 84.0435 cv
699.313 83.6733 699.292 83.313 699.292 82.9433 cv
699.292 63.3731 717.202 47.5034 739.292 47.5034 cv
756.082 47.5034 770.452 56.6732 776.382 69.663 cv
776.582 69.6534 776.792 69.643 777.002 69.643 cv
788.552 69.643 798.222 77.683 800.732 88.4731 cv
811.892 94.7633 819.292 105.813 819.292 118.393 cv
819.292 118.473 li
830.582 119.073 840.202 122.933 845.212 128.383 cv
847.002 127.953 848.912 127.723 850.902 127.723 cv
861.212 127.723 869.572 133.943 869.572 141.623 cv
869.572 141.763 869.542 141.903 869.542 142.043 cv
871.132 141.773 872.862 141.623 874.682 141.623 cv
882.262 141.623 888.402 144.243 888.402 147.473 cv
.156374 .0409552 0 0 cmyk
f
780.531 59.5058 mo
780.531 68.5278 771.975 75.8418 761.419 75.8418 cv
750.863 75.8418 742.307 68.5278 742.307 59.5058 cv
742.307 50.4839 750.863 43.1704 761.419 43.1704 cv
771.975 43.1704 780.531 50.4839 780.531 59.5058 cv
cp
0 0 0 0 cmyk
f
714.392 124.278 mo
714.387 124.113 li
714.387 104.536 732.456 88.6655 754.746 88.6655 cv
771.685 88.6655 786.178 97.8359 792.164 110.829 cv
792.373 110.824 792.58 110.813 792.791 110.813 cv
793.575 110.813 794.35 110.854 795.116 110.925 cv
799.376 106.543 802.001 100.587 802.001 94.0205 cv
802.001 80.5591 790.991 69.647 777.409 69.647 cv
777.198 69.647 776.99 69.6572 776.781 69.6626 cv
770.796 56.6694 756.303 47.4985 739.363 47.4985 cv
717.074 47.4985 699.005 63.3691 699.005 82.9463 cv
699.005 83.313 699.023 83.6758 699.036 84.04 cv
683.911 85.1006 672.099 94.1015 672.099 105.05 cv
672.099 116.711 685.5 126.165 702.031 126.165 cv
706.441 126.165 710.623 125.486 714.392 124.278 cv
cp
f
729.162 121.759 mo
729.162 131.065 721.618 138.61 712.311 138.61 cv
703.005 138.61 695.461 131.065 695.461 121.759 cv
695.461 112.453 703.005 104.908 712.311 104.908 cv
721.618 104.908 729.162 112.453 729.162 121.759 cv
cp
.156374 .0409552 0 0 cmyk
f
740.935 103.794 mo
740.935 109.87 736.01 114.796 729.934 114.796 cv
723.857 114.796 718.932 109.87 718.932 103.794 cv
718.932 97.7173 723.857 92.792 729.934 92.792 cv
736.01 92.792 740.935 97.7173 740.935 103.794 cv
cp
f
783.986 94.8291 mo
783.986 102.724 776.251 109.123 766.709 109.123 cv
757.167 109.123 749.432 102.724 749.432 94.8291 cv
749.432 86.9346 757.167 80.5346 766.709 80.5346 cv
776.251 80.5346 783.986 86.9346 783.986 94.8291 cv
cp
f
874.682 151.313 mo
872.862 151.313 871.132 151.403 869.542 151.573 cv
869.542 151.483 869.572 151.403 869.572 151.313 cv
869.572 146.753 861.212 143.053 850.902 143.053 cv
848.912 143.053 847.002 143.193 845.212 143.443 cv
840.202 140.203 830.582 137.913 819.292 137.563 cv
819.292 137.513 li
819.292 125.873 801.382 116.433 779.292 116.433 cv
761.342 116.433 746.152 122.663 741.092 131.243 cv
737.292 130.173 733.052 129.573 728.572 129.573 cv
717.502 129.573 707.872 133.233 702.892 138.613 cv
698.582 137.903 693.742 137.513 688.632 137.513 cv
670.582 137.513 655.962 142.443 655.962 148.543 cv
655.962 148.713 655.972 148.873 655.992 149.043 cv
654.112 148.893 652.072 148.813 649.942 148.813 cv
640.662 148.813 633.132 150.373 633.132 152.293 cv
633.132 152.583 633.302 152.863 633.622 153.133 cv
636.372 152.833 638.772 152.183 640.572 151.293 cv
643.962 153.893 648.702 155.513 653.962 155.513 cv
656.482 155.513 658.882 155.143 661.072 154.463 cv
661.101 154.479 661.242 154.436 661.451 154.357 cv
662.161 154.557 662.99 154.678 663.885 154.678 cv
666.466 154.678 668.556 153.72 668.556 152.538 cv
668.556 152.02 668.141 151.553 667.475 151.183 cv
667.542 151.133 li
673.232 153.863 680.592 155.513 688.632 155.513 cv
694.931 155.513 700.822 154.503 705.813 152.743 cv
711.182 159.363 719.382 163.603 728.572 163.603 cv
737.282 163.603 745.102 159.803 750.462 153.763 cv
754.252 156.193 758.762 157.613 763.601 157.613 cv
768.442 157.613 772.942 156.193 776.732 153.763 cv
777.582 153.813 778.431 153.843 779.292 153.843 cv
784.851 153.843 790.132 152.833 794.942 151.024 cv
800.662 153.823 808.102 155.513 816.232 155.513 cv
824.272 155.513 831.632 153.863 837.322 151.133 cv
840.722 153.823 845.542 155.513 850.902 155.513 cv
856.162 155.513 860.902 153.893 864.292 151.293 cv
866.812 152.533 870.522 153.323 874.682 153.323 cv
877.902 153.323 880.852 152.853 883.192 152.063 cv
880.852 151.593 877.902 151.313 874.682 151.313 cv
.292454 .106081 0 0 cmyk
f
735.333 87.9223 mo
743.798 86.8349 752.15 91.4145 755.28 99.5259 cv
756.783 103.42 756.83 107.517 755.72 111.271 cv
758.795 106.879 759.803 101.524 757.926 96.6596 cv
754.801 88.56 744.853 84.8091 735.333 87.9223 cv
cp
0 0 0 0 cmyk
f
729.162 93.1279 mo
732.933 92.7895 736.792 95.2978 738.396 99.4536 cv
739.166 101.449 739.287 103.51 738.882 105.371 cv
740.153 103.237 740.474 100.57 739.512 98.0771 cv
737.911 93.9272 733.356 91.7964 729.162 93.1279 cv
cp
f
733.571 128.718 mo
737.342 128.38 741.202 130.888 742.806 135.044 cv
743.575 137.039 743.697 139.101 743.291 140.961 cv
744.563 138.828 744.883 136.16 743.922 133.668 cv
742.32 129.518 737.766 127.387 733.571 128.718 cv
cp
.156374 .0409552 0 0 cmyk
f
869.541 142.79 mo
867.884 146.268 863.093 148.448 857.727 147.85 cv
855.152 147.563 852.852 146.674 851.054 145.419 cv
852.683 147.567 855.402 149.137 858.62 149.496 cv
863.977 150.093 868.731 147.119 869.541 142.79 cv
cp
.292454 .106081 0 0 cmyk
f
663.634 140.971 mo
662.195 144.472 658.189 146.74 653.763 146.247 cv
651.638 146.01 649.752 145.167 648.288 143.95 cv
649.595 146.061 651.814 147.576 654.469 147.872 cv
658.89 148.365 662.881 145.306 663.634 140.971 cv
cp
f
640.805 146.181 mo
639.366 149.683 635.361 151.951 630.934 151.458 cv
628.809 151.221 626.923 150.378 625.459 149.16 cv
626.766 151.272 628.985 152.787 631.641 153.083 cv
636.061 153.575 640.052 150.517 640.805 146.181 cv
cp
f
713.692 105.216 mo
716.625 104.952 719.627 106.9 720.873 110.13 cv
721.471 111.681 721.565 113.283 721.249 114.729 cv
722.239 113.071 722.489 110.997 721.741 109.061 cv
720.497 105.835 716.955 104.18 713.692 105.216 cv
cp
0 0 0 0 cmyk
f
869.541 141.765 mo
869.541 145.698 863.771 148.887 856.653 148.887 cv
849.535 148.887 843.766 145.698 843.766 141.765 cv
843.766 137.831 849.535 134.643 856.653 134.643 cv
863.771 134.643 869.541 137.831 869.541 141.765 cv
cp
.156374 .0409552 0 0 cmyk
f
799.099 119.137 mo
799.099 122.496 793.614 125.22 786.849 125.22 cv
780.083 125.22 774.599 122.496 774.599 119.137 cv
774.599 115.777 780.083 113.053 786.849 113.053 cv
793.614 113.053 799.099 115.777 799.099 119.137 cv
cp
f
778.794 117.887 mo
778.794 121.246 773.31 123.97 766.544 123.97 cv
759.778 123.97 754.294 121.246 754.294 117.887 cv
754.294 114.527 759.778 111.803 766.544 111.803 cv
773.31 111.803 778.794 114.527 778.794 117.887 cv
cp
f
780.472 146.916 mo
772.882 146.916 764.012 144.801 754.294 138.61 cv
754.294 138.61 766.723 143.117 781.518 143.117 cv
789.953 143.117 799.156 141.652 807.266 137.053 cv
807.266 137.053 796.858 146.916 780.472 146.916 cv
.368719 .157046 0 0 cmyk
f
724.671 149.898 mo
719.465 149.898 712.904 148.969 704.932 146.181 cv
704.932 146.181 717.501 148.016 727.913 148.016 cv
733.12 148.016 737.785 147.557 740.072 146.181 cv
740.072 146.181 735.082 149.898 724.671 149.898 cv
f
666.901 151.157 mo
663.945 151.157 661.432 149.658 661.432 149.658 cv
662.68 149.912 664.078 150.01 665.494 150.01 cv
670.283 150.01 675.265 148.887 675.265 148.887 cv
675.265 148.887 670.766 150.887 667.542 151.133 cv
667.542 151.133 li
667.326 151.15 667.113 151.157 666.901 151.157 cv
f
699.036 84.04 mo
699.036 84.04 716.266 83.3867 714.766 96.2197 cv
714.766 96.2197 715.474 86.3603 699.036 84.04 cv
cp
.156374 .0409552 0 0 cmyk
f
760.213 73.7407 mo
770.928 76.1216 775.323 71.4096 776.683 69.3623 cv
773.566 73.2763 760.213 73.7407 760.213 73.7407 cv
cp
f
776.765 69.7002 mo
776.781 69.6626 li
776.765 69.7002 li
cp
f
717.935 59.5058 mo
717.935 59.5058 723.935 53.3867 729.934 54.3867 cv
735.932 55.3867 735.333 62.1572 735.333 62.1572 cv
735.333 62.1572 744.981 61.8667 744.099 70.0532 cv
744.099 70.0532 749.015 76.0532 742.307 79.3867 cv
742.307 79.3867 746.849 73.3867 743.599 70.3032 cv
743.599 70.3032 742.136 63.6367 734.617 62.3867 cv
734.617 62.3867 735.603 49.542 717.935 59.5058 cv
cp
f
295.145 223.23 mo
295.145 226.199 287.87 228.605 278.895 228.605 cv
269.92 228.605 262.645 226.199 262.645 223.23 cv
262.645 220.262 269.92 217.855 278.895 217.855 cv
287.87 217.855 295.145 220.262 295.145 223.23 cv
cp
f
299.029 219.339 mo
299.029 221.945 286.545 224.058 271.145 224.058 cv
255.745 224.058 243.261 221.945 243.261 219.339 cv
243.261 216.734 255.745 214.622 271.145 214.622 cv
286.545 214.622 299.029 216.734 299.029 219.339 cv
cp
.292454 .106081 0 0 cmyk
f
241.145 195.786 mo
239.38 192.023 232.938 189.23 225.24 189.23 cv
223.823 189.23 222.456 189.335 221.145 189.512 cv
221.15 189.418 221.172 189.325 221.172 189.23 cv
221.172 186.727 219.133 184.481 215.895 182.905 cv
216.371 182.206 216.645 181.429 216.645 180.605 cv
216.645 177.62 213.15 175.2 208.839 175.2 cv
204.528 175.2 201.033 177.62 201.033 180.605 cv
201.049 180.836 li
193.787 181.724 188.37 185.141 188.37 189.23 cv
188.379 189.319 li
183.518 189.668 179.342 191.132 176.809 193.21 cv
175.371 192.982 173.849 192.856 172.27 192.856 cv
164.067 192.856 157.343 196.165 156.637 200.382 cv
155.411 199.772 153.912 199.41 152.288 199.41 cv
148.16 199.41 144.813 201.727 144.813 204.585 cv
144.813 207.444 148.16 209.761 152.288 209.761 cv
155.752 209.761 158.657 208.127 159.504 205.913 cv
162.353 208.005 167.003 209.374 172.27 209.374 cv
177.506 209.374 182.131 208.02 184.984 205.949 cv
186.742 206.287 188.632 206.481 190.612 206.481 cv
193.666 206.481 196.516 206.034 198.964 205.27 cv
199.832 209.603 206.8 212.981 215.271 212.981 cv
220.032 212.981 224.307 211.907 227.303 210.203 cv
230.299 211.907 234.573 212.981 239.335 212.981 cv
248.393 212.981 255.736 209.119 255.736 204.355 cv
255.736 199.914 249.35 196.26 241.145 195.786 cv
cp
0 0 0 0 cmyk
f
278.895 207.045 mo
272.682 207.045 267.645 209.465 267.645 212.45 cv
267.645 215.436 272.682 217.855 278.895 217.855 cv
285.108 217.855 290.145 215.436 290.145 212.45 cv
290.145 209.465 285.108 207.045 278.895 207.045 cv
cp
f
239.834 212.45 mo
239.834 220.511 233.3 227.045 225.24 227.045 cv
217.179 227.045 210.645 220.511 210.645 212.45 cv
210.645 204.39 217.179 197.855 225.24 197.855 cv
233.3 197.855 239.834 204.39 239.834 212.45 cv
cp
.156374 .0409552 0 0 cmyk
f
220.9 216.48 mo
220.9 223.177 208.416 228.605 193.016 228.605 cv
177.616 228.605 165.132 223.177 165.132 216.48 cv
165.132 209.784 177.616 204.355 193.016 204.355 cv
208.416 204.355 220.9 209.784 220.9 216.48 cv
cp
f
298.519 214.425 mo
283.198 215.986 270.993 219.352 271.256 221.945 cv
271.267 222.042 271.3 222.137 271.344 222.229 cv
266.248 221.292 258.939 220.704 250.818 220.704 cv
239.231 220.704 229.296 221.899 225.086 223.602 cv
220.101 222.811 213.403 222.327 206.033 222.327 cv
200.279 222.327 194.933 222.622 190.492 223.127 cv
190.564 222.879 190.612 222.628 190.612 222.372 cv
190.612 219.39 185.597 216.901 178.9 216.287 cv
190.441 215.708 198.864 213.903 198.864 211.763 cv
198.864 209.157 186.38 207.045 170.98 207.045 cv
155.58 207.045 143.096 209.157 143.096 211.763 cv
143.096 213.468 148.443 214.961 156.454 215.79 cv
152.677 216.921 150.206 218.766 150.206 220.855 cv
150.206 224.298 156.889 227.089 165.132 227.089 cv
165.393 227.089 165.648 227.079 165.906 227.073 cv
168.527 228.025 171.941 228.605 175.687 228.605 cv
176.949 228.605 178.168 228.533 179.339 228.41 cv
181.909 229.85 188.436 230.999 196.784 231.496 cv
200.723 233.293 210.943 234.574 222.934 234.574 cv
237.77 234.574 249.896 232.613 250.763 230.139 cv
250.818 230.14 li
266.218 230.14 278.702 228.027 278.702 225.421 cv
278.702 225.029 278.413 224.648 277.879 224.283 cv
283.074 224.81 290.848 224.691 299.475 223.813 cv
314.795 222.252 326.855 217.698 326.591 215.106 cv
326.327 212.514 313.839 212.865 298.519 214.425 cv
cp
.292454 .106081 0 0 cmyk
f
326.591 215.106 mo
326.591 218.281 308.457 220.855 286.087 220.855 cv
263.717 220.855 245.582 218.281 245.582 215.106 cv
245.582 211.931 263.717 209.356 286.087 209.356 cv
308.457 209.356 326.591 211.931 326.591 215.106 cv
cp
.156374 .0409552 0 0 cmyk
f
206.033 206.481 mo
206.033 211.244 193.803 215.106 178.716 215.106 cv
163.629 215.106 151.399 211.244 151.399 206.481 cv
151.399 201.717 163.629 197.855 178.716 197.855 cv
193.803 197.855 206.033 201.717 206.033 206.481 cv
cp
f
156.785 207.989 mo
156.785 209.996 150.48 211.623 142.703 211.623 cv
134.925 211.623 128.621 209.996 128.621 207.989 cv
128.621 205.982 134.925 204.355 142.703 204.355 cv
150.48 204.355 156.785 205.982 156.785 207.989 cv
cp
f
244.473 224.355 mo
244.473 229.05 233.919 232.855 220.9 232.855 cv
207.881 232.855 197.328 229.05 197.328 224.355 cv
197.328 219.661 207.881 215.855 220.9 215.855 cv
233.919 215.855 244.473 219.661 244.473 224.355 cv
cp
f
271.145 212.981 mo
271.145 220.436 260.771 226.481 247.973 226.481 cv
235.175 226.481 224.8 220.436 224.8 212.981 cv
224.8 205.525 235.175 199.481 247.973 199.481 cv
260.771 199.481 271.145 205.525 271.145 212.981 cv
cp
f
281.443 212.981 mo
279.344 212.981 277.367 213.204 275.608 213.59 cv
276.535 212.796 277.068 211.898 277.068 210.944 cv
277.068 207.746 271.191 205.153 263.943 205.153 cv
256.694 205.153 250.818 207.746 250.818 210.944 cv
250.818 214.142 256.694 216.734 263.943 216.734 cv
266.042 216.734 268.018 216.512 269.778 216.125 cv
268.851 216.919 268.318 217.817 268.318 218.772 cv
268.318 221.97 274.194 224.563 281.443 224.563 cv
288.691 224.563 294.568 221.97 294.568 218.772 cv
294.568 215.574 288.691 212.981 281.443 212.981 cv
cp
.292454 .106081 0 0 cmyk
f
278.895 205.153 mo
278.895 209.183 271.973 212.45 263.434 212.45 cv
254.895 212.45 247.973 209.183 247.973 205.153 cv
247.973 201.122 254.895 197.855 263.434 197.855 cv
271.973 197.855 278.895 201.122 278.895 205.153 cv
cp
.156374 .0409552 0 0 cmyk
f
222.596 205.612 mo
222.596 205.612 233.231 199.523 240.486 215.128 cv
240.486 215.128 234.268 203.986 222.596 205.612 cv
cp
0 0 0 0 cmyk
f
185.645 201.022 mo
185.645 201.022 195.01 201.522 197.328 203.189 cv
199.645 204.855 196.979 211.057 189.145 211.623 cv
189.145 211.623 207.645 204.855 185.645 201.022 cv
cp
f
211.979 212.547 mo
211.979 212.547 219.145 211.273 225.812 212.981 cv
232.479 214.689 233.812 217.855 233.812 217.855 cv
233.812 217.855 229.812 213.239 211.979 212.547 cv
cp
f
210.645 182.689 mo
210.645 182.689 217.645 182.855 218.812 188.022 cv
219.979 193.189 211.979 197.022 211.979 197.022 cv
211.979 197.022 224.479 186.855 210.645 182.689 cv
cp
.156374 .0409552 0 0 cmyk
f
206.812 187.689 mo
206.201 187.122 216.812 192.689 211.979 197.855 cv
207.145 203.022 199.866 201.022 199.866 201.022 cv
199.866 201.022 220.645 200.522 206.812 187.689 cv
cp
f
460.237 213.746 mo
460.237 218.124 455.717 221.673 450.141 221.673 cv
444.565 221.673 440.044 218.124 440.044 213.746 cv
440.044 209.368 444.565 205.819 450.141 205.819 cv
455.717 205.819 460.237 209.368 460.237 213.746 cv
cp
f
456.605 222.137 mo
456.605 225.258 451.287 227.788 444.726 227.788 cv
438.165 227.788 432.847 225.258 432.847 222.137 cv
432.847 219.016 438.165 216.485 444.726 216.485 cv
451.287 216.485 456.605 219.016 456.605 222.137 cv
cp
f
444.643 219.387 mo
444.643 221.555 440.95 223.312 436.392 223.312 cv
431.836 223.312 428.142 221.555 428.142 219.387 cv
428.142 217.219 431.836 215.461 436.392 215.461 cv
440.95 215.461 444.643 217.219 444.643 219.387 cv
cp
f
436.392 226.324 mo
436.392 228.492 431.502 230.249 425.469 230.249 cv
419.435 230.249 414.544 228.492 414.544 226.324 cv
414.544 224.156 419.435 222.399 425.469 222.399 cv
431.502 222.399 436.392 224.156 436.392 226.324 cv
cp
f
426.686 230.249 mo
426.686 232.417 421.795 234.174 415.762 234.174 cv
409.729 234.174 404.838 232.417 404.838 230.249 cv
404.838 228.081 409.729 226.324 415.762 226.324 cv
421.795 226.324 426.686 228.081 426.686 230.249 cv
cp
f
442.686 228.637 mo
442.686 230.805 437.795 232.562 431.762 232.562 cv
425.729 232.562 420.838 230.805 420.838 228.637 cv
420.838 226.469 425.729 224.711 431.762 224.711 cv
437.795 224.711 442.686 226.469 442.686 228.637 cv
cp
f
523.938 221.673 mo
523.938 224.242 521.295 226.324 518.033 226.324 cv
514.771 226.324 512.128 224.242 512.128 221.673 cv
512.128 219.105 514.771 217.022 518.033 217.022 cv
521.295 217.022 523.938 219.105 523.938 221.673 cv
cp
0 0 0 0 cmyk
f
479.878 201.955 mo
479.878 210.967 472.572 218.272 463.56 218.272 cv
454.548 218.272 447.242 210.967 447.242 201.955 cv
447.242 192.942 454.548 185.637 463.56 185.637 cv
472.572 185.637 479.878 192.942 479.878 201.955 cv
cp
f
493.42 218.272 mo
493.42 227.284 485.514 234.59 475.762 234.59 cv
466.01 234.59 458.104 227.284 458.104 218.272 cv
458.104 209.26 466.01 201.955 475.762 201.955 cv
485.514 201.955 493.42 209.26 493.42 218.272 cv
cp
f
509.938 222.137 mo
509.938 231.149 502.033 238.455 492.281 238.455 cv
482.529 238.455 474.623 231.149 474.623 222.137 cv
474.623 213.124 482.529 205.819 492.281 205.819 cv
502.033 205.819 509.938 213.124 509.938 222.137 cv
cp
f
540.048 231.827 mo
540.048 237.517 531.948 242.137 521.968 242.137 cv
519.388 242.137 516.948 241.827 514.727 241.277 cv
512.477 247.657 504.468 252.387 494.908 252.387 cv
492.868 252.387 490.897 252.167 489.038 251.767 cv
486.738 255.087 481.848 257.387 476.158 257.387 cv
469.498 257.387 463.918 254.227 462.338 249.967 cv
461.078 250.127 459.768 250.217 458.438 250.217 cv
450.528 250.217 443.688 247.186 440.318 242.757 cv
439.268 243.157 438.108 243.387 436.888 243.387 cv
435.648 243.387 434.468 243.146 433.408 242.737 cv
431.938 243.146 430.228 243.387 428.398 243.387 cv
424.578 243.387 421.288 242.357 419.708 240.867 cv
417.918 241.667 415.718 242.137 413.338 242.137 cv
410.998 242.137 408.828 241.677 407.048 240.907 cv
405.678 241.387 403.808 241.677 401.758 241.677 cv
397.538 241.677 394.128 240.456 394.128 238.956 cv
394.128 237.447 397.538 236.227 401.758 236.227 cv
401.998 236.227 402.238 236.237 402.478 236.247 cv
402.418 235.967 402.378 235.677 402.378 235.387 cv
402.378 231.657 407.288 228.637 413.338 228.637 cv
415.298 228.637 417.138 228.956 418.738 229.517 cv
418.938 226.247 422.288 223.567 426.678 223.007 cv
426.488 222.097 426.378 221.177 426.378 220.227 cv
426.378 211.387 434.748 204.217 445.068 204.217 cv
445.268 204.217 445.458 204.237 445.658 204.247 cv
445.478 203.327 445.378 202.387 445.378 201.417 cv
445.378 193.396 451.888 186.887 459.908 186.887 cv
467.938 186.887 474.438 193.396 474.438 201.417 cv
474.438 202.387 474.348 203.327 474.168 204.237 cv
474.438 204.217 li
479.188 204.217 483.438 206.297 486.368 209.587 cv
488.977 208.827 491.857 208.387 494.908 208.387 cv
506.218 208.387 515.378 214.206 515.378 221.387 cv
515.378 221.677 515.338 221.967 515.308 222.247 cv
517.368 221.787 519.607 221.517 521.968 221.517 cv
531.948 221.517 540.048 226.137 540.048 231.827 cv
cp
.156374 .0409552 0 0 cmyk
f
483.876 200.263 mo
483.876 202.818 481.805 204.889 479.249 204.889 cv
476.695 204.889 474.623 202.818 474.623 200.263 cv
474.623 197.708 476.695 195.637 479.249 195.637 cv
481.805 195.637 483.876 197.708 483.876 200.263 cv
cp
0 0 0 0 cmyk
f
514.727 241.277 mo
512.477 247.657 504.468 252.387 494.908 252.387 cv
492.868 252.387 490.897 252.167 489.038 251.767 cv
486.738 255.087 481.848 257.387 476.158 257.387 cv
469.498 257.387 463.918 254.227 462.338 249.967 cv
461.078 250.127 459.768 250.217 458.438 250.217 cv
450.528 250.217 443.688 247.186 440.318 242.757 cv
439.268 243.157 438.108 243.387 436.888 243.387 cv
435.648 243.387 434.468 243.146 433.408 242.737 cv
431.938 243.146 430.228 243.387 428.398 243.387 cv
424.578 243.387 421.288 242.357 419.708 240.867 cv
417.918 241.667 415.718 242.137 413.338 242.137 cv
410.998 242.137 408.828 241.677 407.048 240.907 cv
405.678 241.387 403.808 241.677 401.758 241.677 cv
397.538 241.677 394.128 240.456 394.128 238.956 cv
394.128 237.447 397.538 236.227 401.758 236.227 cv
401.998 236.227 402.238 236.237 402.478 236.247 cv
402.418 235.967 402.378 235.677 402.378 235.387 cv
402.378 231.657 407.288 228.637 413.338 228.637 cv
415.298 228.637 417.138 228.956 418.738 229.517 cv
418.938 226.247 422.288 223.567 426.678 223.007 cv
426.488 222.097 426.378 221.177 426.378 220.227 cv
426.378 211.387 434.748 204.217 445.068 204.217 cv
458.378 213.137 454.308 220.577 454.308 220.577 cv
454.308 220.577 466.128 222.007 471.628 226.327 cv
476.898 230.456 472.068 234.257 471.658 234.567 cv
472.308 234.247 483.318 228.967 489.628 234.337 cv
495.758 239.567 493.698 241.456 493.438 241.667 cv
493.938 241.337 503.517 235.107 508.628 237.587 cv
513.878 240.137 514.727 241.277 514.727 241.277 cv
cp
.292454 .106081 0 0 cmyk
f
467.088 220.086 mo
467.088 222.254 463.394 224.012 458.837 224.012 cv
454.28 224.012 450.586 222.254 450.586 220.086 cv
450.586 217.919 454.28 216.162 458.837 216.162 cv
463.394 216.162 467.088 217.919 467.088 220.086 cv
cp
.156374 .0409552 0 0 cmyk
f
527.019 237.637 mo
527.019 239.805 522.129 241.562 516.096 241.562 cv
510.063 241.562 505.172 239.805 505.172 237.637 cv
505.172 235.469 510.063 233.712 516.096 233.712 cv
522.129 233.712 527.019 235.469 527.019 237.637 cv
cp
f
505.724 237.637 mo
505.724 239.805 500.833 241.562 494.8 241.562 cv
488.767 241.562 483.876 239.805 483.876 237.637 cv
483.876 235.469 488.767 233.712 494.8 233.712 cv
500.833 233.712 505.724 235.469 505.724 237.637 cv
cp
f
488.003 213.746 mo
488.003 213.746 498.253 213.262 496.253 226.324 cv
496.253 226.324 496.753 214.73 488.003 213.746 cv
cp
.292454 .106081 0 0 cmyk
f
506.503 230.249 mo
506.759 230.556 503.378 223.137 496.253 226.324 cv
496.253 226.324 501.378 224.112 506.503 230.249 cv
cp
f
516.096 234.59 mo
516.096 234.59 514.602 226.565 506.503 230.249 cv
506.503 230.249 513.399 227.743 516.096 234.59 cv
cp
f
463.56 204.889 mo
463.56 204.889 468.253 204.637 470.878 209.262 cv
473.503 213.887 470.84 222.893 464.609 222.89 cv
464.609 222.89 478.367 212.641 463.56 204.889 cv
cp
f
453.628 194.637 mo
453.628 194.637 458.128 191.637 462.253 195.637 cv
466.378 199.637 463.56 204.889 463.56 204.889 cv
463.56 204.889 466.378 192.262 453.628 194.637 cv
cp
f
545.227 306.587 mo
544.928 306.393 544.592 306.205 544.232 306.018 cv
544.733 305.992 545.229 305.948 545.709 305.867 cv
545.502 306.097 545.344 306.337 545.227 306.587 cv
cp
596.793 310.097 mo
592.891 310.097 589.938 310.39 587.732 310.893 cv
585.297 308.993 579.896 307.229 573.111 307.122 cv
572.142 306.34 570.665 305.578 568.796 304.939 cv
570.405 305.205 572.068 305.347 573.771 305.347 cv
587.719 305.347 599.025 295.973 599.025 284.41 cv
599.025 272.846 587.719 263.472 573.771 263.472 cv
562.852 263.472 553.554 269.218 550.03 277.261 cv
543.104 278.901 537.918 283.94 537.268 290.068 cv
534.662 291.652 532.953 294.188 532.899 297.061 cv
532.348 296.92 531.765 296.842 531.159 296.842 cv
527.828 296.842 525.128 299.141 525.128 301.976 cv
525.128 302.09 525.139 302.203 525.147 302.316 cv
524.162 301.72 522.96 301.365 521.659 301.365 cv
518.688 301.365 516.226 303.194 515.726 305.6 cv
515.028 306.228 514.727 306.948 514.727 307.722 cv
514.727 310.225 517.052 313.675 526.703 313.675 cv
527.345 313.675 527.977 313.665 528.601 313.648 cv
528.997 313.661 529.39 313.675 529.814 313.675 cv
537.354 313.675 543.76 312.435 546.211 310.7 cv
547.737 312.324 550.907 313.675 556.947 313.675 cv
558.071 313.675 559.168 313.646 560.234 313.593 cv
561.357 315.605 564.477 317.523 571.673 317.523 cv
575.702 317.523 579.401 317.166 582.357 316.572 cv
583.06 319.301 586.326 322.347 595.882 322.347 cv
606.912 322.347 615.852 319.96 615.852 317.017 cv
615.852 314.073 607.822 310.097 596.793 310.097 cv
cp
.156374 .0409552 0 0 cmyk
f
630.713 283.305 mo
625.549 283.305 620.894 284.81 617.57 287.221 cv
617.308 282.766 613.146 279.222 608.038 279.222 cv
605.72 279.222 603.595 279.952 601.939 281.165 cv
598.267 270.854 588.426 263.472 576.855 263.472 cv
562.15 263.472 550.229 275.393 550.229 290.097 cv
550.229 291.31 550.318 292.502 550.476 293.672 cv
547.817 294.793 545.773 296.621 544.804 298.814 cv
543.34 298.595 541.74 298.472 540.061 298.472 cv
533.111 298.472 527.477 300.543 527.477 303.097 cv
527.5 303.261 li
526.602 303.156 525.627 303.097 524.602 303.097 cv
520.254 303.097 516.727 304.132 516.727 305.41 cv
516.727 306.686 520.254 307.722 524.602 307.722 cv
527.613 307.722 530.227 307.226 531.552 306.497 cv
533.793 307.255 536.775 307.722 540.061 307.722 cv
542.423 307.722 544.624 307.478 546.513 307.063 cv
548.763 309.392 552.428 310.914 556.578 310.914 cv
557.712 310.914 558.804 310.791 559.846 310.58 cv
564.459 314.414 570.387 316.722 576.855 316.722 cv
580.65 316.722 584.257 315.923 587.523 314.492 cv
591.305 318.287 597.38 320.761 604.253 320.761 cv
614.451 320.761 622.916 315.332 624.675 308.18 cv
626.567 308.645 628.594 308.91 630.713 308.91 cv
640.81 308.91 648.994 303.178 648.994 296.107 cv
648.994 289.037 640.81 283.305 630.713 283.305 cv
cp
0 0 0 0 cmyk
f
582.861 267.472 mo
582.591 267.385 599.477 269.472 597.977 283.639 cv
597.977 283.639 598.411 272.472 582.861 267.472 cv
cp
.156374 .0409552 0 0 cmyk
f
607.311 294.306 mo
607.311 294.306 612.311 283.472 597.977 283.639 cv
597.977 283.639 609.644 282.972 607.311 294.306 cv
cp
f
625.027 292.91 mo
625.027 292.91 620.06 285.298 612.102 288.968 cv
612.102 288.968 617.243 285.847 625.027 292.91 cv
cp
f
573.111 307.122 mo
573.111 307.122 584.237 311.326 592.857 307.566 cv
601.477 303.806 599.977 294.306 599.977 294.306 cv
599.977 294.306 597.077 313.272 573.111 307.122 cv
cp
f
569.811 282.639 mo
569.811 282.639 570.311 277.972 577.977 280.306 cv
585.644 282.639 582.857 288.968 582.857 288.968 cv
582.857 288.968 582.144 277.472 569.811 282.639 cv
cp
f
592.857 291.306 mo
592.857 291.306 591.237 283.631 582.857 288.968 cv
582.857 288.968 589.737 285.639 592.857 291.306 cv
cp
f
558.977 292.91 mo
559.075 293.744 554.144 279.139 569.811 282.639 cv
569.811 282.639 557.644 281.514 558.977 292.91 cv
cp
f
442.711 513.887 mo
419.171 513.887 399.898 519.493 398.183 526.606 cv
389.718 527.147 383.224 530.224 383.224 533.949 cv
383.224 538.057 391.11 541.387 400.839 541.387 cv
406.609 541.387 411.716 540.21 414.929 538.399 cv
422.557 540.268 432.206 541.387 442.711 541.387 cv
467.38 541.387 487.378 535.231 487.378 527.637 cv
487.378 520.043 467.38 513.887 442.711 513.887 cv
cp
.292454 .106081 0 0 cmyk
f
361.072 529.637 mo
358.672 529.637 356.361 529.78 354.19 530.043 cv
354.27 529.758 354.318 529.471 354.318 529.18 cv
354.318 527.53 352.99 525.979 350.659 524.629 cv
350.911 524.263 351.044 523.885 351.044 523.498 cv
351.044 520.359 342.389 517.815 331.711 517.815 cv
325.353 517.815 319.729 518.722 316.206 520.114 cv
303.936 521.273 294.983 524.893 294.983 529.18 cv
294.983 534.402 308.266 538.637 324.65 538.637 cv
329.65 538.637 334.357 538.241 338.489 537.545 cv
338.438 537.781 338.405 538.019 338.405 538.262 cv
338.405 543.025 348.553 546.887 361.072 546.887 cv
373.59 546.887 383.739 543.025 383.739 538.262 cv
383.739 533.498 373.59 529.637 361.072 529.637 cv
cp
f
458.713 486.387 mo
457.121 486.387 455.622 486.709 454.293 487.268 cv
453.979 484.392 452.731 481.757 450.827 479.564 cv
451.389 478.909 451.741 478.067 451.741 477.137 cv
451.741 475.065 450.062 473.387 447.991 473.387 cv
446.654 473.387 445.488 474.092 444.824 475.146 cv
442.349 474.027 439.535 473.387 436.544 473.387 cv
433.827 473.387 431.261 473.925 428.956 474.859 cv
428.829 474.695 428.702 474.531 428.57 474.37 cv
430.273 472.732 431.338 470.435 431.338 467.887 cv
431.338 462.916 427.309 458.887 422.338 458.887 cv
418.305 458.887 414.893 461.539 413.749 465.194 cv
411.56 464.668 409.265 464.387 406.899 464.387 cv
391.883 464.387 379.711 475.665 379.711 489.578 cv
379.711 489.932 379.725 490.283 379.74 490.634 cv
376.499 491.995 374.224 495.198 374.224 498.934 cv
374.224 501.53 375.33 503.863 377.089 505.506 cv
376.466 506.088 375.927 506.756 375.489 507.493 cv
373.925 506.18 371.91 505.387 369.708 505.387 cv
364.737 505.387 360.708 509.416 360.708 514.387 cv
360.708 519.357 364.737 523.387 369.708 523.387 cv
373.002 523.387 375.874 521.611 377.443 518.971 cv
379.007 520.284 381.022 521.077 383.224 521.077 cv
388.194 521.077 392.224 517.048 392.224 512.077 cv
392.224 511.611 392.178 511.158 392.109 510.711 cv
396.367 513.274 401.443 514.769 406.899 514.769 cv
416.613 514.769 425.131 510.045 429.939 502.945 cv
431.984 503.647 434.209 504.044 436.544 504.044 cv
442.042 504.044 446.955 501.902 450.226 498.541 cv
451.917 500.975 455.08 502.618 458.713 502.618 cv
464.122 502.618 468.507 498.984 468.507 494.502 cv
468.507 490.021 464.122 486.387 458.713 486.387 cv
cp
0 0 0 0 cmyk
f
333.875 500.527 mo
333.963 500.008 334.017 499.478 334.017 498.934 cv
334.017 493.767 329.919 489.578 324.865 489.578 cv
319.809 489.578 315.711 493.767 315.711 498.934 cv
315.711 499.949 315.874 500.925 316.168 501.841 cv
310.468 502.134 306.044 504.238 306.044 506.796 cv
306.044 509.554 311.184 511.789 317.524 511.789 cv
318.32 511.789 319.096 511.754 319.847 511.686 cv
321.609 514.287 325.102 516.06 329.127 516.06 cv
334.926 516.06 339.628 512.383 339.628 507.847 cv
339.628 504.648 337.286 501.884 333.875 500.527 cv
cp
f
345.628 537.33 mo
345.628 539.415 338.184 541.106 329.003 541.106 cv
319.821 541.106 312.378 539.415 312.378 537.33 cv
312.378 535.244 319.821 533.554 329.003 533.554 cv
338.184 533.554 345.628 535.244 345.628 537.33 cv
cp
.156374 .0409552 0 0 cmyk
f
454.391 539.831 mo
449.25 538.831 442.398 538.22 434.872 538.22 cv
428.672 538.22 422.934 538.636 418.229 539.341 cv
416.208 536.851 407.939 534.874 397.343 534.32 cv
398.231 533.723 399.001 533.097 399.635 532.446 cv
400.723 532.546 401.831 532.602 402.958 532.602 cv
415.836 532.602 426.449 525.906 427.939 517.271 cv
429.197 517.052 430.421 516.768 431.606 516.426 cv
432.882 518.158 434.866 519.593 437.301 520.544 cv
436.921 521.724 436.711 522.979 436.711 524.286 cv
436.711 531.028 442.177 536.494 448.919 536.494 cv
454.56 536.494 459.294 532.663 460.695 527.465 cv
461.645 527.601 462.669 527.712 463.759 527.791 cv
466.827 528.949 470.572 529.637 474.628 529.637 cv
476.206 529.637 477.73 529.522 479.195 529.328 cv
479.546 530.878 480.18 532.336 481.038 533.668 cv
479.674 533.594 478.268 533.554 476.83 533.554 cv
464.602 533.554 454.665 536.352 454.391 539.831 cv
cp
467.741 510.43 mo
467.928 510.434 li
467.931 510.472 li
467.753 510.507 li
467.741 510.43 li
cp
510.426 532.877 mo
511.505 530.934 512.128 528.757 512.128 526.447 cv
512.128 518.352 504.683 511.789 495.499 511.789 cv
494.608 511.789 493.74 511.868 492.888 511.987 cv
493.199 511.294 493.378 510.565 493.378 509.81 cv
493.378 505.388 487.67 501.804 480.628 501.804 cv
478.254 501.804 476.039 502.218 474.136 502.928 cv
474.336 502.564 474.442 502.189 474.442 501.804 cv
474.442 498.72 467.681 496.22 459.341 496.22 cv
455.406 496.22 451.833 496.781 449.145 497.693 cv
449.148 497.579 449.157 497.466 449.157 497.352 cv
449.157 486.049 436.838 476.887 421.642 476.887 cv
406.447 476.887 394.128 486.049 394.128 497.352 cv
394.128 497.855 394.161 498.353 394.209 498.849 cv
384.624 501.31 377.792 507.693 377.792 515.184 cv
377.792 515.276 377.8 515.367 377.802 515.459 cv
374.272 515.014 370.496 514.769 366.565 514.769 cv
362.445 514.769 358.493 515.037 354.818 515.524 cv
354.544 512.126 351.705 509.452 348.236 509.452 cv
344.586 509.452 341.628 512.411 341.628 516.06 cv
341.628 516.916 341.796 517.731 342.091 518.481 cv
335.488 520.875 331.378 524.226 331.378 527.938 cv
331.378 529.68 332.29 531.341 333.931 532.862 cv
331.899 532.694 329.759 532.602 327.544 532.602 cv
314.566 532.602 304.044 535.691 304.044 539.503 cv
304.044 543.314 314.566 546.404 327.544 546.404 cv
340.238 546.404 350.575 543.448 351.023 539.753 cv
354.98 540.483 359.358 540.941 363.984 541.067 cv
365.17 544.326 376.94 546.887 391.294 546.887 cv
397.045 546.887 402.38 546.475 406.788 545.773 cv
409.823 548.467 421.241 550.47 434.872 550.47 cv
449.537 550.47 461.641 548.15 463.497 545.148 cv
467.227 545.938 471.837 546.404 476.83 546.404 cv
481.705 546.404 486.212 545.958 489.893 545.203 cv
493.213 545.961 497.205 546.404 501.503 546.404 cv
513.032 546.404 522.378 543.222 522.378 539.296 cv
522.378 536.459 517.484 534.017 510.426 532.877 cv
cp
f
412.128 492.887 mo
409.58 491.284 428.628 499.637 429.378 506.637 cv
430.128 513.637 425.453 519.387 425.453 519.387 cv
425.453 519.387 436.378 508.137 412.128 492.887 cv
cp
.292454 .106081 0 0 cmyk
f
451.378 510.887 mo
451.378 510.887 464.512 512.043 460.695 527.465 cv
460.695 527.465 463.128 514.387 451.378 510.887 cv
cp
f
478.628 509.387 mo
478.628 509.387 490.378 509.744 489.128 517.815 cv
487.878 525.887 479.195 529.328 479.195 529.328 cv
479.195 529.328 497.628 514.137 478.628 509.387 cv
cp
f
483.042 533.554 mo
483.042 533.554 487.477 528.043 493.428 527.465 cv
499.378 526.887 499.378 532.352 499.378 532.352 cv
499.378 532.352 495.456 524.22 483.042 533.554 cv
cp
f
514.378 537.33 mo
514.378 537.33 508.628 526.815 499.378 532.352 cv
499.378 532.352 508.128 531.272 514.378 537.33 cv
cp
f
407.378 519.387 mo
407.378 519.387 403.786 535.434 380.832 534.035 cv
380.832 534.035 400.559 545.137 407.378 519.387 cv
cp
f
428.993 623.887 mo
421.048 623.887 414.607 627.272 414.607 631.449 cv
414.607 635.626 421.048 639.012 428.993 639.012 cv
436.938 639.012 443.378 635.626 443.378 631.449 cv
443.378 627.272 436.938 623.887 428.993 623.887 cv
cp
.156374 .0409552 0 0 cmyk
f
351.703 645.22 mo
358.519 645.22 364.044 641.041 364.044 635.887 cv
364.044 635.237 363.956 634.604 363.789 633.991 cv
370.533 633.133 375.711 628.188 375.711 622.199 cv
375.711 621.266 375.573 620.363 375.336 619.491 cv
377.521 618.089 379.201 616.111 380.098 613.804 cv
381.957 614.491 384.024 614.887 386.211 614.887 cv
391.467 614.887 396.056 612.661 398.599 609.342 cv
399.631 609.541 400.705 609.658 401.815 609.658 cv
409.272 609.658 415.315 604.896 415.315 599.022 cv
415.315 593.148 409.272 588.387 401.815 588.387 cv
397.443 588.387 393.567 590.032 391.1 592.571 cv
389.57 592.136 387.93 591.887 386.211 591.887 cv
380.096 591.887 374.876 594.892 372.745 599.141 cv
371.164 598.548 369.428 598.22 367.605 598.22 cv
360.3 598.22 354.378 603.481 354.378 609.971 cv
354.378 610.643 354.456 611.299 354.578 611.94 cv
350.472 614.021 347.711 617.831 347.711 622.199 cv
347.711 623.839 348.1 625.401 348.802 626.823 cv
343.388 627.812 339.361 631.489 339.361 635.887 cv
339.361 641.041 344.886 645.22 351.703 645.22 cv
f
414.771 652.434 mo
411.937 652.434 409.303 652.651 407.086 653.023 cv
404.093 651.824 398.133 651.005 391.26 651.005 cv
384.767 651.005 379.099 651.737 375.966 652.829 cv
372.509 652.558 368.646 652.405 364.568 652.405 cv
353.251 652.405 343.586 653.576 339.703 655.229 cv
336.818 654.747 333.131 654.458 329.11 654.458 cv
319.87 654.458 312.378 655.984 312.378 657.868 cv
312.378 659.752 319.87 661.278 329.11 661.278 cv
335.288 661.278 340.67 660.594 343.569 659.579 cv
348.456 660.613 356.042 661.278 364.568 661.278 cv
375.729 661.278 385.286 660.14 389.271 658.522 cv
389.925 658.538 390.587 658.548 391.26 658.548 cv
395.317 658.548 399.046 658.259 402.047 657.779 cv
404.376 658.995 409.192 659.833 414.771 659.833 cv
422.625 659.833 428.993 658.177 428.993 656.134 cv
428.993 654.09 422.625 652.434 414.771 652.434 cv
f
301.044 657.064 mo
301.044 658.761 293.956 660.137 285.211 660.137 cv
276.467 660.137 269.378 658.761 269.378 657.064 cv
269.378 655.367 276.467 653.991 285.211 653.991 cv
293.956 653.991 301.044 655.367 301.044 657.064 cv
f
314.711 650.101 mo
314.711 653.946 309.935 657.064 304.044 657.064 cv
298.153 657.064 293.378 653.946 293.378 650.101 cv
293.378 646.255 298.153 643.137 304.044 643.137 cv
309.935 643.137 314.711 646.255 314.711 650.101 cv
f
512.128 658.467 mo
512.128 660.356 502.178 661.877 489.908 661.877 cv
485.798 661.877 481.948 661.707 478.638 661.406 cv
478.788 661.856 478.868 662.327 478.868 662.816 cv
478.868 666.446 474.498 669.387 469.108 669.387 cv
463.718 669.387 459.338 666.446 459.338 662.816 cv
459.338 662.356 459.408 661.917 459.538 661.486 cv
458.028 661.736 456.398 661.877 454.688 661.877 cv
452.548 661.877 450.518 661.656 448.708 661.276 cv
447.658 663.236 444.888 664.637 441.618 664.637 cv
437.458 664.637 434.088 662.356 434.088 659.547 cv
434.088 659.316 434.118 659.097 434.158 658.877 cv
432.688 659.037 431.178 659.117 429.628 659.117 cv
425.268 659.117 421.168 658.467 417.608 657.327 cv
415.998 658.367 414.098 658.967 412.048 658.967 cv
407.518 658.967 403.678 656.047 402.308 651.986 cv
399.058 653.556 395.288 654.457 391.258 654.457 cv
386.808 654.457 382.668 653.356 379.198 651.467 cv
376.618 655.736 364.358 658.967 349.628 658.967 cv
344.358 658.967 339.398 658.557 335.088 657.827 cv
329.548 658.396 322.748 658.787 315.288 658.917 cv
315.558 659.337 315.708 659.776 315.708 660.236 cv
315.708 662.667 311.498 664.637 306.298 664.637 cv
301.098 664.637 296.878 662.667 296.878 660.236 cv
296.878 659.707 297.088 659.207 297.448 658.747 cv
281.178 658.106 269.378 656.217 269.378 653.986 cv
269.378 651.587 283.168 649.577 301.488 649.106 cv
298.638 648.207 296.878 646.967 296.878 645.606 cv
296.878 642.837 304.068 640.597 312.938 640.597 cv
314.438 640.597 315.878 640.667 317.248 640.787 cv
317.918 638.827 320.178 637.387 322.878 637.387 cv
323.478 637.387 324.058 637.457 324.608 637.597 cv
325.508 636.606 326.678 636.007 327.958 636.007 cv
330.468 636.007 332.538 638.267 332.958 641.247 cv
335.128 639.547 339.278 638.396 344.058 638.387 cv
342.498 637.066 341.628 635.577 341.628 634.007 cv
341.628 630.017 347.298 626.566 355.528 624.917 cv
355.088 623.337 354.848 621.687 354.848 619.986 cv
354.848 608.606 365.348 599.387 378.298 599.387 cv
381.768 599.387 385.068 600.056 388.028 601.247 cv
389.948 593.816 395.938 588.387 403.048 588.387 cv
411.698 588.387 418.708 596.427 418.708 606.347 cv
418.708 612.587 415.928 618.087 411.708 621.306 cv
417.858 622.517 422.338 626.276 422.338 630.736 cv
422.338 630.957 422.308 631.167 422.288 631.377 cv
424.608 630.967 427.068 630.736 429.628 630.736 cv
429.758 630.736 429.888 630.747 430.028 630.747 cv
431.158 627.646 434.558 625.387 438.588 625.387 cv
443.538 625.387 447.548 628.787 447.548 632.986 cv
447.548 633.677 447.428 634.327 447.228 634.957 cv
451.648 637.517 454.378 641.047 454.378 644.927 cv
454.378 646.656 453.838 648.316 452.848 649.847 cv
453.458 649.807 454.068 649.787 454.688 649.787 cv
455.568 649.787 456.418 649.827 457.248 649.887 cv
457.548 647.547 459.948 645.717 462.858 645.717 cv
465.978 645.717 468.508 647.816 468.508 650.396 cv
468.508 650.566 468.488 650.747 468.468 650.927 cv
472.088 651.517 474.628 652.917 474.628 654.537 cv
474.628 655.106 474.308 655.646 473.758 656.137 cv
477.808 655.476 483.538 655.066 489.908 655.066 cv
502.178 655.066 512.128 656.587 512.128 658.467 cv
0 0 0 0 cmyk
f
469.108 669.387 mo
463.718 669.387 459.338 666.446 459.338 662.816 cv
459.338 662.356 459.408 661.917 459.538 661.486 cv
459.538 661.486 li
459.538 661.486 li
458.028 661.736 456.398 661.877 454.688 661.877 cv
452.548 661.877 450.518 661.656 448.708 661.276 cv
447.658 663.236 444.888 664.637 441.618 664.637 cv
437.458 664.637 434.088 662.356 434.088 659.547 cv
434.088 659.316 434.118 659.097 434.158 658.877 cv
434.158 658.877 li
434.158 658.877 li
432.688 659.037 431.178 659.117 429.628 659.117 cv
427.891 659.117 426.195 659.014 424.558 658.818 cv
422.087 658.521 419.749 658.013 417.608 657.327 cv
415.998 658.367 414.098 658.967 412.048 658.967 cv
407.518 658.967 403.678 656.047 402.308 651.986 cv
399.058 653.556 395.288 654.457 391.258 654.457 cv
387.125 654.457 383.26 653.508 379.95 651.859 cv
379.696 651.732 379.445 651.602 379.198 651.467 cv
376.618 655.736 364.358 658.967 349.628 658.967 cv
344.358 658.967 339.398 658.557 335.088 657.827 cv
329.548 658.396 322.748 658.787 315.288 658.917 cv
315.288 658.917 li
315.288 658.917 li
315.558 659.337 315.708 659.776 315.708 660.236 cv
315.708 662.667 311.498 664.637 306.298 664.637 cv
301.098 664.637 296.878 662.667 296.878 660.236 cv
296.878 659.707 297.088 659.207 297.448 658.747 cv
297.448 658.747 li
297.448 658.747 li
281.178 658.106 269.378 656.217 269.378 653.986 cv
269.378 653.986 271.919 653.522 276.017 653.522 cv
279.113 653.522 283.098 653.787 287.548 654.717 cv
297.228 656.747 299.598 657.757 299.858 657.877 cv
299.608 657.577 296.818 654.156 302.878 652.887 cv
303.98 652.654 305.114 652.558 306.233 652.558 cv
311.378 652.558 316.234 654.583 316.538 654.707 cv
316.268 654.476 312.308 650.977 320.048 648.717 cv
321.411 648.319 322.616 648.154 323.674 648.154 cv
328.666 648.154 330.439 651.816 330.538 652.047 cv
330.468 651.707 329.078 645.186 336.548 644.217 cv
337.008 644.157 337.44 644.129 337.843 644.129 cv
342.494 644.129 343.475 647.866 343.678 649.827 cv
343.615 645.674 343.933 632.006 350.565 632.006 cv
351.31 632.006 352.135 632.179 353.048 632.557 cv
355.278 633.476 356.848 634.486 357.948 635.497 cv
357.498 631.276 357.848 626.747 361.208 626.056 cv
361.931 625.908 362.611 625.842 363.248 625.842 cv
368.175 625.842 370.536 629.799 370.678 630.047 cv
370.518 629.617 366.388 618.446 375.548 612.717 cv
379.059 610.523 382.082 609.838 384.487 609.838 cv
388.471 609.838 390.758 611.717 390.758 611.717 cv
390.758 611.717 390.069 600.879 399.455 600.879 cv
399.594 600.879 399.735 600.882 399.878 600.887 cv
409.708 601.217 408.708 616.887 404.548 621.717 cv
401.028 625.797 400.478 626.437 400.398 626.547 cv
400.585 626.401 402.149 625.268 404.399 625.268 cv
406.486 625.268 409.164 626.243 411.878 629.887 cv
415.548 634.807 411.498 640.137 407.998 643.417 cv
408.225 643.402 408.465 643.394 408.719 643.394 cv
410.317 643.394 412.453 643.711 415.318 644.557 cv
427.208 648.056 427.548 652.717 427.548 652.717 cv
427.548 652.717 427.669 649.887 434.063 649.887 cv
435.02 649.887 436.118 649.951 437.378 650.097 cv
447.048 651.217 452.878 658.717 452.878 658.717 cv
452.878 658.717 450.954 659.606 452.385 659.606 cv
453.1 659.606 454.654 659.384 457.708 658.717 cv
459.357 658.357 460.888 658.21 462.289 658.21 cv
468.679 658.21 472.378 661.276 472.378 661.276 cv
472.378 661.276 472.054 658.484 476.977 658.484 cv
477.989 658.484 479.223 658.602 480.728 658.887 cv
484.968 659.69 488.017 659.952 490.705 659.952 cv
493.609 659.952 496.093 659.646 499.208 659.387 cv
499.993 659.321 500.755 659.296 501.492 659.296 cv
502.803 659.296 504.034 659.376 505.171 659.457 cv
506.308 659.538 507.353 659.619 508.29 659.619 cv
509.916 659.619 511.219 659.375 512.128 658.467 cv
512.128 660.356 502.178 661.877 489.908 661.877 cv
485.798 661.877 481.948 661.707 478.638 661.406 cv
478.638 661.406 li
478.638 661.406 li
478.788 661.856 478.868 662.327 478.868 662.816 cv
478.868 666.446 474.498 669.387 469.108 669.387 cv
.0358892 .00909438 0 0 cmyk
f
192.205 287.566 mo
186.31 287.566 180.902 288.024 176.658 288.785 cv
174.636 284.904 168.044 282.056 160.205 282.056 cv
159.465 282.056 158.741 282.09 158.025 282.139 cv
158.324 281.038 158.497 279.896 158.497 278.716 cv
158.497 270.491 150.839 263.823 141.392 263.823 cv
139.467 263.823 137.623 264.112 135.896 264.622 cv
136.523 262.976 136.881 261.198 136.881 259.332 cv
136.881 251.106 130.214 244.439 121.988 244.439 cv
113.764 244.439 107.096 251.106 107.096 259.332 cv
107.096 267.557 113.764 274.225 121.988 274.225 cv
123.105 274.225 124.189 274.092 125.235 273.859 cv
124.631 275.383 124.286 277.013 124.286 278.716 cv
124.286 286.941 131.945 293.609 141.392 293.609 cv
142.143 293.609 142.877 293.552 143.603 293.471 cv
145.426 297.509 152.157 300.511 160.205 300.511 cv
165.91 300.511 170.949 298.998 174.057 296.682 cv
178.565 297.765 185.016 298.447 192.205 298.447 cv
205.829 298.447 216.873 299.016 216.873 296.011 cv
216.873 293.007 205.829 287.566 192.205 287.566 cv
0 0 0 0 cmyk
f
216.873 295.841 mo
216.873 293.186 199.484 290.856 173.284 289.526 cv
170.783 286.774 165.575 284.876 159.536 284.876 cv
158.71 284.876 157.906 284.921 157.116 284.99 cv
157.53 283.76 157.774 282.479 157.774 281.152 cv
157.774 272.595 148.618 265.658 137.323 265.658 cv
135.697 265.658 134.123 265.817 132.606 266.088 cv
133.656 264.038 134.26 261.757 134.26 259.342 cv
134.26 250.547 126.476 243.417 116.873 243.417 cv
107.27 243.417 99.4854 250.547 99.4854 259.342 cv
99.4854 261.692 100.056 263.916 101.053 265.924 cv
99.7552 266.109 98.5181 266.387 97.3652 266.752 cv
93.6342 266.068 88.8553 265.658 83.6444 265.658 cv
80.8736 265.658 78.2335 265.778 75.7989 265.99 cv
71.4087 265.778 66.4633 265.658 61.2271 265.658 cv
43.1308 265.658 28.4603 267.082 28.4603 268.839 cv
28.4603 270.596 43.1308 272.021 61.2271 272.021 cv
61.8974 272.021 62.561 272.018 63.2212 272.014 cv
66.0488 273.856 73.7528 275.19 82.9156 275.259 cv
79.3989 276.963 76.8324 279.145 75.5977 281.598 cv
71.0893 282.378 67.9481 284.104 67.9481 286.113 cv
67.9481 287.448 69.3393 288.658 71.5897 289.549 cv
45.646 290.883 28.4603 293.202 28.4603 295.841 cv
28.4603 297.57 35.85 299.161 48.2279 300.428 cv
48.7264 305.314 62.3915 309.23 79.188 309.23 cv
84.9829 309.23 90.4037 308.763 95.043 307.952 cv
99.9393 309.716 121.467 311.046 147.288 311.046 cv
176.721 311.046 200.581 309.318 200.581 307.188 cv
200.581 305.616 187.589 304.264 168.96 303.663 cv
171.007 303.21 172.61 302.697 173.617 302.139 cv
199.631 300.806 216.873 298.484 216.873 295.841 cv
.156374 .0409552 0 0 cmyk
f
156.809 305.664 mo
151.785 305.664 146.266 304.968 145.902 303.33 cv
145.902 303.33 144.862 304.67 143.056 304.67 cv
142.399 304.67 141.642 304.493 140.796 304.011 cv
137.624 302.2 140.224 300.525 140.224 300.525 cv
140.211 300.511 li
139.987 300.135 136.284 294.196 131.173 294.196 cv
129.433 294.196 127.53 294.883 125.546 296.712 cv
125.396 296.862 li
125.355 296.794 li
124.881 296.116 120.986 290.743 115.147 290.743 cv
113.948 290.743 112.667 290.97 111.316 291.511 cv
111.29 291.524 li
111.276 291.497 li
110.99 291.048 107.409 285.424 100.314 282.755 cv
100.301 282.742 li
100.301 282.742 100.069 282.401 99.8106 281.87 cv
99.0211 280.29 97.9315 277.009 101.758 275.988 cv
101.758 275.988 100.396 270.217 106.061 270.217 cv
106.653 270.217 107.321 270.28 108.076 270.419 cv
108.076 270.419 106.987 266.334 110.391 264.972 cv
111.856 264.386 114.33 263.823 116.799 263.823 cv
120.067 263.823 123.325 264.809 124.225 268.036 cv
125.818 273.714 123.204 275.307 123.204 275.307 cv
123.204 275.307 124.511 274.975 126.361 274.975 cv
128.7 274.975 131.906 275.505 134.438 277.908 cv
138.808 282.061 136.875 286.309 136.112 286.84 cv
136.448 286.713 137.55 286.406 139.176 286.406 cv
141.04 286.406 143.594 286.81 146.474 288.352 cv
152.82 291.756 147.605 296.957 147.605 296.957 cv
147.605 296.957 150.651 296.284 154.171 296.284 cv
156.572 296.284 159.194 296.597 161.221 297.652 cv
166.218 300.266 164.734 302.2 162.242 302.649 cv
162.242 302.649 162.42 302.626 162.686 302.626 cv
163.441 302.626 164.913 302.812 165.074 304.242 cv
165.182 305.136 161.183 305.663 156.809 305.664 cv
.227573 .0724193 0 0 cmyk
f
111.276 291.497 mo
110.99 291.048 107.409 285.424 100.314 282.755 cv
95.9028 281.094 90.1294 280.563 82.9262 283.137 cv
82.9262 283.137 88.6045 279.732 98.354 281.543 cv
98.8574 281.639 99.3476 281.747 99.8105 281.87 cv
108.158 284.103 111.099 291.048 111.276 291.497 cv
cp
.292454 .106081 0 0 cmyk
f
125.355 296.794 mo
124.783 295.977 119.241 288.338 111.316 291.511 cv
111.82 291.225 120.085 286.731 125.355 296.794 cv
cp
f
140.211 300.511 mo
139.911 300.007 133.362 289.509 125.546 296.712 cv
126.744 295.528 135.023 287.997 140.211 300.511 cv
cp
f
71.5898 289.549 mo
71.5898 289.549 92.4209 288.248 104.37 296.862 cv
112.712 302.876 104.37 307.415 104.37 307.415 cv
104.37 307.415 121.279 294.933 71.5898 289.549 cv
cp
f
774.9 242.667 mo
774.9 253.741 766.409 262.719 755.934 262.719 cv
745.459 262.719 736.968 253.741 736.968 242.667 cv
736.968 231.592 745.459 222.615 755.934 222.615 cv
766.409 222.615 774.9 231.592 774.9 242.667 cv
cp
f
833.965 213.531 mo
833.965 193.8 817.194 177.805 796.507 177.805 cv
779.542 177.805 765.219 188.565 760.61 203.317 cv
749.129 204.778 740.264 214.132 740.264 225.482 cv
740.264 237.846 750.771 247.868 763.734 247.868 cv
768.629 247.868 773.171 246.436 776.932 243.992 cv
782.629 247.33 789.331 249.257 796.507 249.257 cv
817.194 249.257 833.965 233.262 833.965 213.531 cv
cp
f
744.767 249.257 mo
737.973 249.257 732.029 253.048 728.68 258.726 cv
725.653 256.565 722.005 255.303 718.078 255.303 cv
708.934 255.303 701.304 262.146 699.512 271.252 cv
698.553 271.173 697.576 271.12 696.574 271.12 cv
691.524 271.12 686.948 272.169 683.55 273.87 cv
682.383 273.751 681.181 273.684 679.948 273.684 cv
669.473 273.684 660.981 278.173 660.981 283.71 cv
660.981 289.247 669.473 293.736 679.948 293.736 cv
684.997 293.736 689.574 292.686 692.973 290.985 cv
694.14 291.104 695.342 291.171 696.574 291.171 cv
699.69 291.171 702.623 290.767 705.217 290.063 cv
708.6 293.37 713.108 295.407 718.078 295.407 cv
724.874 295.407 730.817 291.616 734.167 285.939 cv
737.193 288.099 740.841 289.361 744.767 289.361 cv
755.243 289.361 763.734 280.383 763.734 269.309 cv
763.734 258.234 755.243 249.257 744.767 249.257 cv
cp
f
844.932 268.759 mo
848.44 266.184 850.578 262.833 850.578 259.158 cv
850.578 251.052 840.248 244.481 827.506 244.481 cv
814.764 244.481 804.434 251.052 804.434 259.158 cv
804.434 264.104 808.292 268.47 814.186 271.129 cv
810.678 273.704 808.539 277.055 808.539 280.73 cv
808.539 288.836 818.869 295.407 831.611 295.407 cv
844.354 295.407 854.684 288.836 854.684 280.73 cv
854.684 275.783 850.825 271.418 844.932 268.759 cv
cp
f
849.352 254.906 mo
851.398 255.407 853.535 255.678 855.736 255.678 cv
870.533 255.678 882.529 243.682 882.529 228.885 cv
882.529 214.087 870.533 202.092 855.736 202.092 cv
855.507 202.092 855.28 202.104 855.053 202.109 cv
848.531 187.826 832.742 177.745 814.286 177.745 cv
790.002 177.745 770.316 195.191 770.316 216.711 cv
770.316 217.115 770.337 217.514 770.351 217.914 cv
753.872 219.079 741.003 228.974 741.003 241.009 cv
741.003 246.91 744.102 252.292 749.197 256.388 cv
739.434 257.888 731.325 261.668 726.74 266.661 cv
724.767 266.19 722.666 265.932 720.483 265.932 cv
709.15 265.932 699.964 272.771 699.964 281.208 cv
699.964 281.367 699.989 281.521 699.995 281.679 cv
698.249 281.378 696.346 281.208 694.346 281.208 cv
690.082 281.208 686.238 281.966 683.494 283.179 cv
681.606 281.972 678.875 281.208 675.824 281.208 cv
670.13 281.208 665.514 283.856 665.514 287.122 cv
665.514 290.388 670.13 293.036 675.824 293.036 cv
678.376 293.036 680.706 292.501 682.506 291.621 cv
685.268 293.115 689.54 294.077 694.346 294.077 cv
698.914 294.077 702.998 293.207 705.765 291.839 cv
709.494 294.7 714.705 296.485 720.483 296.485 cv
726.377 296.485 731.675 294.625 735.417 291.662 cv
741.672 294.669 749.756 296.485 758.591 296.485 cv
765.523 296.485 771.993 295.366 777.481 293.432 cv
783.382 300.718 792.396 305.379 802.501 305.379 cv
809.764 305.379 816.462 302.972 821.848 298.914 cv
824.366 301.107 828.844 302.571 833.965 302.571 cv
841.453 302.571 847.583 299.449 848.18 295.48 cv
849.239 296.107 850.574 296.485 852.027 296.485 cv
855.468 296.485 858.257 294.389 858.257 291.803 cv
858.257 289.218 855.468 287.122 852.027 287.122 cv
851.911 287.122 851.798 287.13 851.684 287.135 cv
851.962 286.725 852.119 286.293 852.119 285.844 cv
852.119 283.284 847.259 281.208 841.264 281.208 cv
838.086 281.208 835.235 281.795 833.25 282.725 cv
834.183 279.713 834.685 276.512 834.685 273.194 cv
834.685 271.696 834.575 270.226 834.377 268.782 cv
835.141 268.948 835.925 269.043 836.729 269.043 cv
843.586 269.043 849.154 262.751 849.352 254.906 cv
cp
0 0 0 0 cmyk
f
846.348 199.241 mo
846.348 199.241 865.035 223.149 835.081 233.593 cv
835.081 233.593 858.989 221.226 846.348 199.241 cv
cp
.156374 .0409552 0 0 cmyk
f
830.684 256.677 mo
830.684 256.677 849.371 244.585 835.081 233.593 cv
835.081 233.593 844.699 241.837 830.684 256.677 cv
cp
f
787.114 259.975 mo
787.114 259.975 811.172 286.907 830.684 256.677 cv
830.684 256.677 815.546 282.235 787.114 259.975 cv
cp
f
843.594 239.776 mo
843.594 239.776 862.837 256.402 877.127 232.219 cv
877.127 232.219 863.924 251.181 843.594 239.776 cv
cp
f
856.517 208.951 mo
856.517 208.951 873.897 209.316 873.555 223.527 cv
873.555 223.527 870.807 212.615 856.517 208.951 cv
cp
0 0 0 0 cmyk
f
772.423 219.577 mo
772.423 219.577 778.194 217.175 788.912 225.246 cv
799.63 233.318 801.554 253.654 788.912 259.425 cv
788.912 259.425 804.576 231.944 772.423 219.577 cv
cp
.156374 .0409552 0 0 cmyk
f
781.492 277.563 mo
781.492 277.563 776.537 253.351 749.197 256.388 cv
749.197 256.388 772.148 257.776 781.492 277.563 cv
cp
f
813.37 288.556 mo
814.157 289.415 802.652 266.845 781.492 277.563 cv
781.492 277.563 798.53 272.341 813.37 288.556 cv
cp
f
699.995 281.679 mo
699.995 281.679 709.628 270.402 718.078 274.669 cv
726.529 278.937 722.132 283.609 722.132 283.609 cv
722.132 283.609 715.589 269.913 699.995 281.679 cv
cp
f
745.217 285.807 mo
745.217 285.807 744.667 266.021 722.132 283.609 cv
722.132 283.609 739.17 272.891 745.217 285.807 cv
cp
f
904.878 297.724 mo
904.878 299.61 888.835 301.138 869.045 301.138 cv
849.254 301.138 833.211 299.61 833.211 297.724 cv
833.211 295.839 849.254 294.31 869.045 294.31 cv
888.835 294.31 904.878 295.839 904.878 297.724 cv
cp
0 0 0 0 cmyk
f
873.527 301.138 mo
873.527 302.059 862.969 302.805 849.944 302.805 cv
836.919 302.805 826.36 302.059 826.36 301.138 cv
826.36 300.218 836.919 299.471 849.944 299.471 cv
862.969 299.471 873.527 300.218 873.527 301.138 cv
cp
f
869.045 293.211 mo
869.045 293.818 861.552 294.31 852.309 294.31 cv
843.066 294.31 835.573 293.818 835.573 293.211 cv
835.573 292.604 843.066 292.112 852.309 292.112 cv
861.552 292.112 869.045 292.604 869.045 293.211 cv
cp
f
812.886 301.138 mo
812.886 302.75 798.512 304.056 780.779 304.056 cv
763.049 304.056 748.674 302.75 748.674 301.138 cv
748.674 299.526 763.049 298.22 780.779 298.22 cv
798.512 298.22 812.886 299.526 812.886 301.138 cv
cp
f
801.425 304.433 mo
801.425 305.183 787.014 305.79 769.237 305.79 cv
751.461 305.79 737.05 305.183 737.05 304.433 cv
737.05 303.683 751.461 303.075 769.237 303.075 cv
787.014 303.075 801.425 303.683 801.425 304.433 cv
cp
f
780.997 244.481 mo
780.997 245.828 769.776 246.919 755.934 246.919 cv
742.092 246.919 730.871 245.828 730.871 244.481 cv
730.871 243.135 742.092 242.043 755.934 242.043 cv
769.776 242.043 780.997 243.135 780.997 244.481 cv
cp
f
778.873 236.523 mo
778.873 238.075 757.347 239.334 730.792 239.334 cv
704.238 239.334 682.711 238.075 682.711 236.523 cv
682.711 234.97 704.238 233.712 730.792 233.712 cv
757.347 233.712 778.873 234.97 778.873 236.523 cv
cp
f
765.345 232.414 mo
765.345 233.604 755.356 234.569 743.035 234.569 cv
730.715 234.569 720.727 233.604 720.727 232.414 cv
720.727 231.224 730.715 230.259 743.035 230.259 cv
755.356 230.259 765.345 231.224 765.345 232.414 cv
cp
f
756.338 239.334 mo
756.338 240.927 750.382 242.219 743.035 242.219 cv
735.689 242.219 729.733 240.927 729.733 239.334 cv
729.733 237.74 735.689 236.449 743.035 236.449 cv
750.382 236.449 756.338 237.74 756.338 239.334 cv
cp
f
210.118 501.901 mo
201.455 501.901 193.788 504.786 189.066 509.219 cv
187.913 508.385 186.628 507.689 185.255 507.128 cv
184.13 500.861 178.671 495.851 171.615 494.504 cv
170.61 486.842 163.138 480.887 154.058 480.887 cv
144.294 480.887 136.378 487.771 136.378 496.262 cv
136.378 503.615 142.319 509.755 150.252 511.27 cv
150.96 516.67 154.885 521.208 160.319 523.424 cv
161.64 530.78 168.936 536.415 177.766 536.415 cv
182.931 536.415 187.565 534.477 190.798 531.405 cv
195.555 535 202.448 537.262 210.118 537.262 cv
224.472 537.262 236.108 529.346 236.108 519.581 cv
236.108 509.816 224.472 501.901 210.118 501.901 cv
f
235.252 548.775 mo
233.848 548.775 232.46 548.777 231.087 548.782 cv
230.635 547.322 229.657 545.988 228.3 544.85 cv
230.023 544.856 231.77 544.858 233.541 544.858 cv
260.558 544.858 282.46 544.288 282.46 543.585 cv
282.46 542.882 260.558 542.312 233.541 542.312 cv
230.776 542.312 228.069 542.318 225.43 542.33 cv
231.686 538.408 235.711 532.314 235.711 525.465 cv
235.711 513.635 223.717 504.044 208.922 504.044 cv
200.423 504.044 192.854 507.212 187.946 512.148 cv
186.88 511.615 185.72 511.154 184.49 510.767 cv
183.519 502.756 176.835 496.522 168.629 496.248 cv
166.094 487.383 157.948 480.887 148.269 480.887 cv
136.565 480.887 127.078 490.374 127.078 502.078 cv
127.078 502.317 127.106 502.55 127.114 502.787 cv
116.843 504.78 109.387 510.755 109.387 517.815 cv
109.387 518.546 109.473 519.263 109.627 519.967 cv
106.912 518.617 103.6 517.815 100.015 517.815 cv
90.8266 517.815 83.378 523.029 83.378 529.461 cv
83.378 531.242 83.9657 532.923 84.9872 534.432 cv
82.518 535.845 80.8101 537.479 80.0991 539.246 cv
64.7402 539.996 55.0445 541.091 55.0445 542.312 cv
55.0445 543.579 65.4726 544.711 81.8436 545.462 cv
82.4106 546.022 83.0814 546.563 83.8509 547.076 cv
56.5365 547.383 37.7115 548.028 37.7115 548.775 cv
37.7115 549.496 55.2972 550.123 81.1333 550.441 cv
76.6786 551.059 74.0445 551.819 74.0445 552.642 cv
74.0445 554.71 90.66 556.387 111.157 556.387 cv
115.642 556.387 119.942 556.307 123.922 556.159 cv
123.918 556.192 li
123.918 558.417 126.315 560.22 129.272 560.22 cv
132.229 560.22 134.626 558.417 134.626 556.192 cv
134.626 555.972 134.585 555.76 134.54 555.549 cv
134.645 555.541 li
135.712 555.549 136.788 555.554 137.878 555.554 cv
141.037 555.554 144.104 555.521 147.046 555.459 cv
145.993 555.731 145.378 556.048 145.378 556.387 cv
145.378 557.399 150.769 558.22 157.419 558.22 cv
164.069 558.22 169.46 557.399 169.46 556.387 cv
169.46 555.682 166.84 555.07 163.005 554.764 cv
168.59 554.358 172.853 553.822 175.147 553.208 cv
175.6 553.087 175.977 552.963 176.271 552.836 cv
177.277 553.309 178.37 553.729 179.541 554.09 cv
179.929 558.993 185.547 562.887 192.44 562.887 cv
198.19 562.887 203.058 560.179 204.742 556.435 cv
207.451 558.731 211.723 560.22 216.544 560.22 cv
221.47 560.22 225.822 558.667 228.52 556.286 cv
237.524 556.015 244.044 555.217 244.044 554.275 cv
244.044 553.428 238.756 552.697 231.131 552.361 cv
231.179 552.157 li
232.522 552.162 233.878 552.164 235.252 552.164 cv
261.324 552.164 282.46 551.405 282.46 550.47 cv
282.46 549.533 261.324 548.775 235.252 548.775 cv
.156374 .0409552 0 0 cmyk
f
219.878 548.387 mo
219.868 548.356 li
216.205 541.442 210.836 539.727 206.414 539.727 cv
202.335 539.727 199.061 541.184 198.668 541.367 cv
198.648 541.377 li
198.628 541.387 li
196.35 531.965 189.635 530.119 184.721 530.119 cv
182.342 530.119 180.386 530.551 179.558 530.767 cv
179.378 530.816 li
179.348 530.827 li
179.188 530.867 li
179.128 530.887 li
170.325 525.685 162.883 524.125 157.122 524.125 cv
148.807 524.125 143.996 527.375 143.648 527.617 cv
143.638 527.627 li
143.648 527.606 li
143.898 526.976 148.038 515.906 128.158 507.896 cv
128.128 507.887 li
128.128 507.887 133.443 497.258 141.105 497.258 cv
143.133 497.258 145.325 498.002 147.628 499.887 cv
158.208 508.537 154.218 511.646 153.898 511.877 cv
154.394 511.764 161.675 506.829 167.59 506.829 cv
169.063 506.829 170.45 507.134 171.628 507.896 cv
178.456 512.314 175.848 522.906 175.428 523.347 cv
175.93 522.933 180.139 519.642 186.104 519.642 cv
187.625 519.642 189.26 519.856 190.978 520.387 cv
199.878 523.137 196.878 529.406 196.878 529.406 cv
196.878 529.406 203.138 529.887 207.008 530.887 cv
210.878 531.887 211.378 536.887 211.378 536.887 cv
211.378 536.887 213.158 535.853 215.017 535.853 cv
216.305 535.853 217.63 536.349 218.428 538.026 cv
220.378 542.137 219.878 548.387 219.878 548.387 cv
.0638437 .0144045 0 0 cmyk
f
143.638 527.627 mo
143.648 527.606 li
143.648 527.617 li
143.638 527.627 li
cp
0 0 0 0 cmyk
f
143.718 527.537 mo
143.648 527.606 li
143.898 526.977 148.038 515.906 128.158 507.897 cv
128.808 507.977 139.268 509.446 143.628 516.057 cv
147.758 522.316 144.318 526.827 143.718 527.537 cv
cp
f
179.128 530.887 mo
157.618 518.177 144.238 527.207 143.648 527.617 cv
143.648 527.606 li
143.718 527.537 li
157.728 512.717 179.128 530.887 179.128 530.887 cv
cp
f
198.628 541.387 mo
195.248 527.406 182.098 530.106 179.558 530.767 cv
200.108 524.627 198.628 541.387 198.628 541.387 cv
cp
f
219.868 548.356 mo
212.828 535.066 199.488 540.986 198.668 541.367 cv
213.038 531.167 219.558 547.566 219.868 548.356 cv
cp
f
131.545 545.054 mo
131.545 545.054 118.256 532.633 104.415 532.633 cv
100.925 532.633 97.4014 533.422 94.0444 535.4 cv
94.0444 535.4 96.8908 530.837 105.441 530.837 cv
108.035 530.837 111.153 531.257 114.878 532.351 cv
130.878 537.054 131.545 545.054 131.545 545.054 cv
.244175 .078645 0 0 cmyk
f
158.878 546.887 mo
152.365 543.469 146.802 542.422 142.426 542.422 cv
135.493 542.422 131.545 545.054 131.545 545.054 cv
134.554 541.643 138.226 540.451 141.891 540.451 cv
150.406 540.451 158.878 546.887 158.878 546.887 cv
f
173.378 546.887 mo
169.766 544.942 166.952 544.294 164.804 544.294 cv
160.508 544.294 158.878 546.887 158.878 546.887 cv
159.489 544.053 161.304 543.109 163.452 543.109 cv
167.748 543.109 173.378 546.887 173.378 546.887 cv
f
809.354 373.572 mo
805.527 373.572 801.918 374.258 798.729 375.466 cv
798.074 374.534 797.305 373.682 796.41 372.937 cv
791.272 368.65 783.536 368.881 776.518 372.794 cv
778.042 366.094 776.606 359.664 772.059 355.87 cv
769.958 354.118 767.414 353.143 764.67 352.841 cv
762.117 348.611 758.351 345.198 753.854 343.078 cv
752.072 330.964 741.639 321.665 729.029 321.665 cv
724.713 321.665 720.65 322.756 717.103 324.676 cv
713.352 322.777 708.818 321.665 703.932 321.665 cv
691.024 321.665 680.559 329.417 680.559 338.978 cv
680.559 340.545 680.846 342.062 681.373 343.506 cv
669.672 344.453 660.565 351.793 660.565 360.712 cv
660.565 370.274 671.03 378.025 683.938 378.025 cv
696.847 378.025 707.311 370.274 707.311 360.712 cv
707.311 360.19 707.274 359.673 707.213 359.163 cv
709.766 363.644 713.655 367.262 718.343 369.472 cv
720.026 380.915 729.433 389.839 741.098 390.793 cv
741.422 391.13 741.752 391.463 742.116 391.768 cv
747.254 396.053 754.991 395.822 762.008 391.909 cv
760.484 398.609 761.92 405.04 766.467 408.833 cv
773.415 414.629 785.115 412.181 793.358 403.502 cv
797.54 406.411 803.164 408.197 809.354 408.197 cv
822.263 408.197 832.727 400.446 832.727 390.885 cv
832.727 381.323 822.263 373.572 809.354 373.572 cv
0 0 0 0 cmyk
f
657.265 376.02 mo
644.357 376.02 633.894 383.77 633.894 393.332 cv
633.894 402.893 644.357 410.644 657.265 410.644 cv
670.175 410.644 680.639 402.893 680.639 393.332 cv
680.639 383.77 670.175 376.02 657.265 376.02 cv
f
832.428 397.466 mo
833.244 396.622 833.853 395.747 834.248 394.848 cv
834.772 394.873 835.314 394.887 835.87 394.887 cv
840.284 394.887 843.863 394.047 843.863 393.012 cv
843.863 391.977 840.284 391.137 835.87 391.137 cv
835.431 391.137 835.002 391.147 834.582 391.163 cv
832.557 383.054 812.536 376.685 788.121 376.685 cv
783.211 376.685 778.48 376.943 774.036 377.421 cv
777.172 375.658 779.211 372.854 779.211 369.684 cv
779.211 365.008 774.793 361.108 768.923 360.212 cv
764.795 353.406 757.168 348.634 748.268 347.932 cv
744.633 334.947 731.777 325.351 716.476 325.351 cv
701.21 325.351 688.379 334.904 684.709 347.844 cv
664.31 348.014 647.867 357.124 647.867 368.344 cv
647.867 374.014 652.067 379.147 658.855 382.859 cv
643.518 385.354 632.92 390.681 632.92 396.851 cv
632.92 398.061 633.341 399.237 634.112 400.368 cv
621.249 400.593 611.1 403.185 611.1 406.351 cv
611.1 409.664 622.212 412.351 635.92 412.351 cv
643.651 412.351 650.556 411.496 655.107 410.157 cv
661.939 411.549 669.929 412.351 678.471 412.351 cv
686.931 412.351 694.846 411.563 701.634 410.196 cv
706.087 411.583 710.978 412.351 716.113 412.351 cv
717.341 412.351 718.553 412.304 719.75 412.219 cv
722.273 415.072 728.6 417.101 736.025 417.101 cv
742.454 417.101 748.056 415.578 751.086 413.318 cv
753.382 414.084 757.66 414.601 762.572 414.601 cv
767.768 414.601 772.256 414.023 774.436 413.183 cv
777.262 414.049 781.548 414.601 786.348 414.601 cv
792.603 414.601 797.974 413.662 800.391 412.316 cv
855.164 411.95 898.044 408.636 898.044 404.6 cv
898.044 401.395 870.998 398.646 832.428 397.466 cv
.156374 .0409552 0 0 cmyk
f
765.378 398.887 mo
764.46 380.571 754.842 376.445 746.365 376.445 cv
740.069 376.445 734.403 378.72 733.397 379.147 cv
733.258 379.207 li
733.238 379.217 li
733.228 379.207 li
724.916 371.269 717.885 368.578 712.173 368.578 cv
700.156 368.578 693.977 380.486 693.977 380.486 cv
693.968 380.467 li
693.918 380.417 li
693.738 380.227 li
693.498 379.986 li
693.388 379.867 693.267 379.747 693.147 379.637 cv
693.038 379.537 li
691.165 377.82 686.547 374.392 679.555 374.392 cv
674.45 374.392 668.081 376.217 660.588 381.867 cv
660.568 381.887 li
660.568 381.887 656.128 364.556 671.248 362.887 cv
671.248 362.887 674.817 350.38 683.797 350.38 cv
685.079 350.38 686.47 350.635 687.977 351.217 cv
687.977 351.217 689.288 341.087 699.998 339.157 cv
702.401 338.721 704.546 338.502 706.49 338.502 cv
713.212 338.502 717.551 341.127 721.988 346.557 cv
727.498 353.297 723.988 358.047 723.728 358.387 cv
723.896 358.29 725.11 357.621 727.416 357.621 cv
730.574 357.621 735.782 358.874 743.168 364.567 cv
743.168 364.567 745.111 361.9 748.802 361.9 cv
750.648 361.9 752.931 362.567 755.628 364.567 cv
763.517 370.417 761.378 377.236 761.278 377.557 cv
761.322 377.508 761.728 377.113 762.992 377.113 cv
764.588 377.113 767.55 377.741 772.878 380.486 cv
779.348 383.827 781.008 390.017 781.388 393.847 cv
781.578 395.736 781.458 397.057 781.437 397.196 cv
779.366 396.52 777.368 396.262 775.527 396.262 cv
769.835 396.262 765.644 398.726 765.388 398.877 cv
765.378 398.887 li
.0564889 .0130922 0 0 cmyk
f
693.038 379.537 mo
689.798 376.566 678.348 368.477 660.588 381.867 cv
661.298 381.127 677.578 364.467 693.038 379.537 cv
cp
0 0 0 0 cmyk
f
733.227 379.207 mo
707.428 354.567 693.977 380.486 693.977 380.486 cv
707.767 345.777 732.718 378.526 733.227 379.207 cv
cp
f
765.388 398.877 mo
765.378 398.887 li
763.778 366.967 735.758 378.147 733.397 379.147 cv
748.647 372.037 756.897 373.307 761.267 377.566 cv
768.178 384.276 765.477 398.397 765.388 398.877 cv
cp
f
792.357 405.186 mo
788.778 400.747 784.998 398.356 781.438 397.196 cv
772.958 394.427 765.727 398.677 765.388 398.877 cv
771.767 392.906 777.147 392.276 781.388 393.847 cv
788.227 396.367 792.088 404.587 792.357 405.186 cv
cp
f
835.378 408.637 mo
835.378 408.637 822.836 400.953 810.225 400.953 cv
807.834 400.953 805.44 401.229 803.128 401.887 cv
803.128 401.887 808.179 399.301 814.61 399.301 cv
817.452 399.301 820.563 399.806 823.628 401.262 cv
833.628 406.012 835.378 408.637 835.378 408.637 cv
.0564889 .0130922 0 0 cmyk
f
807.253 394.512 mo
807.253 394.512 803.266 382.743 791.868 382.743 cv
790.027 382.743 787.995 383.049 785.753 383.762 cv
785.753 383.762 789.44 381.714 793.961 381.714 cv
796.505 381.714 799.313 382.361 801.878 384.387 cv
809.003 390.012 807.253 394.512 807.253 394.512 cv
f
692.378 503.762 mo
692.378 506.868 685.83 509.387 677.753 509.387 cv
669.676 509.387 663.128 506.868 663.128 503.762 cv
663.128 500.655 669.676 498.137 677.753 498.137 cv
685.83 498.137 692.378 500.655 692.378 503.762 cv
.292454 .106081 0 0 cmyk
f
734.128 511.353 mo
734.128 516.204 723.804 520.137 711.068 520.137 cv
698.332 520.137 688.008 516.204 688.008 511.353 cv
688.008 506.503 698.332 502.57 711.068 502.57 cv
723.804 502.57 734.128 506.503 734.128 511.353 cv
f
787.878 505.328 mo
787.878 512.338 764.149 518.021 734.878 518.021 cv
705.606 518.021 681.878 512.338 681.878 505.328 cv
681.878 498.319 705.606 492.637 734.878 492.637 cv
764.149 492.637 787.878 498.319 787.878 505.328 cv
f
784.378 496.857 mo
784.378 501.536 767.644 505.328 747.003 505.328 cv
726.361 505.328 709.628 501.536 709.628 496.857 cv
709.628 492.18 726.361 488.387 747.003 488.387 cv
767.644 488.387 784.378 492.18 784.378 496.857 cv
f
812.378 502.372 mo
812.378 505.418 804.487 507.887 794.753 507.887 cv
785.018 507.887 777.128 505.418 777.128 502.372 cv
777.128 499.326 785.018 496.857 794.753 496.857 cv
804.487 496.857 812.378 499.326 812.378 502.372 cv
f
825.128 511.949 mo
825.128 516.471 812.485 520.137 796.889 520.137 cv
781.294 520.137 768.651 516.471 768.651 511.949 cv
768.651 507.428 781.294 503.762 796.889 503.762 cv
812.485 503.762 825.128 507.428 825.128 511.949 cv
f
862.711 525.137 mo
862.711 521.962 841.035 519.388 814.295 519.388 cv
810.028 519.388 805.892 519.453 801.95 519.576 cv
804.293 518.353 805.699 516.836 805.699 515.184 cv
805.699 511.154 797.425 507.887 787.218 507.887 cv
777.692 507.887 769.856 510.732 768.852 514.388 cv
768.736 514.387 li
764.533 514.387 760.551 514.846 756.982 515.662 cv
754.055 511.039 748.252 507.887 741.563 507.887 cv
734.043 507.887 727.652 511.876 725.202 517.456 cv
723.168 516.798 720.91 516.228 718.475 515.765 cv
717.042 511.352 703.033 507.887 685.953 507.887 cv
669.573 507.887 656.013 511.072 653.662 515.226 cv
650.745 514.702 646.996 514.387 642.904 514.387 cv
633.608 514.387 626.072 516.014 626.072 518.021 cv
626.072 520.027 633.608 521.654 642.904 521.654 cv
648.44 521.654 653.337 521.075 656.405 520.185 cv
659.372 521.848 664.288 523.22 670.38 524.095 cv
669.945 524.876 669.716 525.684 669.716 526.512 cv
669.716 533.208 684.638 538.637 703.046 538.637 cv
704.802 538.637 706.525 538.587 708.207 538.491 cv
708.199 538.637 li
708.199 545.679 720.814 551.387 736.376 551.387 cv
750.009 551.387 761.379 547.006 763.989 541.185 cv
765.532 541.315 767.117 541.387 768.736 541.387 cv
777.351 541.387 785.046 539.47 790.126 536.464 cv
793.666 537.78 799.314 538.637 805.699 538.637 cv
816.427 538.637 825.123 536.23 825.123 533.262 cv
825.123 532.371 824.327 531.533 822.942 530.793 cv
845.553 530.308 862.711 527.962 862.711 525.137 cv
.156374 .0409552 0 0 cmyk
f
675.378 526.171 mo
675.378 528.694 669.694 530.741 662.683 530.741 cv
655.671 530.741 649.986 528.694 649.986 526.171 cv
649.986 523.646 655.671 521.601 662.683 521.601 cv
669.694 521.601 675.378 523.646 675.378 526.171 cv
cp
.292454 .106081 0 0 cmyk
f
673.711 522.096 mo
673.711 524.346 664.459 526.171 653.045 526.171 cv
641.631 526.171 632.378 524.346 632.378 522.096 cv
632.378 519.845 641.631 518.021 653.045 518.021 cv
664.459 518.021 673.711 519.845 673.711 522.096 cv
f
732.67 537.33 mo
729.095 537.33 725.71 537.605 722.69 538.097 cv
722.256 534.442 711.237 531.516 697.699 531.516 cv
691.956 531.516 686.668 532.043 682.445 532.929 cv
683.263 531.832 683.711 530.652 683.711 529.422 cv
683.711 525.421 679.003 521.944 672.087 520.185 cv
672.471 519.795 672.687 519.384 672.687 518.958 cv
672.687 516.648 666.635 514.757 658.938 514.571 cv
655.515 511.586 643.86 509.387 630.002 509.387 cv
623.01 509.387 616.582 509.948 611.484 510.887 cv
609.298 509.119 604.406 507.887 598.711 507.887 cv
590.98 507.887 584.711 510.155 584.711 512.953 cv
584.711 515.752 590.98 518.021 598.711 518.021 cv
598.829 518.021 598.943 518.015 599.06 518.014 cv
598.841 518.512 598.711 519.028 598.711 519.562 cv
598.711 521.14 599.731 522.586 601.43 523.722 cv
600.545 524.059 600.045 524.432 600.045 524.824 cv
600.045 526.332 607.282 527.554 616.211 527.554 cv
620.004 527.554 623.484 527.331 626.241 526.962 cv
627.408 527.172 628.687 527.331 630.052 527.431 cv
630.02 527.639 630.002 527.851 630.002 528.065 cv
630.002 531.362 633.817 534.035 638.523 534.035 cv
639.641 534.035 640.707 533.88 641.685 533.605 cv
642.944 534.981 644.802 536.203 647.104 537.194 cv
647.533 540.026 650.473 542.22 654.045 542.22 cv
656.379 542.22 658.441 541.279 659.713 539.839 cv
660.395 539.869 661.086 539.887 661.784 539.887 cv
665.762 539.887 669.488 539.379 672.704 538.495 cv
673.046 542.173 684.101 545.125 697.699 545.125 cv
702.075 545.125 706.186 544.819 709.765 544.282 cv
709.676 544.559 709.628 544.84 709.628 545.125 cv
709.628 549.431 719.944 552.921 732.67 552.921 cv
745.395 552.921 755.711 549.431 755.711 545.125 cv
755.711 540.82 745.395 537.33 732.67 537.33 cv
f
697.628 487.357 mo
697.678 487.417 li
697.598 487.406 li
697.628 487.357 li
793.278 493.156 mo
791.338 493.156 789.477 493.267 787.718 493.446 cv
789.508 491.867 790.548 489.976 790.548 487.946 cv
790.548 482.356 782.678 477.816 772.968 477.816 cv
769.118 477.816 765.568 478.537 762.668 479.757 cv
761.028 471.646 752.618 465.467 742.458 465.467 cv
739.348 465.467 736.408 466.066 733.767 467.097 cv
731.607 456.387 723.868 448.467 714.647 448.467 cv
705.798 448.467 698.308 455.766 695.818 465.827 cv
695.028 465.597 694.218 465.467 693.368 465.467 cv
690.998 465.467 688.818 466.427 687.068 468.017 cv
686.678 467.997 686.298 467.967 685.897 467.967 cv
677.357 467.967 670.218 472.986 668.458 479.696 cv
664.278 477.967 659.437 476.967 654.288 476.967 cv
640.528 476.967 629.038 484.026 626.248 493.437 cv
625.158 493.257 624.028 493.156 622.878 493.156 cv
615.468 493.156 609.178 497.137 606.848 502.667 cv
603.158 500.917 597.588 499.797 591.348 499.797 cv
581.598 499.797 573.468 502.526 571.607 506.146 cv
571.347 506.656 571.208 507.186 571.208 507.727 cv
571.208 512.106 580.227 515.656 591.348 515.656 cv
597.738 515.656 603.408 514.486 607.098 512.667 cv
609.607 517.896 615.718 521.597 622.878 521.597 cv
629.028 521.597 634.408 518.856 637.388 514.747 cv
642.128 517.276 647.968 518.766 654.288 518.766 cv
666.268 518.766 676.528 513.417 680.818 505.816 cv
683.258 506.066 685.857 506.196 688.557 506.196 cv
702.638 506.196 714.048 502.566 714.048 498.087 cv
714.038 497.847 li
714.238 497.856 714.448 497.867 714.647 497.867 cv
718.988 497.867 722.998 496.106 726.248 493.137 cv
730.008 497.187 735.857 499.797 742.458 499.797 cv
748.838 499.797 754.548 497.356 758.308 493.537 cv
761.458 496.276 766.848 498.087 772.968 498.087 cv
773.838 498.087 774.678 498.037 775.517 497.967 cv
775.238 498.387 775.088 498.827 775.088 499.267 cv
775.088 502.647 783.238 505.387 793.278 505.387 cv
797.688 505.387 801.728 504.867 804.878 503.986 cv
808.908 502.856 811.468 501.167 811.468 499.267 cv
811.468 495.896 803.328 493.156 793.278 493.156 cv
0 0 0 0 cmyk
f
622.878 521.597 mo
615.718 521.597 609.607 517.896 607.098 512.667 cv
603.408 514.486 597.738 515.656 591.348 515.656 cv
580.227 515.656 571.208 512.106 571.208 507.727 cv
571.208 507.186 571.347 506.656 571.607 506.146 cv
575.876 508.548 583.634 511.906 593.632 511.906 cv
598.205 511.906 603.246 511.204 608.638 509.387 cv
608.638 509.387 611.823 513.893 618.822 513.893 cv
621.219 513.893 624.062 513.365 627.378 511.946 cv
640.378 506.387 640.618 496.856 640.618 496.856 cv
640.618 496.856 641.085 509.62 654.077 509.62 cv
655.066 509.62 656.128 509.546 657.267 509.387 cv
673.378 507.137 677.758 496.017 677.758 496.017 cv
677.758 496.017 685.292 498.116 692.943 498.116 cv
697.239 498.116 701.571 497.454 704.628 495.387 cv
713.128 489.637 714.628 486.217 714.628 486.217 cv
714.628 486.217 717.44 489.425 723.176 489.425 cv
724.896 489.425 726.878 489.136 729.128 488.387 cv
730.34 487.983 731.45 487.814 732.488 487.814 cv
735.09 487.814 737.243 488.871 739.433 489.929 cv
741.622 490.986 743.849 492.043 746.594 492.043 cv
748.823 492.043 751.395 491.346 754.568 489.387 cv
754.568 489.387 757.239 492.067 761.676 492.067 cv
763.67 492.067 766.021 491.526 768.647 489.957 cv
771.703 488.13 772.716 487.545 772.763 487.545 cv
772.845 487.545 769.878 489.387 769.878 489.387 cv
769.878 489.387 783.131 504.735 797.672 504.736 cv
799.479 504.736 801.304 504.5 803.128 503.967 cv
803.681 503.807 804.098 503.729 804.386 503.729 cv
804.691 503.729 804.852 503.816 804.878 503.986 cv
801.728 504.867 797.688 505.387 793.278 505.387 cv
786.084 505.387 779.86 503.98 776.91 501.939 cv
775.743 501.131 775.088 500.225 775.088 499.267 cv
775.088 498.827 775.238 498.387 775.517 497.967 cv
775.517 497.967 li
775.517 497.967 li
774.678 498.037 773.838 498.087 772.968 498.087 cv
766.848 498.087 761.458 496.276 758.308 493.537 cv
754.548 497.356 748.838 499.797 742.458 499.797 cv
735.857 499.797 730.008 497.187 726.248 493.137 cv
722.998 496.106 718.988 497.867 714.647 497.867 cv
714.448 497.867 714.238 497.856 714.038 497.847 cv
714.038 497.847 li
714.038 497.847 li
714.048 498.087 li
714.048 498.885 713.686 499.656 713.011 500.384 cv
709.898 503.744 700.129 506.196 688.557 506.196 cv
685.857 506.196 683.258 506.066 680.818 505.816 cv
676.528 513.417 666.268 518.766 654.288 518.766 cv
647.968 518.766 642.128 517.276 637.388 514.747 cv
634.408 518.856 629.028 521.597 622.878 521.597 cv
.0358892 .00909438 0 0 cmyk
f
733.771 467.098 mo
733.771 467.098 747.459 482.551 726.252 493.136 cv
726.252 493.136 742.498 484.809 733.771 467.098 cv
cp
.292454 .106081 0 0 cmyk
f
683.378 486.22 mo
683.378 486.22 690.305 490.777 688.008 498.082 cv
685.711 505.387 680.819 505.815 680.819 505.815 cv
680.819 505.815 693.711 496.72 683.378 486.22 cv
cp
f
668.459 479.697 mo
668.459 479.697 681.711 473.887 683.378 486.22 cv
683.378 486.22 678.206 476.509 668.459 479.697 cv
cp
f
629.378 496.018 mo
629.378 496.018 647.903 497.449 637.391 514.751 cv
637.391 514.751 644.711 499.982 629.378 496.018 cv
cp
f
70.3148 661.924 mo
70.6972 661.872 71.04 661.818 71.357 661.764 cv
71.4814 661.844 71.6234 661.923 71.7714 662 cv
71.3134 661.974 70.8265 661.948 70.3148 661.924 cv
164.044 657.387 mo
158.902 657.387 154.281 658.472 151.026 660.196 cv
148.683 659.723 145.85 659.444 142.794 659.444 cv
141.658 659.444 140.557 659.486 139.494 659.559 cv
137.809 658.705 134.513 658.067 130.524 657.869 cv
130.544 657.782 li
130.544 656.952 129.27 656.255 127.508 655.998 cv
127.96 655.385 128.211 654.732 128.211 654.054 cv
128.211 650.556 121.719 647.72 113.711 647.72 cv
112.136 647.72 110.623 647.833 109.202 648.036 cv
108.547 646.422 106.08 645.22 103.128 645.22 cv
99.6763 645.22 96.878 646.861 96.878 648.887 cv
96.878 650.234 98.1207 651.409 99.9668 652.046 cv
99.4839 652.678 99.2115 653.351 99.2115 654.054 cv
99.2129 654.068 li
98.9364 654.06 98.6596 654.054 98.378 654.054 cv
92.6768 654.054 88.055 655.728 88.0454 657.797 cv
86.3334 657.537 84.3597 657.387 82.253 657.387 cv
79.0342 657.387 76.1195 657.734 73.9918 658.296 cv
72.5096 657.991 70.5434 657.804 68.378 657.804 cv
64.1312 657.804 60.6343 658.518 60.1175 659.442 cv
58.6572 659.407 57.1313 659.387 55.5492 659.387 cv
45.6978 659.387 37.7115 660.114 37.7115 661.012 cv
37.7115 661.246 38.2665 661.468 39.2461 661.669 cv
30.8237 661.847 25.0445 662.214 25.0445 662.637 cv
25.0445 663.235 36.6108 663.72 50.8779 663.72 cv
61.8163 663.72 71.1596 663.435 74.9276 663.032 cv
76.9405 663.462 79.4824 663.72 82.253 663.72 cv
87.9852 663.72 92.7584 662.621 93.8203 661.165 cv
95.1963 661.411 96.7396 661.554 98.378 661.554 cv
102.155 661.554 105.45 660.815 107.252 659.718 cv
109.199 660.141 111.387 660.387 113.711 660.387 cv
114.224 660.387 114.729 660.374 115.228 660.352 cv
115.117 660.513 115.044 660.677 115.044 660.845 cv
115.044 662.525 120.791 663.887 127.878 663.887 cv
127.998 663.887 128.115 663.883 128.234 663.883 cv
128.475 666.197 134.893 668.054 142.794 668.054 cv
144.093 668.054 145.346 667.998 146.544 667.904 cv
148.133 671.976 155.359 675.054 164.044 675.054 cv
173.894 675.054 181.878 671.099 181.878 666.22 cv
181.878 661.342 173.894 657.387 164.044 657.387 cv
.156374 .0409552 0 0 cmyk
f
184.008 659.117 mo
183.618 659.117 183.248 659.127 182.868 659.127 cv
183.588 658.287 184.008 657.297 184.008 656.247 cv
184.008 653.897 181.968 651.877 179.078 651.037 cv
179.348 650.526 179.508 649.986 179.508 649.427 cv
179.508 646.736 176.108 644.517 171.718 644.186 cv
169.158 639.726 163.328 636.207 155.978 634.696 cv
155.728 631.736 151.788 629.387 146.938 629.387 cv
145.668 629.387 144.468 629.547 143.368 629.837 cv
141.448 627.017 138.628 624.867 135.338 623.747 cv
133.648 612.507 123.948 603.887 112.238 603.887 cv
102.188 603.887 93.6181 610.236 90.3281 619.146 cv
89.438 618.517 88.3877 618.146 87.248 618.146 cv
84.1578 618.146 81.6479 620.877 81.6479 624.236 cv
81.6479 626.236 82.5279 627.997 83.8877 629.106 cv
83.1378 630.617 82.7079 632.306 82.7079 634.097 cv
82.7079 634.736 82.7777 635.367 82.8778 635.977 cv
82.4179 635.917 81.9478 635.887 81.458 635.887 cv
78.2378 635.887 75.5079 637.196 74.478 639.017 cv
71.5678 639.856 69.0781 641.117 67.2479 642.667 cv
61.9077 642.917 57.7578 644.587 57.5279 646.646 cv
54.9877 647.687 53.3779 649.257 53.3779 651.007 cv
53.3779 651.127 53.3979 651.247 53.4179 651.356 cv
49.8579 651.986 47.3778 653.406 47.3778 655.066 cv
47.3778 655.577 47.6279 656.066 48.058 656.517 cv
43.018 656.856 39.6278 657.477 39.6278 658.187 cv
39.6278 658.877 42.7578 659.476 47.4979 659.827 cv
50.1881 660.017 53.3878 660.137 56.8379 660.137 cv
64.8081 660.137 71.4879 659.526 73.4476 658.687 cv
76.1881 659.606 79.338 660.137 82.7079 660.137 cv
93.1078 660.137 101.538 655.156 101.538 649.007 cv
101.538 648.656 101.508 648.307 101.448 647.967 cv
104.678 649.646 108.348 650.606 112.238 650.606 cv
114.468 650.606 116.618 650.287 118.658 649.707 cv
120.028 651.167 121.678 652.356 123.508 653.207 cv
126.368 659.787 136.208 664.637 147.898 664.637 cv
149.518 664.637 151.108 664.537 152.648 664.356 cv
152.628 664.597 li
152.628 669.867 159.228 674.137 167.378 674.137 cv
172.698 674.137 177.368 672.316 179.958 669.577 cv
181.328 668.137 182.118 666.436 182.128 664.617 cv
182.748 664.627 183.368 664.637 184.008 664.637 cv
193.188 664.637 200.628 663.397 200.628 661.877 cv
200.628 660.356 193.188 659.117 184.008 659.117 cv
0 0 0 0 cmyk
f
167.378 674.137 mo
159.228 674.137 152.628 669.867 152.628 664.597 cv
152.648 664.356 li
152.648 664.356 li
151.108 664.537 149.518 664.637 147.898 664.637 cv
136.208 664.637 126.368 659.787 123.508 653.207 cv
121.678 652.356 120.028 651.167 118.658 649.707 cv
116.618 650.287 114.468 650.606 112.238 650.606 cv
108.348 650.606 104.678 649.646 101.448 647.967 cv
101.448 647.967 li
101.448 647.967 li
101.508 648.307 101.538 648.656 101.538 649.007 cv
101.538 655.156 93.1078 660.137 82.7079 660.137 cv
79.338 660.137 76.1881 659.606 73.4476 658.687 cv
71.4879 659.526 64.8081 660.137 56.8379 660.137 cv
53.3878 660.137 50.1881 660.017 47.4979 659.827 cv
49.3178 657.946 52.4077 655.236 55.4878 654.707 cv
56.1112 654.599 56.6961 654.552 57.2415 654.552 cv
60.931 654.552 62.8281 656.707 62.8281 656.707 cv
62.8281 656.707 62.0473 646.323 70.9544 646.323 cv
71.2854 646.323 71.6295 646.337 71.9878 646.367 cv
80.3681 647.066 79.1577 652.566 78.5478 654.327 cv
78.9787 653.407 80.186 651.614 83.0181 651.614 cv
83.6029 651.614 84.2569 651.691 84.9877 651.867 cv
87.998 652.597 89.058 654.377 89.4077 655.837 cv
89.4677 653.457 90.098 649.976 93.1577 649.867 cv
93.2988 649.862 93.4359 649.859 93.569 649.859 cv
94.4542 649.859 95.163 649.971 95.728 650.137 cv
94.5982 648.427 93.6978 645.617 94.828 641.367 cv
96.9878 633.207 103.328 631.707 108.488 631.367 cv
108.796 631.347 109.093 631.338 109.379 631.338 cv
113.899 631.338 115.826 633.735 118.488 636.867 cv
120.108 638.776 120.448 642.047 120.448 644.497 cv
120.933 644.223 121.673 644.046 122.776 644.046 cv
124.448 644.046 126.952 644.452 130.658 645.537 cv
145.278 649.807 139.648 659.267 139.498 659.526 cv
139.718 659.36 143.238 656.723 148.185 656.723 cv
149.773 656.723 151.508 656.995 153.328 657.707 cv
159.998 660.316 159.728 665.327 159.208 666.797 cv
159.711 666.281 160.881 665.476 162.798 665.476 cv
164.005 665.476 165.508 665.795 167.328 666.707 cv
172.898 669.486 169.178 672.656 168.208 673.387 cv
169.366 672.628 174.903 669.102 178.257 669.102 cv
178.93 669.102 179.514 669.243 179.958 669.577 cv
177.368 672.316 172.698 674.137 167.378 674.137 cv
.0358892 .00909438 0 0 cmyk
f
128.753 634.137 mo
128.753 634.137 135.753 631.137 141.503 633.137 cv
147.253 635.137 147.503 643.137 147.503 643.137 cv
147.503 643.137 143.503 631.262 128.753 634.137 cv
cp
.156374 .0409552 0 0 cmyk
f
157.753 653.262 mo
157.753 653.262 160.49 639.283 147.503 643.137 cv
147.503 643.137 156.068 641.131 157.753 653.262 cv
cp
f
119.503 610.262 mo
119.503 610.262 130.378 614.262 130.753 622.387 cv
131.128 630.512 128.753 634.137 128.753 634.137 cv
128.753 634.137 134.253 617.262 119.503 610.262 cv
cp
f
94.5029 636.137 mo
91.9487 636.137 89.8778 634.066 89.8778 631.512 cv
89.8778 628.957 91.9487 626.887 94.5029 626.887 cv
94.7461 626.887 94.9848 626.905 95.2179 626.942 cv
95.5828 627.168 96.0087 627.305 96.465 627.322 cv
98.0383 628.06 99.128 629.659 99.128 631.512 cv
99.128 634.066 97.0571 636.137 94.5029 636.137 cv
.0358892 .00909438 0 0 cmyk
f
96.5653 627.324 mo
96.5317 627.324 96.4983 627.324 96.465 627.322 cv
96.0758 627.14 95.6571 627.01 95.2179 626.942 cv
94.4887 626.49 94.003 625.682 94.003 624.762 cv
94.003 623.347 95.1503 622.199 96.5653 622.199 cv
97.9804 622.199 99.128 623.347 99.128 624.762 cv
99.128 626.177 97.9804 627.324 96.5653 627.324 cv
f
96.465 627.322 mo
96.0087 627.305 95.5828 627.168 95.2179 626.942 cv
95.6571 627.01 96.0758 627.14 96.465 627.322 cv
.0672618 .016968 0 0 cmyk
f
833.325 652.171 mo
833.325 646.328 829.643 641.592 825.101 641.592 cv
820.56 641.592 816.878 646.328 816.878 652.171 cv
816.878 653.045 816.97 653.89 817.125 654.702 cv
815.275 654.179 813.252 653.887 811.128 653.887 cv
804.34 653.887 798.571 656.838 796.358 660.967 cv
793.382 660.129 789.885 659.637 786.128 659.637 cv
775.358 659.637 766.628 663.61 766.628 668.512 cv
766.628 673.413 775.358 677.387 786.128 677.387 cv
792.773 677.387 798.636 675.871 802.156 673.56 cv
804.703 674.773 807.791 675.49 811.128 675.49 cv
819.826 675.49 826.878 670.654 826.878 664.688 cv
826.878 663.964 826.769 663.257 826.571 662.572 cv
830.411 661.68 833.325 657.368 833.325 652.171 cv
.292454 .106081 0 0 cmyk
f
819.093 629.469 mo
812.352 629.469 806.484 631.198 803.416 633.752 cv
798.409 633.785 794.117 635.718 792.168 638.486 cv
791.32 638.427 790.459 638.387 789.574 638.387 cv
786.55 638.387 783.716 638.753 781.257 639.388 cv
774.802 637.387 766.679 636.427 757.918 636.922 cv
754.49 637.116 751.188 637.524 748.062 638.106 cv
743.368 633.039 734.393 629.586 724.049 629.476 cv
724.931 628.027 725.418 626.476 725.418 624.863 cv
725.418 618.658 718.332 613.367 708.378 611.308 cv
708.645 610.691 708.795 610.052 708.795 609.395 cv
708.795 604.43 700.754 600.403 690.836 600.403 cv
680.918 600.403 672.878 604.43 672.878 609.395 cv
672.878 611.967 675.045 614.279 678.501 615.918 cv
674.982 618.381 672.878 621.486 672.878 624.863 cv
672.878 632.648 684.029 638.996 698.01 639.325 cv
696.43 641.416 695.545 643.734 695.545 646.178 cv
695.545 655.406 708.081 662.887 723.545 662.887 cv
724.281 662.887 725.01 662.864 725.732 662.831 cv
731.853 668.391 744.922 671.762 759.84 670.918 cv
779.043 669.833 794.422 662.156 795.634 653.401 cv
799.428 652.736 802.576 651.474 804.496 649.856 cv
808.718 649.649 812.347 648.094 814.359 645.851 cv
815.87 646.042 817.452 646.153 819.093 646.153 cv
829.008 646.153 837.045 642.418 837.045 637.812 cv
837.045 633.204 829.008 629.469 819.093 629.469 cv
f
606.398 656.887 mo
595.474 656.887 585.81 657.545 579.884 658.555 cv
581.379 658.025 582.253 657.387 582.253 656.699 cv
582.253 654.968 576.713 653.549 569.654 653.401 cv
570.968 652.922 572.014 652.356 572.722 651.729 cv
575.059 651.623 577.225 651.255 579.07 650.69 cv
581.262 651.372 583.688 651.762 586.253 651.762 cv
595.849 651.762 603.628 646.445 603.628 639.887 cv
603.628 637.128 602.238 634.595 599.929 632.579 cv
600.13 632.069 600.253 631.547 600.253 631.012 cv
600.253 626.776 593.688 623.24 584.912 622.355 cv
585.041 621.969 585.128 621.576 585.128 621.173 cv
585.128 616.913 577.661 613.46 568.45 613.46 cv
563.263 613.46 558.63 614.555 555.571 616.272 cv
550.559 616.405 546.628 617.663 546.628 619.198 cv
546.628 620.323 548.74 621.3 551.841 621.793 cv
552.346 624.719 556.366 627.187 561.96 628.28 cv
561.344 629.142 561.003 630.059 561.003 631.012 cv
561.003 633.958 564.191 636.562 569.078 638.176 cv
568.99 638.591 568.935 639.013 568.911 639.44 cv
563.033 639.905 558.446 642.037 557.642 644.715 cv
550.007 644.933 544.003 647.147 544.003 649.852 cv
544.003 652.447 549.532 654.588 556.725 654.951 cv
555.403 655.459 554.628 656.056 554.628 656.699 cv
554.628 658.528 560.813 660.012 568.44 660.012 cv
571.129 660.012 573.629 659.824 575.751 659.506 cv
574.459 659.936 573.753 660.401 573.753 660.887 cv
573.753 663.096 588.369 664.887 606.398 664.887 cv
624.429 664.887 639.045 663.096 639.045 660.887 cv
639.045 658.678 624.429 656.887 606.398 656.887 cv
f
608.868 657.646 mo
608.977 657.627 609.088 657.617 609.188 657.597 cv
609.378 657.736 li
609.208 657.707 609.028 657.677 608.868 657.646 cv
771.397 665.667 mo
769.518 664.497 766.528 663.736 763.158 663.736 cv
761.718 663.736 760.347 663.877 759.107 664.127 cv
759.107 663.997 759.138 663.867 759.138 663.736 cv
759.138 659.667 754.897 656.267 749.147 655.267 cv
749.318 654.297 749.347 653.327 749.227 652.347 cv
748.158 644.117 736.618 638.797 722.357 639.347 cv
722.658 638.587 722.828 637.766 722.828 636.896 cv
722.828 634.516 721.588 632.467 719.748 631.377 cv
719.068 630.967 718.288 630.687 717.468 630.587 cv
717.488 630.186 717.528 629.787 717.528 629.377 cv
717.528 628.297 717.448 627.236 717.278 626.207 cv
716.128 618.776 710.968 612.767 704.218 610.656 cv
700.808 604.776 695.918 600.787 690.388 599.967 cv
690.628 598.707 690.768 597.406 690.768 596.056 cv
690.768 587.367 685.508 580.327 679.008 580.327 cv
678.307 580.327 677.628 580.427 676.958 580.587 cv
678.238 577.667 679.008 573.937 679.008 569.867 cv
679.008 560.507 674.928 552.917 669.897 552.917 cv
666.368 552.917 663.318 556.656 661.798 562.117 cv
659.048 560.526 656.098 559.656 653.028 559.656 cv
637.937 559.656 625.708 580.467 625.708 606.137 cv
625.708 606.347 li
623.068 606.217 620.357 606.137 617.588 606.137 cv
605.418 606.137 594.278 607.517 585.638 609.797 cv
584.328 607.667 580.998 606.137 577.078 606.137 cv
572.028 606.137 567.937 608.667 567.937 611.787 cv
567.937 612.367 568.078 612.927 568.348 613.457 cv
566.948 613.257 565.418 613.146 563.807 613.146 cv
557.158 613.146 551.778 615.066 551.778 617.427 cv
551.778 619.797 557.158 621.717 563.807 621.717 cv
565.267 621.717 566.658 621.627 567.958 621.457 cv
567.937 621.717 li
567.937 627.787 578.977 633.037 595.078 635.606 cv
593.798 637.327 593.038 639.367 593.038 641.566 cv
593.038 642.167 593.107 642.747 593.218 643.316 cv
587.238 643.647 582.578 646.026 582.397 648.957 cv
569.918 649.207 559.698 650.667 556.187 652.597 cv
555.008 651.656 552.558 651.007 549.708 651.007 cv
545.718 651.007 542.488 652.276 542.488 653.847 cv
542.488 655.417 545.718 656.687 549.708 656.687 cv
552.298 656.687 554.557 656.156 555.828 655.347 cv
558.528 657.097 566.628 658.486 577.028 659.016 cv
576.278 659.387 575.848 659.787 575.848 660.207 cv
575.848 661.677 580.808 662.927 587.868 663.467 cv
590.198 663.637 592.758 663.736 595.448 663.736 cv
605.428 663.736 613.658 662.387 614.878 660.656 cv
615.988 660.967 617.138 661.156 618.328 661.196 cv
617.857 662.227 617.588 663.377 617.588 664.597 cv
617.588 668.957 620.968 672.497 625.128 672.497 cv
626.588 672.497 627.937 672.047 629.098 671.297 cv
636.517 676.497 645.828 679.597 655.928 679.597 cv
669.638 679.597 681.878 673.906 689.948 664.986 cv
694.188 671.837 706.828 675.566 721.058 673.526 cv
722.357 673.337 723.628 673.106 724.868 672.837 cv
726.248 676.606 730.598 679.356 735.748 679.356 cv
741.078 679.356 745.538 676.417 746.758 672.457 cv
749.448 672.327 751.908 671.677 753.918 670.656 cv
755.178 671.867 757.498 672.797 760.308 673.177 cv
761.208 673.297 762.168 673.367 763.158 673.367 cv
768.838 673.367 773.437 671.217 773.437 668.547 cv
773.437 667.467 772.678 666.467 771.397 665.667 cv
0 0 0 0 cmyk
f
924.658 646.887 mo
924.658 650.856 916.448 654.077 906.318 654.077 cv
904.638 654.077 903.008 653.976 901.468 653.816 cv
900.118 659.446 893.468 663.736 885.448 663.736 cv
881.238 663.736 877.408 662.537 874.517 660.597 cv
870.258 661.847 865.588 662.547 860.698 662.547 cv
857.408 662.547 854.218 662.227 851.178 661.646 cv
849.618 664.787 846.057 666.997 841.918 666.997 cv
836.338 666.997 831.807 662.997 831.807 658.057 cv
831.818 657.867 li
829.508 658.427 826.828 658.827 823.908 659.037 cv
823.968 659.276 824.017 659.526 824.017 659.776 cv
824.017 663.936 815.678 667.406 804.498 668.316 cv
802.488 670.127 796.458 671.437 789.328 671.437 cv
780.548 671.437 773.437 669.446 773.437 666.997 cv
773.437 665.937 774.748 664.976 776.928 664.217 cv
774.727 662.906 773.437 661.396 773.437 659.776 cv
773.437 655.016 784.397 651.146 798.038 651.017 cv
797.658 649.917 797.418 648.677 797.418 647.337 cv
797.418 643.117 799.578 639.696 802.238 639.696 cv
804.258 639.696 805.988 641.687 806.698 644.497 cv
807.477 644.056 808.368 643.717 809.338 643.507 cv
809.188 642.906 809.107 642.276 809.107 641.627 cv
809.107 637.457 812.418 633.917 816.977 632.707 cv
817.017 632.367 817.068 632.026 817.138 631.696 cv
815.767 631.396 814.448 630.976 813.227 630.457 cv
812.548 630.486 811.848 630.507 811.147 630.507 cv
802.388 630.507 795.298 627.997 795.298 624.887 cv
795.298 624.356 795.518 623.837 795.908 623.347 cv
795.708 623.347 795.498 623.356 795.298 623.356 cv
791.808 623.356 788.597 622.967 785.958 622.297 cv
784.857 622.936 783.227 623.356 781.368 623.356 cv
778.078 623.356 775.408 622.066 775.408 620.477 cv
775.408 619.267 776.938 618.236 779.107 617.807 cv
779.078 617.577 li
779.078 614.377 786.338 611.787 795.298 611.787 cv
798.828 611.787 802.088 612.196 804.758 612.877 cv
807.368 607.356 814.188 603.406 822.228 603.406 cv
827.187 603.406 831.698 604.927 835.028 607.377 cv
836.798 600.797 841.708 596.056 847.508 596.056 cv
854.017 596.056 859.408 602.007 860.488 609.837 cv
860.698 609.837 li
862.918 609.837 865.088 609.986 867.208 610.257 cv
867.918 610.007 868.678 609.837 869.478 609.837 cv
871.258 609.837 872.868 610.537 874.118 611.667 cv
874.248 611.696 874.378 611.736 874.498 611.776 cv
875.607 608.356 877.378 606.137 879.378 606.137 cv
882.218 606.137 884.598 610.597 885.258 616.617 cv
888.848 618.946 891.798 621.787 893.878 624.967 cv
894.328 624.917 894.778 624.887 895.238 624.887 cv
902.548 624.887 908.468 631.097 908.468 638.757 cv
908.468 639.097 908.438 639.417 908.418 639.747 cv
917.557 640.156 924.658 643.196 924.658 646.887 cv
f
763.158 673.367 mo
760.069 673.367 757.308 672.727 755.427 671.719 cv
756.706 672.404 758.393 672.918 760.308 673.177 cv
760.308 673.177 li
760.308 673.177 li
760.308 673.177 li
760.308 673.177 li
761.208 673.297 762.168 673.367 763.158 673.367 cv
765.24 673.367 767.176 673.078 768.794 672.581 cv
768.794 672.581 li
767.176 673.078 765.24 673.367 763.158 673.367 cv
.510582 .0242008 0 0 cmyk
f
763.158 673.367 mo
762.168 673.367 761.208 673.297 760.308 673.177 cv
760.308 673.177 li
760.255 671.608 759.774 669.674 758.577 667.314 cv
762.63 666.362 766.893 665.565 769.812 665.565 cv
770.399 665.565 770.932 665.597 771.397 665.667 cv
772.678 666.467 773.437 667.467 773.437 668.547 cv
773.437 668.681 773.426 668.814 773.403 668.945 cv
773.139 670.469 771.37 671.789 768.794 672.581 cv
767.176 673.078 765.24 673.367 763.158 673.367 cv
.0358892 .00909438 0 0 cmyk
f
595.448 663.736 mo
593.771 663.736 592.144 663.698 590.59 663.627 cv
592.143 663.698 593.77 663.736 595.448 663.736 cv
.248692 .0848402 0 0 cmyk
f
575.849 660.253 mo
575.849 660.253 575.849 660.253 575.849 660.252 cv
575.849 660.253 575.849 660.253 575.849 660.253 cv
575.848 660.231 mo
575.848 660.23 575.848 660.229 575.848 660.228 cv
575.848 660.229 575.848 660.23 575.848 660.231 cv
575.848 660.22 mo
575.848 660.219 575.848 660.218 575.848 660.217 cv
575.848 660.218 575.848 660.219 575.848 660.22 cv
f
587.866 663.463 mo
580.878 662.935 575.952 661.698 575.849 660.253 cv
575.849 660.253 575.849 660.253 575.849 660.252 cv
575.849 660.245 575.848 660.238 575.848 660.231 cv
575.848 660.23 575.848 660.229 575.848 660.228 cv
575.848 660.226 575.848 660.223 575.848 660.22 cv
575.848 660.219 575.848 660.218 575.848 660.217 cv
575.848 660.214 575.848 660.21 575.848 660.207 cv
575.848 660.207 li
575.848 659.787 576.278 659.387 577.028 659.016 cv
577.028 659.016 li
577.028 659.016 li
566.628 658.486 558.528 657.097 555.828 655.347 cv
555.828 655.347 559.369 653.172 564.901 653.172 cv
567.176 653.172 569.787 653.54 572.628 654.577 cv
582.378 658.137 582.378 660.637 582.378 660.637 cv
582.378 660.637 584.119 660.062 586.879 659.373 cv
586.977 660.889 587.341 662.252 587.866 663.463 cv
717.977 654.877 mo
718.988 654.054 719.952 652.868 720.663 651.151 cv
721.7 651.78 722.668 652.555 723.539 653.503 cv
721.464 653.923 719.577 654.411 717.977 654.877 cv
.0358892 .00909438 0 0 cmyk
f
755.427 671.719 mo
754.828 671.399 754.319 671.042 753.918 670.656 cv
754.32 671.042 754.829 671.399 755.427 671.719 cv
746.998 670.486 mo
746.998 670.486 750.128 665.387 741.378 663.637 cv
740.016 663.365 738.712 663.25 737.481 663.25 cv
732.318 663.25 728.43 665.266 726.928 666.186 cv
728.248 665.066 730.498 661.677 723.878 653.887 cv
723.767 653.756 723.653 653.628 723.539 653.503 cv
726.727 652.857 730.359 652.372 734.06 652.372 cv
741.17 652.372 748.54 654.162 753.548 660.047 cv
755.912 662.828 757.522 665.236 758.577 667.314 cv
752.556 668.728 746.998 670.486 746.998 670.486 cv
f
590.59 663.627 mo
589.654 663.585 588.745 663.531 587.868 663.467 cv
587.868 663.467 li
587.868 663.466 587.867 663.464 587.866 663.463 cv
588.744 663.529 589.654 663.584 590.59 663.627 cv
f
719.748 631.377 mo
719.068 630.967 718.288 630.687 717.468 630.587 cv
717.488 630.186 717.528 629.787 717.528 629.377 cv
717.528 628.297 717.448 627.236 717.278 626.207 cv
718.278 627.667 719.118 629.387 719.748 631.377 cv
.248692 .0848402 0 0 cmyk
f
616.078 659.646 mo
612.603 657.732 608.156 657.064 603.638 657.064 cv
597.384 657.064 590.996 658.345 586.879 659.373 cv
586.736 657.172 587.156 654.646 588.458 651.787 cv
592.283 643.43 600.661 641.911 606.247 641.911 cv
609.438 641.911 611.718 642.406 611.718 642.406 cv
611.718 642.406 600.838 620.276 611.718 612.767 cv
613.893 611.267 616.175 610.667 618.431 610.667 cv
627.25 610.667 635.699 619.829 636.098 620.267 cv
635.847 619.767 628.808 605.776 639.857 592.507 cv
644.505 586.931 650.476 584.552 656.454 584.552 cv
664.961 584.552 673.485 589.366 678.248 596.637 cv
686.218 608.767 678.578 621.967 678.267 622.507 cv
678.58 622.387 688.815 618.211 699.202 618.211 cv
706.123 618.211 713.111 620.064 717.278 626.207 cv
717.278 626.207 li
717.448 627.236 717.528 628.297 717.528 629.377 cv
717.528 629.787 717.488 630.186 717.468 630.587 cv
718.288 630.687 719.068 630.967 719.748 631.377 cv
719.748 631.377 li
719.897 631.837 720.038 632.306 720.158 632.787 cv
722.509 642.009 722.105 647.67 720.663 651.151 cv
717.743 649.381 714.277 648.773 710.899 648.773 cv
706.827 648.773 702.882 649.656 700.178 650.446 cv
702.218 648.787 703.968 644.896 701.628 635.726 cv
699.679 628.08 693.638 626.012 687.672 626.012 cv
680.749 626.012 673.927 628.796 673.718 628.877 cv
673.928 628.517 679.018 619.717 673.708 611.637 cv
670.531 606.792 664.852 603.586 659.185 603.586 cv
655.202 603.586 651.224 605.172 648.128 608.887 cv
640.628 617.887 645.628 627.387 645.628 627.387 cv
645.628 627.387 639.868 620.987 633.852 620.987 cv
632.348 620.987 630.828 621.387 629.378 622.387 cv
622.128 627.387 629.378 642.137 629.378 642.137 cv
629.378 642.137 627.857 641.806 625.729 641.806 cv
622.006 641.806 616.423 642.819 613.878 648.387 cv
611.298 654.037 613.908 657.736 616.078 659.646 cv
.0358892 .00909438 0 0 cmyk
f
713.382 674.083 mo
713.382 674.083 li
713.383 674.083 713.384 674.083 713.385 674.083 cv
713.384 674.083 713.383 674.083 713.382 674.083 cv
713.373 674.083 mo
702.481 674.081 693.469 670.596 689.986 665.047 cv
693.469 670.596 702.482 674.081 713.373 674.083 cv
720.734 673.572 mo
720.755 673.569 720.778 673.566 720.798 673.563 cv
720.778 673.566 720.755 673.569 720.734 673.572 cv
720.811 673.561 mo
720.812 673.561 720.813 673.561 720.813 673.561 cv
720.813 673.561 720.812 673.561 720.811 673.561 cv
.425696 .0184939 0 0 cmyk
f
617.588 664.646 mo
617.588 664.629 617.588 664.613 617.588 664.597 cv
617.588 664.597 li
617.588 664.613 617.588 664.629 617.588 664.646 cv
617.588 664.646 li
609.378 657.736 mo
609.208 657.707 609.028 657.677 608.868 657.646 cv
608.977 657.627 609.088 657.617 609.188 657.597 cv
609.378 657.736 li
.220188 .0705577 0 0 cmyk
f
655.928 679.597 mo
645.828 679.597 636.517 676.497 629.098 671.297 cv
627.937 672.047 626.588 672.497 625.128 672.497 cv
620.983 672.497 617.613 668.983 617.588 664.646 cv
617.588 664.629 617.588 664.613 617.588 664.597 cv
617.588 663.377 617.857 662.227 618.328 661.196 cv
618.328 661.196 li
618.328 661.196 li
618.328 661.196 li
618.328 661.196 li
617.138 661.156 615.988 660.967 614.878 660.656 cv
613.658 662.387 605.428 663.736 595.448 663.736 cv
593.77 663.736 592.143 663.698 590.59 663.627 cv
589.654 663.584 588.744 663.529 587.866 663.463 cv
587.341 662.252 586.977 660.889 586.879 659.373 cv
590.996 658.345 597.384 657.064 603.638 657.064 cv
608.156 657.064 612.603 657.732 616.078 659.646 cv
613.908 657.736 611.298 654.037 613.878 648.387 cv
616.423 642.819 622.006 641.806 625.729 641.806 cv
627.857 641.806 629.378 642.137 629.378 642.137 cv
629.378 642.137 622.128 627.387 629.378 622.387 cv
630.828 621.387 632.348 620.987 633.852 620.987 cv
639.868 620.987 645.628 627.387 645.628 627.387 cv
645.628 627.387 640.628 617.887 648.128 608.887 cv
651.224 605.172 655.202 603.586 659.185 603.586 cv
664.852 603.586 670.531 606.792 673.708 611.637 cv
679.018 619.717 673.928 628.517 673.718 628.877 cv
673.927 628.796 680.749 626.012 687.672 626.012 cv
693.638 626.012 699.679 628.08 701.628 635.726 cv
703.968 644.896 702.218 648.787 700.178 650.446 cv
702.882 649.656 706.827 648.773 710.899 648.773 cv
714.277 648.773 717.743 649.381 720.663 651.151 cv
719.952 652.868 718.988 654.054 717.977 654.877 cv
719.577 654.411 721.464 653.923 723.539 653.503 cv
723.653 653.628 723.767 653.756 723.878 653.887 cv
730.498 661.677 728.248 665.066 726.928 666.186 cv
728.43 665.266 732.318 663.25 737.481 663.25 cv
738.712 663.25 740.016 663.365 741.378 663.637 cv
750.128 665.387 746.998 670.486 746.998 670.486 cv
746.998 670.486 752.556 668.728 758.577 667.314 cv
759.774 669.674 760.255 671.608 760.308 673.177 cv
758.393 672.918 756.706 672.404 755.427 671.719 cv
754.829 671.399 754.32 671.042 753.918 670.656 cv
753.918 670.656 li
753.67 670.782 753.415 670.903 753.154 671.017 cv
751.297 671.829 749.116 672.343 746.758 672.457 cv
745.538 676.417 741.078 679.356 735.748 679.356 cv
730.598 679.356 726.248 676.606 724.868 672.837 cv
723.628 673.106 722.357 673.337 721.058 673.526 cv
721.058 673.526 li
720.976 673.538 720.895 673.549 720.813 673.561 cv
720.813 673.561 720.812 673.561 720.811 673.561 cv
720.807 673.562 720.803 673.562 720.798 673.563 cv
720.778 673.566 720.755 673.569 720.734 673.572 cv
718.221 673.917 715.758 674.083 713.385 674.083 cv
713.384 674.083 713.383 674.083 713.382 674.083 cv
713.378 674.083 713.376 674.083 713.373 674.083 cv
702.482 674.081 693.469 670.596 689.986 665.047 cv
689.973 665.027 689.961 665.006 689.948 664.986 cv
689.948 664.986 li
681.878 673.906 669.638 679.597 655.928 679.597 cv
609.188 657.597 mo
609.088 657.617 608.977 657.627 608.868 657.646 cv
609.028 657.677 609.208 657.707 609.378 657.736 cv
609.188 657.597 li
.0672618 .016968 0 0 cmyk
f
789.328 671.437 mo
782.639 671.437 776.92 670.282 774.574 668.649 cv
773.841 668.138 773.437 667.581 773.437 666.997 cv
773.437 666.997 778.766 669.735 784.916 669.735 cv
788.87 669.735 793.162 668.604 796.597 664.887 cv
796.597 664.887 798.163 666.145 800.885 666.145 cv
803.856 666.145 808.206 664.648 813.408 658.387 cv
813.408 658.387 805.977 651.917 819.928 646.156 cv
822.542 645.076 824.627 644.637 826.288 644.637 cv
831.023 644.637 832.312 648.203 832.638 650.646 cv
832.958 647.767 835.078 643.077 845.378 642.387 cv
845.955 642.348 846.519 642.33 847.069 642.33 cv
860.831 642.33 866.378 653.887 866.378 653.887 cv
866.378 653.887 869.378 650.887 879.878 648.887 cv
883.837 648.133 887.183 647.572 890.077 647.572 cv
894.859 647.572 898.409 649.101 901.468 653.816 cv
900.118 659.446 893.468 663.736 885.448 663.736 cv
881.238 663.736 877.408 662.537 874.517 660.597 cv
870.258 661.847 865.588 662.547 860.698 662.547 cv
857.408 662.547 854.218 662.227 851.178 661.646 cv
849.618 664.787 846.057 666.997 841.918 666.997 cv
836.424 666.997 831.948 663.12 831.811 658.285 cv
831.809 658.209 831.807 658.133 831.807 658.057 cv
831.818 657.867 li
831.818 657.867 li
829.508 658.427 826.828 658.827 823.908 659.037 cv
823.908 659.037 li
823.908 659.037 li
823.968 659.276 824.017 659.526 824.017 659.776 cv
824.017 663.936 815.678 667.406 804.498 668.316 cv
802.488 670.127 796.458 671.437 789.328 671.437 cv
.0358892 .00909438 0 0 cmyk
f
587.211 616.257 mo
587.211 616.257 590.545 611.365 603.378 613.46 cv
616.211 615.554 617.878 632.054 617.878 632.054 cv
617.878 632.054 611.045 609.46 587.211 616.257 cv
cp
.156374 .0409552 0 0 cmyk
f
603.878 633.747 mo
603.878 633.747 614.878 630.397 618.545 635.726 cv
622.211 641.054 621.349 642.33 621.349 642.33 cv
621.349 642.33 616.545 631.44 603.878 633.747 cv
cp
f
691.211 655.387 mo
691.211 655.387 692.545 665.54 675.211 671.047 cv
657.878 676.554 651.211 675.387 651.211 675.387 cv
651.211 675.387 682.545 673.72 691.211 655.387 cv
cp
f
873.128 616.257 mo
873.128 616.257 879.378 613.887 884.128 620.637 cv
888.878 627.387 868.378 642.796 862.378 641.592 cv
862.378 641.592 899.628 623.377 873.128 616.257 cv
cp
.292454 .106081 0 0 cmyk
f
889.128 628.756 mo
889.128 628.756 894.128 629.313 895.878 635.726 cv
897.628 642.137 877.628 642.33 877.628 642.33 cv
877.628 642.33 902.628 637.375 889.128 628.756 cv
cp
f
809.045 621.879 mo
809.045 622.987 790.912 623.887 768.545 623.887 cv
746.177 623.887 728.045 622.987 728.045 621.879 cv
728.045 620.769 746.177 619.87 768.545 619.87 cv
790.912 619.87 809.045 620.769 809.045 621.879 cv
cp
0 0 0 0 cmyk
f
823.045 616.665 mo
823.045 618.435 807.972 619.87 789.378 619.87 cv
770.784 619.87 755.711 618.435 755.711 616.665 cv
755.711 614.894 770.784 613.46 789.378 613.46 cv
807.972 613.46 823.045 614.894 823.045 616.665 cv
cp
f
828.378 610.507 mo
828.378 612.138 820.096 613.46 809.878 613.46 cv
799.66 613.46 791.378 612.138 791.378 610.507 cv
791.378 608.875 799.66 607.554 809.878 607.554 cv
820.096 607.554 828.378 608.875 828.378 610.507 cv
cp
f
634.711 593.805 mo
634.711 595.049 620.31 596.057 602.545 596.057 cv
584.779 596.057 570.378 595.049 570.378 593.805 cv
570.378 592.562 584.779 591.554 602.545 591.554 cv
620.31 591.554 634.711 592.562 634.711 593.805 cv
cp
f
642.378 588.72 mo
642.378 590.285 630.028 591.554 614.795 591.554 cv
599.56 591.554 587.211 590.285 587.211 588.72 cv
587.211 587.155 599.56 585.887 614.795 585.887 cv
630.028 585.887 642.378 587.155 642.378 588.72 cv
cp
f
637.349 583.321 mo
637.349 585.402 631.087 587.09 623.363 587.09 cv
615.64 587.09 609.378 585.402 609.378 583.321 cv
609.378 581.24 615.64 579.554 623.363 579.554 cv
631.087 579.554 637.349 581.24 637.349 583.321 cv
cp
f
948.045 647.22 mo
948.045 647.772 939.09 648.22 928.045 648.22 cv
916.999 648.22 908.045 647.772 908.045 647.22 cv
908.045 646.668 916.999 646.22 928.045 646.22 cv
939.09 646.22 948.045 646.668 948.045 647.22 cv
cp
f
939.711 650.72 mo
939.711 651.181 932.138 651.554 922.795 651.554 cv
913.452 651.554 905.878 651.181 905.878 650.72 cv
905.878 650.26 913.452 649.887 922.795 649.887 cv
932.138 649.887 939.711 650.26 939.711 650.72 cv
cp
f
928.045 649.074 mo
928.045 649.546 923.307 649.928 917.461 649.928 cv
911.616 649.928 906.878 649.546 906.878 649.074 cv
906.878 648.602 911.616 648.22 917.461 648.22 cv
923.307 648.22 928.045 648.602 928.045 649.074 cv
cp
f
925.378 653.387 mo
925.378 654.031 921.013 654.554 915.628 654.554 cv
910.243 654.554 905.878 654.031 905.878 653.387 cv
905.878 652.742 910.243 652.22 915.628 652.22 cv
921.013 652.22 925.378 652.742 925.378 653.387 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 19.0.0
%%For: (Joao Vitor Lessa Barros) ()
%%Title: (Nuvens.eps)
%%CreationDate: 8/3/2019 1:17 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6flH)pehGb.-_fIK_9A+]4;c:)@k_:Q)[d3"1C-W_mp1)+8+b[TIFHUB!ZfZ)r;p?`FEGIYhga*.Yg482VSjU.,SJjS^ck^d
%;';]Uj]]4Wb`sq#P4X.UUS`YhrE!+]nG"i#!:JEkgd-o)s7$VP+]$W[G,(2Okm7JZf]%r.5(YkE!C(rai5>\'4Q,r;1#1g@GVEba
%kRYJ#dWB[s+fAS)Tt;SnVW]bZY[L8k-Sa.NL]P"QJ7aXiYFVN0A<pgS"K0(!:5lrF]A(Ff2==bq-QS?VCV4!QZDYtAF3T:H5[X"B
%Im).29YdJ/a`1_D!"A55OK.*$`8JICB>B;5Yttu>HFtCc('7S8JWN+[pA*K0h!5Dqq(%ieNJE*l:XJS'_CHc<pNnW=a;52p4apXG
%I]/G4MWG\,UZgs+AN;`)SkTK&`4h^WYa6[sR>hN5jN6l`#+W3XN<Oq8bT$'J@E2c/\Atr>(e88Flkg;&n'i"iqQM+1$+dtJr'?=[
%n+Jb/THE'sc_/VI`.R%r5-HaB>'NEOTAZHioe_k^:un6W9qEVV,dWll"N**q?XTl6Be`<V>hl@*a!>^hV)U^k5CY719Q#RPO^mn!
%\r5pBi9-@)Mm#>]/Xceu+?@6HoQUkD,HM3STE+s?'0f(0Gs[:2TUc3a2[-F_*#NmhlF6cnpVCq<!>i`XMfte;F[f,qFGiZ3JU?5N
%FQ,8f!k/]aVCqr3%$8Beo*-A1BQ0jgHj%*L-5Z`r"GLjTILY_c<b'2%T?H1=`Z3)o_0dnkoIkrkRJ,>dJHB@X1'Sgb"uq2\%=-'u
%!D0=I'Hgl;%49U;E;LD;Qt*)O=pFNI?QQf-mDD6k^cA(g&?pZq>k)5^'LJIAE"@uH$W-["H;JEEJY:U:$4/Hq,Smc[q*U`M?pPmM
%'c\(UC1?#d<(3S_0P@3_7gm[:d1aTq/H!Uc5#;SrHEaokrk[Io?-HphoEA"#Uqm/_'R'E7+.'jX@(S=gK:=lUT$Ibm55jL`k!Y9u
%OI?s<j_+iPI8<f/]Rh4@NOd.BNui4ikg>h?WM,ubRXiS^VG;`3=a'EFct,b-E#1X[s'5PanpHnm"!,#A!.Joa;`Gn?q?K$XB;C9#
%$18+:;0o@(M(-8Sp`#r&COfZ2L<u"q%0s6XX^Ob0XQ^<I#k0j;]0uc%3,]!L7K'JZIg'_&"48\7:h=CQeHM>P%P]$Q)M6oh4['t2
%;-bl81uB/*0D%eED8B&A1e&bB*?rB5R_K5.NSoP[jHuJ2=OH2/8@CU7(75i_8/]cFBSt5ZMAVDR!CP(c<*,8ok3PpnV!5.KY@c:k
%99(l8!]C2`JG13Z97Z"Sp`<fJLfcs&=e,o`W<8b)4UBcJL'nEInEBBE>s5S'TS-sl*m=e-245Kh'V^2DX0ua?8H9n_;]R.OD>]oG
%kV:%C-/>./hq(EK!,>JW9K%@*5^OYsf]>UN:U6ES00m&h"gelZ$EPD6]uB#YdHk3I'$b0_RKCN)e!O&RDg7ojdWB2rh-!LKfN0XD
%lRmUuP9I6,%`_<PMdsWK7On_.*X>tCfBTsp%"@#5b*TnFjM.Ul/p.$tk3%b/&WQUia`n/13WK0tW\`g/TH*?l@=hpDbr4B$#XTAK
%b-u>*>_OW9^'R$6T/2YFBuVmO@*uJ&T[W-jg?9&V4C>JlPNm-TKk=7m,.%CR=L>CV#T4=Ur^&m1YN&+2-NXW>%u13)9+=I-0]Wd!
%=Z/AV3f*nDG%O+9NUK>ol6.8Q)]]8'RWn0gWKQ'som,B4a1M]!8Qslr:cUG)#_IR:M"?0Pg.`UHWL[R&Fab1(il$5V;<\WCR:XIK
%3PZV'`GDnG'QWWtQqcb-C6p1E+Ak+#h"X]*:$DjPnaY'\e6'F*b`SUW->@lVjIgbb7Z8MDq&%(7//oc_)l5:LC1H,&,g#1$V'-b`
%3ouEI;Q-RXZq1ZGCiq/oC=%%!9BLm5*<dZ5KFWcuiW)D<clcF75^\E=b.?hgjX%md@!kq.+>1EC'YLcXHN:3*g"/VeU"kdL6)RQI
%3*>J3KlZ$K./30Bb4QVRq"!H<RUX$-0SbaGpnG#5Jm=mV\Pk&'MWIU<S1I.-=RI=&Ef/sBh=:2fUKGh#rW^ai)A:(3cQTRD=,Q1(
%j<*Hm0dM);T:`e^pD)^/_.)t$mPhA:SafrVUOUY&4P&_Nja(Y3%uT8;N>)JNRig8ja:WKZV2/h`H.J#1Dap+d*f>R<*DjYKM9O@?
%52G\6,cALNhc0T%-sfa=YCk#EQ(O[%.HLgs+kSg(-b<i`98la=J^W\9iiY$.`S`Af/mgL.k>4/[P8Kg^BK-@d:29/`BY\K`e[^ju
%HpsT\@gG1$Yb$m^-M,iJSs!"d['h&:(kUuHV<BAO&UWKGIcQCk*"H(up[s/c*(*'QaMW@[)\%d6#\a,s\;sL^W@:n<91@K_h_5rV
%;(XHfl^)^>p<3marQ5,G+[*@=s)O&nWuT0Y!>*Jl8BKHq:Bt]X`4jmFK7\a=\8ac2^S:mG?PHgE8p3aEn9tDOqZX([G?ZF:;d><T
%'Eb><BG:c-ieA,06^aQrCZG1)KA_0`eb]X0+XaW`1'8.enk49jkSiN/cGsiD`G([bBDI/SGM;0=6bqg9o70C/@u`YZq#*,HUhG(E
%A4Z8-_Lg@<DW<h.D;\0BZ>PE\;0*G///oYSq>UY8qn70=+lMj$6H^DRce\Mj@:b.)Aj^gk+bIs%_D(%tWA0X3P%.R'ha)PdVM_F<
%niA3QBe]0"p;;?7;nJ-kq2S`p+\]gUWtYHK]3rBb@6B.JogK8K&N255$KDr4*CXCa#D!\PhsR-Sc_EE]-m@4Z1H]%BJ-%"T3<!b2
%*MpG=-Q,.cRJ8N\0`isYC1Yh%99KnnCMBak0qFKf#!(i'.tY(6[e7_8n>dcbGj^XMp*0gN2JJ&>NJT7o?Un$<Ama!I9F/uc_G].?
%LibJs^RD:.\E)snK__f"DY:<o_0#U!34'4<AN5!OM_GfOc(c%\ihiRuNa'8@&2FC/0-)GbIe;'>0G@g5(Ib<Pr>-GVEbs1T8)0'Q
%VoE5R*BW9`H4rp%?^s###=sHUBQkk(&9q'*e-bssO24TP2VK5[aXKAA?p17=SPSAtMlRK77#__2Q4JNUHRL6L$*=\k#".sd'#FeE
%H5(bG,KfY[RNA^SkVMi67G%(S%`W#b&Km&Gs3ZV>JJeDYr'V)3i&bl\KBQkP/J!Q`R$s0@6Lda9(jFr.Q4\(>2a(hb5tn6aOq+r#
%Xq?&6K@q6\Dm0nOHeO<s*!$u#7!uE7`G$^B;<;H*oDA5X:Ad0?79O1`NaOM4pH._15r,'&DgG0*;3&p!+:6*YmmZJiLV5+n6cQmi
%?5/(.la.JiZkqi2(Zi"?7=G?]pY:\Tr=40OOBdO8\$i3J-qC2m]&-pL$Bg2e]l]e<U3ufDPcq;`o+h#L+DHfu"R_@mq6^aZ6eY1X
%RYe4l>/f*]Lu17N6]U)/SR7a4[+"sK*UQYJ5(5rtKp)0,.OY1B[f`I&Vp(\'g:R!Gs.n6X89!!m-bX]OCL9E3AJfCJjK>'/[:<6Q
%,\5>e<]b$'rNt;#=Z\WZ-`qR?C>VI\M-#AaT=j4B.k3I\')Yrc!1q,BIk_;#`!Cns-S[Z=Ob@@pR)XocJPSPBNjOR;eFl][),Lf#
%l7[0_)\YHjhk<1(oPPfT+u//3<]kQaFEl!F:t_[-:+*Nl@<Mc$\)8Z.GWNFt5ZiHPj$MB94>:;)9(+nqj<-ujdiR2?VTQ)=QH[m<
%,e,[o8;Z%A9L3@]L`=h$54FDC^qU0M%fVN>)k,Y_(36njA=jNBNm0HHTY85=f\PKSor^Wg8bk-rpeU.0j446X0=r3PD*4On4*Ed6
%V'e'f"o^f1NppBP0;B$ll2JZR`)=eCqN>"^+k\ePb*\$`"#`3-gPLH5dP`3S%\D_#!C[$M%]FkSGY)Ud:P+5nbIEd,D\Mk$-==nR
%rhe`S%[4P6-uM!f3>>9UhqCVM`J'+2RJ'VEGH19sXoJC/p##4W8E+@^(P,,Toj7kr:@#Zmp"su4W2K;qjnUp=s*d.(^\`-cVtJs)
%i'"pl?oJieoH[4J^.5UmEpTstC!HC.do`M*hrE8g#hc*seaLge1.=uinXlO0h:<6pikD&GGYJ.J)oXNh(il:#UC.Uj7)3d5JV,u@
%W2cSCGZM;Lote9F"JmhcqS6T278)A4:j=SQiZ$P*DmHVLGsZu36,LZS%SdnIj33T.)5pK&lr__IV`3D&dU]74fdTXm*iDC1$qX2=
%^pbL4!*O&%8,f1F1!)j$Z592P@]Hr@IEJ0&ilE-nCaM.H^CW1?U:(<5<'^YWLgSYBc7-F];52j4/J"AK8Q1!\U("`6KC2H*$NWbC
%iQcjC[Kjt=4(hO,C\$GRK^A&aliMC&q-Km/86iX>4S./5KLn^kf^20=L*2(R=cRZd9_7s&Vo6b-nT%77m#1!TnT%77r6)?+-!j?'
%QNJUA(24O-nZp6QnG/DLioPt@cr8q8T>\q3r2.eGkWU;S^d&frJEKR<OM4pjm9Vf0;hjCUfYfMqd2qWQ[A,s&!p,Mr@m=c2"c(Q8
%'1]DQm0d%8n+INX0u_ZK8hhpr'oh5;OGRI*Ni/).Nl*iJ:1?6oj1&`hFn>kNh4T-5gNYc1l/0iII`;!R4W*m7qU4X#V*hM%U<mcd
%M&uWYkp84e/r(.3b1Vj.-U9X@lr;8Z5iG"R;.L3r9r364ite&XQ[HC%B1WSR&ju@(e_-;:""8PoADJMYp=I,l^<4dN^LI]A*Y/.?
%_8*>#b\p`Ipc=UZMU9((KSFh._eot_PNj=YgKLsGPZ`(c4p5Cm%,5.0NWb4UGX*VfpRnb@O@7ib[VC%8FOk_rdp^Ft4N81rB"hCh
%_gfg=*45kg4QS;X7In39*Wq,B:3hdC\$W%q`j)Q6;]at`a7pj($lG[X"O^nK;ge9Zij1g9F?*fX8Q.&7c%Y>(&n]\m@5^,,&WT`Q
%&1j5\aL=/im@q,;)sn/i)p/12e+odHk4B1[.V*PZ6Qn=`)]Zh>Pqo+tBG@mj;I_!-,cqT2>k^=U]"4NH61/E!icN'/Q9dY4K8*3E
%q<;i>3R!NAE1YP34Nc,on?[D%>cBnS:Jc-9hs><L+M<>]UJ[OcqJ]Q,c:UEcRt$d2Oq*iVg#q"\hj*tNcC)t*$r$Y%:'uHBdnc(b
%S7<'A:</"b7Z%(EM,G>j7N9'<:c\+6?773AqdqK,QMO4C^"+OAX]4-VQ*Oeq"U,#QEP(#3YIC$PIGa]#KUj3_jb*eT8$SQa`TqJW
%lr,J0D\:0d1"e"E4%44gB^QSZ*=.?t1j?HC%`';P7<@?0RerE*_[sua^M#T^JCuBA4,%aRE:+FcS\hp93;7:-3Sub&k8a7U#jBWs
%3;/FDM64Ki89[GM]`CKnB\$*EpDr6R`+nXKTBkt>;Mf=8Xoq'.H9,-eF?\h7Pe2DI?$87Oj'*q=J$/r0%[2hm"*[ai"ada8-G#t.
%7^tk4Lb?[F$mVTl=mkGi,tkpbG:8bEI+/#@X#EF/^06CM$Q8D+9%!O]M)kDX-d*S_R/6Q?RZgflHC=-_laF"q^-%(D$5W*^9[Qf<
%IGQB4gZB0)ijh:/84A6m`J_PQC5PE<i8t,s_@QIm@>umjjMjbp*ssNOrA*`0kn@>8'eO.k6fEauU=s*9\DJP=8"PflQ\/'2#R;]=
%A+0j\&LhIA0GWh<:aa17C,/:_hH[HN'L'1oq;bJ;%d?0R.GdQCUFcT%J*0(AAPc^#p+P[TI<U2(]6X\=`1HDiZJdGM\>#K;\AUN$
%f8Q;a83t\t,=`_B/-idW&@h\[aXK827DI5!3r)195*3cNL;1)oo\DDRmq$'+5/Si&I7e[X4$"U_2WEtON=Np1#gUL^l1c)%%\D_#
%!C[HY%]G(YE)>7q+i2!A3#p9Yd`68@^Y:*e0u_ZK8hncjMFN_9-uM!fOkuFE160DRd#QpAU)<Z82i]:GS;cKj"X[Tl5b]3^PANG8
%`hTr$?SR1\HJ.5]3^(5J.=Ri`poU=dOrX!$cg^bU8$\^mnb1KCnbHM[\DMRVcPNb<q;MVm9aK)d_RTkX6AOS>D"1TpgZlq!D#(7_
%b$s&n.nJ7=X,.g@RT8%(p4]mW?URplPI9FO'AptSIFI2\dhs%D/OU)%#ik+ZanU8jRY.83rQ`rhNmf-b`ut-FiNY&?<jILmG4]ML
%B&;JL21OB>\YgHka1+t:"dn[MaUUY^h3S]p*9BoF-\qPKK(RkMcu#CcZ4qAqr5Z(e0Lp4]B(nr/-f#\oAJcKI(2E\Cde^c5,WhWA
%lX*PLHm^7^"uM_0]<bZ.`+Fd:1]7,#ZfFD2L[ZGs/9u+g`0BYa]Lh&fH%,46K;6b=m,t9p$+Ej#Uu1?[Sl-Z.eAl%rr0Fh1G^PBf
%hCF,S/XF.aMrejq_4E;G1*d2df$6s9X-Y""f6m'cqi[Q%5VN$Q6]T.Y,WVNpi]BC(EB3(J"bh<2nJlpWq)=^l!@<&6LX[T;3BP_i
%Lab&$),6C\JMHT(W=eQqM"-iN#R5_)Zq8_V(\jMELGH>E(6*Ai+Fo,e355JOL%.G;PX]=hC`RPC2)p?\s577nY[?VcLE@/s,oEcc
%%g6Nr30pH6T2Y_*PY(HK?j?aH[3raMQ[h_RO_mpYfpH#%_DG9fZ/"FDs5"CX8f`:="$XqgKn<FRiskghO9Te&"!N0@mIRl@\CV\l
%nlINS)\3+cStP!,Ki^SXme:2YO=q;iHi2'h;n!(cmHW;!po=\7]n1$L!ci!)RYN7ae,'/`etL$4On?G>q+]n2X4Qh8g;L<eoU,[I
%s.mCmSq$b^J,a`;5Q@Xrs51TkqqqG@TE"N?s7,i5rr)lpo7-^VGk9,g"@C&\]4Id-N(K$S"_;D>cc49.:^9g!No?2iJDq-jgL"o#
%Uc3c#UXk^*\G:kD0Q(n-F"'oS4"?'SB[ON(*lTrrn1PZu(7/dX2%`ocg/#VN!L=@4;e8OWrn3lATsJsC5%*1@RuO&(%R#PPr=<A4
%[rGCS_?.D-h47>,KUaAK5Y"2r[CcLY#QBstE8Z>h^QZ41ln*e..t?eje]fI-;0$F\D,n'pco)i@D#4`p@3[j^;U?9;fU:c&NJ<_t
%r:6YPdaR$D4(pRM]-D@ZnQPi]Q;-a:JRF8%_DgE?hDl&!!hO+fga/!j!i"]:T?.ch-]4qeDePo.Jq?Qg,fr<>l%:e/r^n@3#J+)h
%D3'>.+eILMbL)Lu:k-6F7DgYWh+hWNJK1D*lG#Z')S7s+rN"!1]gS:Us*4bFr<5#<4/TUH7u`<%\C9bb@fa=tLuBDi``4CCYmU=u
%n$V9_[!o@SiR)al]M;6F&Af34]K>Z=\JJEdc*?1C^i?8*i-4Y.CM-KF5Dl('JlfbRG'a,Tcq^sphM]X>7.b*X_]oHZ;3Ig,0^I(*
%n3+p)T;s`s@!Bng+3aFG8)n4NqGUMYi*WC1*.A)GIn)5R$-<cBi.-6m?pYqVN4udBU*/urW&9&2>7,4f9ThQ[M_.fhfOAqOL7T\.
%P"5Shqh(-l`@[Jd"E7$J#eCiNf4\pAnHbQKo.e?X(k)c;9sM#ZnZtP9UEsr1s6kI;pV6b"TE"TQs7lKkrqeq[rf;R.D]3TRs8)W-
%JZo+65QC%6rtc,,q<WE"FTJ@4lp\`>^-o/jW%TUf%QL_D(LJ'/%COCj[8)aOFBo`[0^K]_`!%"K\(uoWbC_g-6%8mJ.st:9'\EQ+
%F_HBk/WtFHEpU/L_p?/fN^=P=!fh&^'<Rs1H;&:R"usPK<a\;X,mke)#PY=D#R2>sTc#O`:W$)FaR*k4RMdh))/sdT+0RUlY@S&!
%+VmGoXP^'eB`$RkG>PQ,`XST(/"uJ0Hleo#@iV/I@aU```?"Ce"gcA1m-JrP<.XJ4.GZ#lEt4.ZT$L5'+@6P3H\.hhgL[ZI783_(
%fZ&5dE!c:X6aA!/#H;F#IrUoNO5bs*25[mU>8i36^.Q4n=D9tJAAP?fj:k9Bh[cUs1#GT'^i<FHG,VAR/4VJF0:ih6FV6C^>f7>>
%#HDi_#&(:=OTi>N@k/5A_42@(RMn=nd;rO^/GZk9UR[63hSgd+@qKf-LbZ:oY%u((7eD"re7E8L\,#NH?q6Nj9GTIA3Cg8lPS#%2
%'`0BnGK82AbW?6rrrVOD!,/UkF:^[Qn3&l4+M/V$Q4>VrplbgrO#VO>[^rT'$p=.mlKoQ&lo%[1"T/;X?H]^3.E)bt2t.>o^tsAM
%H=Sl5P&*uH,qr>O,IgHXZ2#@MkoJ)9A#/ZtcjOr4_!Ul3Jf`_9FF.uqDWFkIUr`'co,"koKL%`=GDBr8+YUQJG>3B1-K2PBTQgF]
%P.Y-Ml-CGRieiNbktcJS"!QQBFNB\N9u[t-'\R&7k6o`[q,`48daR%XW4a+d#-h#1OJNff,87G9^HFfkJqVI9b*`0\A7fdXCan;h
%5?\HqGt%u+9O;0s:>B=<-!m,*2P?Z:VJg`92l;-mWKX[aQsD4QYK0`rMutmX=*"GcUS^`a6&rEsQFkrQg/9muKC6kG6,/4J`0@#R
%TKe$6OV?VDN:kArPW8a=KhE%EF0;6Ml76B4<bU#g467N-!.&n48hqc73E3D#;VmIsD7^j`D`+5o%BD:Z]=.H?T5*C;d3TIT_2=K"
%borL`=pGdtd\=fI!N-3AI9@GepW+@SqFbaP8HED44B<'uV:$4?,\cT;"Tr'g4!pP&2*Tq;Ml(]2>EnC6)bR$[m<@S_",>Hba6O+f
%K"+EWd;YAk^o&\.6eF-K`AmpM?n6761b1#$^7#=g@^!#4aSU*1%lI,b-]FYZ`Mk+=0R/s`>RN8Y'XI?#Gj0%Q5UV*:^tg$f)t<47
%e<JI%^s>Jdb&RnR>3Bq7d`g/#:4jPL#nDop9ESQ**H>+"m4#FIdn;HM[%si!IM8lC5gZgf6*P38"!P*i!DR&fK1:jNn=+5NeYQPM
%_?iJ6D>O=B>k#^O$su#X?iaW=-#u.<0TId1oZ3Ut?Q.NBbt7@Wom%E7`QN51OHtmJ1:7;p5kmoaY3.=n'8IO2Ol3g_>(VBtPW7=j
%B&i0R;9-.rVP&j>>.F?MM2T+V]etSVenID$/)>1t@n%$:%lR/?Am5i;N43*[buP6,is\T/r8(<DVX0,-FT>Q6)cYL,`tO1E0:`2V
%Ch@Y@WX+eo*A4T5X]d:X?b!_M89YEi5-5DOq"Cd?=eVN?O"qBC7$.tu9aE-]$IQ&erG4/*3BL'ak^MD<,_23kJ7AB^_2R$Kp2Y8<
%G!BV2+FCb'06*6C<0`pba=ef7#&+ii$P^dDSNWZ"IV)W>,Mt.j^1\ld8?0%fod7Iq*)FsP1$e5n<S/M"DCIN@5eeo)W=^%*>/4EI
%b`L08QCU@h<4p?h"FcCrW74_NmXZm3854Wa36/fM,<"ZI<<ar:;')[_Qk><$kROR#=(j8G9/GK[+C%'(kGKZO!*dYqYSqn<.[+2%
%Yi@)'PZp^-VpZG7G">TDgMF@<"+2mgF1O_Mp.1Jf9Z?6o\!i?C//DJiqrCu0I;18:P#n-STVQ`\A*JAWUHE.Y'1kG:gB7ZU@+mW.
%0iPsl2I-L+*I_)WJij(ek"O)-4?DCl&2G-@c'EccH&"6JCE;Q[2Oc:=nZ)N&"!0GPH#V/E\KqU''V"V_@'"\/g$k%CR'PQ$\GK2n
%=UC)!;c]0Q5pMC.YLa#DYlmu`->!PE=>WuEJ@AYA'KUoI8f9NsiHAg5(?V(mb$-,0.W#44Etl)!,,a1nBSM)PLL.lQ2H$fr],Gg[
%Pu:Y!"2,od3&J8$0qtf?45n&h9S["X[0`)/&gBu$d$bX.[B$RbfHBrSU6-S*?B55_Z$7O7En$_%cJEf$rY$3pQp*Z5<IV.m47B7]
%dN^\T/3nEM@$>_$=Q"ZqQW7nN=m)"h&>H"*KiW.E!X<j1GR-21`b2lX[kSBi,M!I?4>X3:G"@.nK2eT]Cdi@uU7Qu,Xm%"`haXr&
%SF6Dmk*.KjnACH*`b]qo\5/g_5V<>(CUc'[U==bLgo_S'M1ZgCJ\b9?$M1?HRT6*Cj]^*=Y+!Ah>HhkkcaW,_=&DJAlr!A2BY@1j
%rW!Jsn3K=pb9C$s^0,qLmA_n!ctJQ>=YYm5aS<3^FLkWZ<,&csIcsPFI[$8&kE;9#-KW98I_Wef`0I('$1R,r?D!`4#o^W>9<pT%
%f4_]Sd@L1TW=VtWP3.M"0M`U1-^O-Wd`g,hnFitcF)094jL@Z7I<$@&YEO3Mog"]hBQ=O/K>*q3R._;rc'uQrdO<;:atTnm0Z$cd
%$M`1N;HQ7P?uKGi@gLHT?I6^2].KoPHK@[b:&2cf`F/frK!hDsN`CMTU't;DL9!$8WL=Br;"u)3nlf77jg-P+;DX%)*8^rT4X]m2
%R@W),/7DT,W<HMLOis#cQ<C"O,?6,pI;'=3:u^qY[G&he<%B<Mg:LJ2PBKstTh(J'0[XF+?dY3'O\;gB\\YXBDn[8'=6!PAb#TR5
%"flk=@Fgerc[PihV:AaUdTWd'Usj)'731SMkUU;G^Xdl7(p,mF>SV5Ijc"aTRu+r0?jsadY/#fFQqPH@S1l/I&2s$s>>K/QnASqt
%IqE#uKd-F4iI<1;_8lfX=VVi6n%3$'ZciAB"KspDnAVJ]SY%9][F[V;Ar4Bs9`QMQE[L/2LD@8GeT6JmV$DCS?c'i>.>huRi(ng#
%^9k67@)3WacJQmD8ELB\]S8WkR?uQq)1EaE8'%$=%m(4";ns^_`od"ied\par_rHUs5#sZAi`X[QT\-j'2D@!_Wj_(*483+NAY6&
%8ZNfWg\d<#S:r'5I8f!a0$QQ*4On\&H9h6&%+l2=mEhCVGUi.Rfg?U'C#S_l^PoKT-LUUEWI_hK\@Zrt[#Uqt3/Q=SErmD<s7$a3
%Vsq:4QpU-&?FVDpHc?'Nk]N!<[PiUI4q=_3!NN$F1UoWCQAp#q3(;@U\5T?0#9;Zi-@+.O#^ROFSTlc4G@+.qHPa\4`hiG#,;M=c
%DpPk6C_Y,2l!%pUq<3<"Nl!r+r9]M:ME#A,D&)U\lrc`.SoOCgR*^J2p,lQXqYd7..n)nu@9]U,`oCtRh1.(Uc<g?1BCkPp?`m82
%Up\0$-Es/kZkuOpm."eI)YDrK?srOBF/DP&,*9A(B9VlTjm0uflJ&t&aTI"*0qM"5^uh\c%VD=\8pC+qR*Si<dLj':8/HRU'Bh&/
%NfQ?FZ-Uc'"C,d#P@1s*gboL&5s`n('`mYVSS66T6X)>+mcP3Bj06L$VG8?!E9bl"a.k#QXAiYu'>'XZ?T^.EdcrEo6`UG=;lf6G
%?a\V[N>F9%PL=2!MB!V8DD>Q8l]Y(Z\\*@>>/ML6cg8O8JgLli2*\oaqQ-(p@__h"Nj11]=p@9;b5n#9CXhX.:LUB^T"`^G\SW@h
%+TS=j(p3Y-'UZa>:2@Q\5A2X:#-G;!,#59-8se&]>L+n'j"^/*F`n`?X_U0j[Fh9uV8_*fWV,Jc1Tb;=mFV2nk=)N1Y(,",n2@$N
%`[`*I.-o,n_q3UTD5>>sW1]+gDZ\WpXB="Z[%[Y>I#?[cafmY)9g.^pg5M.Sdq3B6EGaPdHdih21VL6XQm]7P_U-k??J$g_RaGKh
%??HmF[S`uJ[Fa'u[C.rBeS/r9HU`A>NXd5"a4op1pA&J$W-rCVm+P48hU(t6B4oqI036X6BnFfoN*'CJ$/`F1l)HP;II#b&BfWde
%YL=8C\P>@^<cl?WhP`4@Dm+;le-2^jY_Er7<ZrYJ%pkY(0KS*,\>TdAR`r?6Gl"@sR>>oiS@O!qV2"Yt0)JoEl3^=@Z*+"lYNi.$
%MH<k$?VP[p>cXj9_a$_QM6Th-DJ7e9c3/[c7ga,SFU^C!k\!]&=Y3a+?oZWC?a"6!B6p?I@]6b4SK#8;iQph0cWsB91O<m6i.PM2
%k:_t35$i`Pf;C9[<IMT4AbG/S;,gnL]^k?WY>L)S:2_lOT0b?)Su<6[SfBR6qH%n*'nF\-l`$SL2'rN?]';`ab[aKYc>:h;i>EC[
%]q5&,f9<PfA,GXE<gmaK;JFp.QM2XEB,00\n#UD>ULuO2E:3)?eZ,/P@K")H^JYuANF(95fo4*7%GJlc$G[L;\!LZYD/OYVi0VC3
%i9(_2_tg,`Ak6D0L*8Lg)B(*%W5[*h39,`T*Hu:D*fo.d]iW?pG\t4F%'tD,@at)WYL,2l>oB3QairrXkT\#c%=^(OWIu.>1$8D9
%P-K$hRMqYbHdm:iQ0T7nN:IklV!l,Z:#@piF,/ksA7TTu-3reH20iD%:/g4'nn:X]BWnC3D=gN0a4Q+1L,.(KcgtSaeG%kR9TsLj
%D;n%T$`FM/Z)H7?m"]K'rfB?\NkP]XF!_j:2-5<g1cM<AU\XGBkaHk;=kPo4@X^,"/En^_,h]T8;RW#?:bKd>(XK23P']j.QC;mE
%ZeQ<p2jP7`>I%)1-3Rh()[Cdl6i,&>FW)@o<rZ+pc$GNHNi[NP)/6c>dY.:R-D.E21%Aot;,7^'Nc%)6/=+,9boNV7[Ra`VZ)(g3
%^?s@?*ntQ^[u?<nYm/ru-0V^U\p=@,Z('MEUtqRn>h[LEoRf<EAgr)7bNeJ=:Gn3Hqr5`M-_8YE6T8kB*"G?[jp6V\#tO"GmD`!A
%pM!.@pZQV04Pj$W,A2GgQk/U>V_.^@EVbZcYqnS65qpS^bC&>dQ-[dH7-Qc$*#GM_Q`fO4G<+s]N[rc2qcp+Grn19\Eurs3Fn+,g
%f[8l.X$(Y\ZT3#cH*6fbm(u8'Yp*8uA$&&n#4#N>I+T,5`XN)m)1]Qn98a1=2Cq5.5[Y?)RLZjt%\BEbBti/=)r@NHgDr0)gbCiG
%G*c+QGOA\91["1gNI^o.X>bDUl,M65pKClc.Gr=VV\Vf=4\qcX\EC7^#^UVP<=FEJ]""!L)a+]K]u<(&c?j=ij1OI/)=(isB<9E;
%Z?!\+9gImbV,@NT[B"'4FWCS.pL^l=r)RV(_B6^'o)<IReaPN`NOHSX2NRfTTfZc"qWRSW6C(pn>.E@/kr-nG\OV2l6X'Y/%iUp0
%od4pTcd.3><72_uO$t[R<%7ebdT>JsOIIfO6:k[&(:qWscU0AH)3FdS\NOc*m]OFcXA0/Qf0q<>7h00?WYnM50Ti]iR#ZDi\SNO^
%2R/BVqPbJ!h%WQqNkfPX0sf_\*`'IIkI"a-E)$NX/a%'Nqj48Ai[tt*=aQIu,r+aUgT@e[FB8$Z@eO&`M+,maVq>S&>)9TT/!'pD
%1MUO7E&^ajMqB?IFA\ToCDTCiT"\TE6n%K'k$7FE^gi6\bQ_ps2]9jQg?5A2_F$F^M+mAUOLQ1`oFnDT@[K!CO'\$DX8+#DRUJn\
%3LS>DB2$n]^ndKe<_k4(0#pj!N[q"'SQm[nG!#/h"4^%&?*$)Xl)1"Z,!C:P1bp[nN63Du<_MTO;4GX'f#_4KFS!Xe,HbH'HV'7#
%Z^iSdk-SPi2!8o_T5t1Z,m9EY13>%W2k,NCA"cdMT<9oDr9Z0Ob>55"6,DD/`<lp0jgB(+cqP6]6TM#WRCb,10iDp?2O_O]iikkk
%9'5C@>Dh9%[n7c^$j#H]EFj3Q\LU2)DKncE\RA*4bJVoKCW1m@>Ep%j9N@P5Pe6LTN+ak]J\gh2iQjVkhY?`0Q]q$]FOaO97]P]c
%b[#YDc0a&jbfEb)%gdZdE:Gok[CKr<9)I,1?NmdCm]%0\)ZZ8+^<LSqRp@nQIc5P]e6>5j7=B3%?#7#Aj)lU0WcoB-<QhJCeNMWT
%_</^^ZPGH#RffhN\[HZcqWm30.=?R$LgOFDc,cjFH]I*fatQk1oo5Bk)b[Kq"^l3\KDtPgIF+Y!@J[7QXZujXH<[eF,I`;&V0cj%
%3=FW=T<:8":ClmO]p>>fpYfQVikB+;e+]&bV>Pl<=mJGs1O+B44a1@rQ=s@sQnhM4O,oi7lq.*81]f@,Oiq_,l2%DWI\N=l^pBBs
%l^t63qu/AdY[4f0f@QF6_2JWQh:nXj`SrJn?W'gMo^_pqFc!FkkE391[r.$!Gca9U$am$1UgC*E>.mt=_cT"nDX`g)!AN=6Ma)=J
%;M"'-m=X$I<>T.kPLbA?oG0/'=c;,aa`/e.msFVDh1#%ZG2=>6j.:hBm3rID%:a`=@VP5VF#ApcCT^6E3$'d_jaFL(W2o7R"#[bC
%6c\iL?gAJ6)iqGLlYKCRN^Ca*Dq%B,![ID]7Z>YL=2FF_*%*,FgIZ2o5As4BcgGUhC,1Q<du4T_S9A1?PdUge**pd8DWkLVG!9tW
%<W0#MBYVc)S$iU<]EMYO^:0R5TjtGN-cs;t:G&G\%HLWLTca+aZ#rOV/P=LuW?t?.06Io5+Lp#RNjH4K2Is;12i']>b'_E1ZS@m#
%fY=\+[^GRB8H5*U<_5'sT\=`i2*T[<Dka*7EGI4RN)`A'cK$=in6i7JB!lfg.7FhDp<8#WchR1lpiS2inQpmlO/>O>R<JbdN4T]Z
%!:9=p`hm+l"$:ZAO$#M+nT4SdNO'q?$\4((b$&E1WlQIkq5\Q6ge0OjW"\KoSPIXA$Waf^#64tV=[P/fTB"A':J(#g_[^.P1(,MJ
%%;di7I\'8\cYeoLA((kePO;r"NbiWHJP\SX\pATp1fM\c1/r8*n5K74P^SFE=m*_h[N"@3F0=+"@!I!/?eX%U])QjcJ2,Jh\=Xa]
%WF=^+QVcb^R-rtq\+ht&SqN->T\7idi0af,N,LDqdO$!Nf<[l_Tq;[E\0ZHB!%.>Q[WOB3hj$2ZoX6"-$%p9394$=Z@"<A/,5\o.
%egfs?+J^,Ln/Gr^oZKT&1lf,&!(3<jKW4-D00(pqQlM(PELnR;N,K7.90?)l_SFqKBg'EKe#mCoMcM#S&3r]68['#N='^!u7CE@J
%(GLu&)\:L-;^iL`-5j!Tbmlh'*!^3l!Je:m+eC0RlYeQPO:T?El,&'[*t+n.BA7^4pCMLloM9kLZ)Ibs'_>Q%E*==\2u]j,,ZQBU
%ZM5FJ#&X%U)#g>7Ug:pL0rq_<1D#KehK\10iL9g$=@ZH^niprqm.oYqq+[_3Zqo@201'UF4*L^En1A71`A2U\qI1"AFEA0ZO7Za3
%TD@/FN>V:h:&:/`5c\F822%n#&9)]t%U5'%rgHWP9Xf:f_jK6F^\>Kd'@$0M/_tW9hD,4B3_T<2f2q/2F?>e%%_Gu?G1Nc@RViXH
%!>)9gl+oa#qonHN`I(*#JU&QsqE.sU(*#E(r,U6Rk]FS%l1$#&r=TlM9HUeWAdS/>^gu0/Xd/P8(:/"8).%[-Q(&/1Q@_;XnUh^d
%g20DBoXmai.I(Bj01dH`0'iqV<4;#GS5#(7,ZaPk_+,!1KT9O@%NUTe3F/@^jQ>4HgmCeJl'J`+b@oilQnS'F3N9qDWTNjbR5Gpr
%QIO8g^X%#+F).4T(cqpQ;IhWtJKcUbP]M\)&a+H-h!pP],$T)b$a0S?T`p*P%6!&iV*su:=imQ;`?9o%3k]@02n@s+WQ[KcP%0"6
%B&1"i.g*,FDsF):K7FgVmk%[:k=,Xg^q)Si'/EZSHp_h5GI(QkI'[n)RB@21fco:r%@TZl/DX*!/EQ%pVrOK5[ce+p2-pkMCn(Kn
%Y$3$4<G^(BI;oR9n-F-)#M_2$XZ<Q?Rj8n*`O(P\R^5<cI8f!pBNF=_][\PEfhCo#(4\ES@@>.N7:mE!IHf#qrS^s7nafSS4*i\8
%+n1(=-3Q2CHn^h:Y)Je^p$p6UDKeP1JLWL%"8/A<R4-lK@'QY$UG!Rnj3<+ZROZ'0EJY",)UnY<kuhI.lIg".U)if\!!PJ2JS=j?
%)g@W"!#pkBQ:LSW'q!MkSZt,c;*`4')^+.LB=:pln)<^f;KpVj%jIp*9q(<E.IY?LB7(Ko/s"8m3Yg@-.rdps>f<.O^)kjW)@0YG
%<c>Y$E<U+Q8fd@_?RIs*m9.GG3I=N[\PtR!^Vp2Nj&(d%KJ.;V3H_U<"s"TG6UF`N)Z6"V)D]8raoCulb3gd)2p+A!JrkT9P!W6,
%F%8.HF/8-ipAHNES")hT%GScNknU9FCj!;V8,r_m9)FFJL*'V_&`K4piRIWWnUlAEJ;t8Z?m)<Jc>ZmI5YZJT_Y:JC_tUE-,rfQu
%W;Osfd9r:M.7*cb,4I4GaMjU:6=Vu9JWS>HjD%,:##EY^Quau?lPYY\c7ea!Cs3"^ZS<?76]bX?c?Vg&;Fr;MjmcOSjL\THcE.<P
%6[6_+`oIt4F]sGaoA<Sn#uK5<(Ruhq*XKCZ)jaWNXncOlEu3IWdOQg*b"L*E,1/:!Y]3['XrAPm^oYToh8",$QE[`W$gDV.lY$%*
%)c2lBZPGe<hajV&[Urj[0dK4T7V!^D+kB\/6t"OK2HcW;I(uW@((ETqBm?XF(4`bsFWQaqL-0K,);U>kq)MRhm<f(g+(a7M`%>!g
%RkP!r>QatkZObR]X(PiH6]#NOhB.u4_c`FFfT/G,<LRO[3'MrY'go,5aPo#Q739YMb&EqhF%pF4K%76:9^=UOZu(gZOcL[V'K3iW
%EBD7g0Q%Gl)IShIU>QIkJUjV^oUCA,BR*D_[fV]hE]2koSJCrK6&Lhb%j0_%(gY&])2Goo9p[Kh]OES:2OUL>)qToN=.!N7AX?PG
%GFXYJ%'sNh;7EXE1BBi$U%t"QVNNgnZWVNY'+&M@QjUM_.BXj*,S93Hf+W_U@Qe"-X=nT7,^fEc6DARC"b#URfWG[Y**X_WKhkhE
%-\3^rFKRq<Vg<$M*`qh`a"k#P]`eJh:Lkp1^LA-7WqHEtlHEI)E5k%Yh1L$\U_kQ^0]Hb[c);16+V;C_<3ti@Rs'[8ot)FHM.$Bh
%?RlW-&pjofl9-&GcEVP^(*7@'r3Yl!1A%<MmhL*BXfKB+/3RrS/d)G]T%FEii2W[(cutar;6aeZ0jdgV8OA[Si-o<^*A'XL-D#ur
%St?&aeY@n&L9eVl$Q^%B6n.7P`WUHlb<[^EL4RB+4HRPeU7m<2A17[YlIiHrm8td-]*n6se=LYim[Ublg$b3Wo!f:L/3#5f"T3;*
%mU+^h5\k#]DG)W-La!qd6B_rnPh>T<EMOjeJaDul<M.N0k:^^?BG+RU^q'EfoahORbJiOB/Io"qRp7QY!V8B?ip*hsb,-c(jc).D
%dmblBRWiLK\^[%L,O*J6K_p3$k9`'6e:qhF>e@]1Y9t]b7V=/1Wn;j^?gFnL2[m#JccM;2Wa4La,n."sD_f>*9t>o[^L-.m?r/6R
%rNedC*2lN8&C6kJ[Ykpk[Y3!9`$;*?*=+BT>&!0M6mL<1"`k>gh!o/sLn=p$&u+O!RtQaPkANVVFtmOjr(MmKJ;OM<SdEb6PKgII
%GUFQC2E=2t27IM*MtH2?f0o5!\-!;Z@k@KopOM5`*@kF/RHf=uZuME"/+F(_C>)pMZ+)_\1%n/$OQr!f\buhE]&P(U42k;Y&h(a%
%aO"'_D&gZpIJ7V`m-`!,h'GBG5h'^T,f[rHHcVBbc:uMiS>VqNSqGomZEdV-^FhTB/[C4`"Wap.RS(20,Om'O9r)Pq5/0@GZA[,l
%da<b0]nuTYj``("eJL,Y&pNEbS#jmupOM%A2Ij)iq]Z]^k!$j_r\OLW0HRrRUE]YaB+PU2B#S$^qHF6q6QMPLL0"6-Ico&KSVuk1
%U+'[YiB5]qF*JcuPI#"lpG)UBZ<%R?\^RBe7CS!nBT:20@/2G#12Uk(PjUKZ0L;56e!53q(Jd/(]!\eS_i%]/1C&XHd&nNtJ9>/+
%'$YG:b%&Mt4oBABS8j5EM-Aa.'W.ISI5'tG<]E#^Y=Gfm;&A/[Z5'l$O4W'.AE_a#lAiPP^e>9GE+]cn^&dD4Sd9LO""0[Yfb`8U
%1daL0H1pCARd#oFiu[&+(Yn=?<[JUmqU1KG:U!#jRaJf5(9ZN5,I7rqNSL6K5<#6L+F$=Z'jL3&_S':=D7dp',E7EF:"^6F+!m@i
%!`+i/qB4q/^JXN?okM]HRTS6ZnIiUJ&aeF=!9$LN'(ol7D4<i`Cl4*NfQ]Ak+T*&TgKa#!e[eknNW,cf$(OrMLNK4oY9gk@DJj7`
%TClAq9X(S!\Tgs]jWCha_EhL%U_Bt:aWDt&-2QkWrlH)bc^ZHB,Z3-8=+WL>Hg?kPjLp=ibF,%5RJ]1rES\s:DRhI0@+0AOaL:c]
%#/JUZR!F/B\pW4PS"r%sdn*a%-B`>ek'9KSRmsN5AM+=jI`mYFeq,j'JkBAKHrT$e]KVfW49==o?@^_FCtdb<XjW0FGXJ5oVO7^C
%l@Y2m,rl!>-8EIdcn5k`QEiKIp?'M7"*%MNFYScGa(@:.VR@pcPj*foN_E\4l+PPOkG+)E',%GUs%h($g%i^A)&4biG`nc>!pG]o
%cor6@I?HjY4aIZ*gkXI/K^k`/12FG$EJ`*ah@i27Q7dOKhBZWuXE]9#R=WeiNWs99/?!+UA`sealtYoT:qsG3qDI(>(!#R!Pqn$8
%0?e]"0qR\**9maW5SekXK&On;lS2ZpS\#"Hc@+5^A2AJfS.-k2]&g$MR"6Do])9rl,*qj?B"iA<(`Tn_dC<che9S&]`Tg-`$9FR<
%g5r+Oqn.*=NFQ349`28]eQV?"Li]cY6QnCM+O:FWa,?Uh?]W`R&H^<E1[r%^re_XQQLGZ3Lh+ba8Kp!=][UTC[7VZZR!F7S\KM2t
%:\*AS(<V>T"MV#:/q+rt&SUB,$1KSi5Bf(=nmGiU@h'iR+$lrdB3X$\UP.6h]Zuntc4e\Vpa3[.epbq@!g$g1SMHR%3U+!ES$IJ#
%VIC&?etiL4XBNT:Q(#ebgqO1'<<Zcq[t!=;&E%rHdmPGTQo!fpJq.Q)F&?GMS:(Gi&3o4R'7QpEpS%QU9%mDgSr8spk-rfBX2XK3
%hN?Ci,)uAb?aG]QTl+YNNor'%MfBKp.PBN0Lg@KMo=$_SCs$D(Ib%cHKu>dlZg?5;*o7_])P(#<#UnMXh&n`*"^a\.<'3Bl>D_Os
%hXFoj4Qf*TE`K4f)Y7b=[Xms'l,&*_JK7BY^_"Qclq>;/;YCHtiH(CM8l^1K^&4BR*K=H_G',S]3q(_KY%bOoaq-30?#jC1MJW!D
%dmQCA`T8\=DG%8H@&#ZC!,ga&%8=MG-8KLf"7CEmEb2%lAbsQ:DR7@YN(eQ\8Iu5[J6Wf"o1^Ro+Aeu]bW,Fp>)T9d]dk^@1n1gj
%4gcE64=/"cK_LihS?\_mJhFq%<>iQ[/Ebe@4BtA5KA:*8>ZogsAp,Q3=?.2\**.=*SSs>'&f]c;FIV74kKZ3eo'Dr5:@kR<k3p7t
%'d]%fCB,YeTS*=b4TJ]+CJOV`1VKD2ERATLluYh8:s\h9Qk@mf#X@&^E(.mW3B&#&e,u3D09Pam9QUQT.Cg)-*6Z0H#f+h<&@ZZ1
%EiVj"MGJ/)o))Y"ShqT7GjtjAh4F^Bo'#Y"4&mNjj7(_5Lq`HUCn#clAE,#B.:(?moCB1`2TrV(#-;t&0an,6p0@#LfR1nbRYdO+
%^h9H$1tbKX/bR`<E!n.20eF8l3oKE2\<NC"5+KB!'=ITd>[cg&1n3_'^Ytl4\sjm5Be/<1#0o@L13;>+A6(-R^.AFJINo5;'sZQl
%rfH.tQpA%4IA$D!G@f7p"M_Tp"l'ZQ,FtAP._qc:/]glNgp(g&2S'k.A_3;.HgAp!JnA80HDO:2/6TL/-IW@##9q^/B[G6^.(pb\
%FeVWt?i7/fb=EUT6S^#`kN.[$.B*Ks\gQg./l+-.N?9T?[+LkUR-ramFWbk4I.".#Hf5_%8rOI_^RCfaAhaYB\Ke0L1KXA[i"0/o
%KjB!tnmbk"<8CVf%W^+1s16d&!Kk((B+;?g7+YL_Hb-0C@q$F2`\ZE-HKur'$^!<2"6#6b=,eB$AW?G:Bt@))g%[t!CuTf8q3++3
%<Gps]cIm95FDhJg=TE=g0P.h:h/ffhpG>5YHSL\#gKWW2CfVQ61\?DNQZi"a)@Wr!\:u&h%!pI?bb%PTDla=a)6'L*W&q\'l$KN>
%_F:2!=d))`CgR5#\<8`2%,(Ph'fU[LlK6<Y0&#q]1$C?9QK`SZ4apVPNVd1)H(m+3fl'5JmTbo"IgX+=c]3:FR0p;eAD.-:\B@/`
%kQI;ZO&"oX@noGOOf.MU?s77'l)2@])s.;Bj1&mX)c.Q_*Y:a)*8iC<;DW]Cd<_jW;elfL[OR034lS"L\7*0\oC184,bCa;%raI9
%`b+VPV6MhsPW/D%D9@`gOC=jc_8(1@#LfdZg`tYC=/7pHl3p_2Z/V='Mq<%$db.&,*'>a&(><Vk(lGp:(!FFGZ,N19`QdJh0AbC_
%3$i*rq3<t08ZouH(A*1:\+sM^e+B82iQXA/C8u_Z&0*3JDXk0OT-B6L56!6#9km?oO]-(g@u-cG(mf3)Ef-I^ple>X4`\\BI;2cM
%WrS<4(3m/*2-l`M32TZ9%9Ym$f\0JqG/nZIo0M&>'p]+4BE)N\HBM[G5A=_/?6A%^G0?04bEJe':DlcHkWa5e(%H6So0Zpp:uV0c
%KPTFc+I69'oWCPUpF(W#;IP"3WZZmTNoWMfF\n&@QY2($\d[C<\2*T<>TFI:Ps+bIq.,2NdVABMqQP(I[gTWEG`rrS'RrZj(2KpY
%$HLmA!lcKs"`UA#8Zbe2=<*%l/pV-Yl:3U$738&e39:q8.+V"jU9pWn[cV2:&_BHaUj/"-/0^@8_YZVnDB+mr4?84=$9:q&8ehgg
%5sNk*SbkA.8+!s@:%0Qdn>e@2a<"US3gNRXrhum9*@I_a)cSdK)tm6jOu;3G62:Ejd:pk8m(k<tB,^@OA2S\UeKGZ(GQm(nE+F#L
%T6-q52-)fJAkB=EQK1Qf'VDV;$[$_Y<l8NX0Ue`fH0dNDCADD(TdGk?2r[d.jN]#SZRn;oLQ];S!l_U(9J:cR"e\>BQjKspTQV2%
%2-hV-rUPa>W%%`u\WK$4BWp#B.&-e)B/UEq?DBV9X4Qnbbl2Vm<R:?$FI_-/TW!+D+Y*VBN6k`F1c69s%qKM_(&IUog1kVr.>f_X
%<j!Q*2f6S@l8oLU>1od4'9CD_+^f*q&2jtV,W1KI5rCp,5i-*1Ih'T"L*chLlBIZN+T#C<kEc)p?T(?WnE)dm>/!DEW<&FiFppQ;
%iAjKM5O#^j#1uZQ<'Mgf'0co!dfDa/2:PTM:*Yoa]*87AFYF!_CH*5Ue0QsdJ'nb!)&'l.5N+,/!5AU*&ki]qmge<,$e$q^YiWGP
%!V-:5T_9@aRdR?a7'W3VF>O.fk>_/&QZf@O:p]!O78S=r%WBDu4E;L:22LQVUdX#s-eBa-WTg5`7tACF=Y_?1YJF5TDbmKE#fL[_
%DG3<c`[p<>M@N3bT#"BnN\p5Wll2iD0-]l3k.*i8@OaQ?:'eRBY^J;1ZW*VAYI7SS!$BlTeRu3/0EOW'7dqu=P1.F:'nL6rrBR<`
%T$e&;kIRRI%+-7`KQk[RVS.sJbsNZ]YFpZ+$S?;rp]j%0i_/j]KsmB;-"+>uF^1<W<cQbEL7AKtF*l6:_Of;;X490.7`9AqjHAbV
%-o]<7lVSk^a6mE;]5Ci[mN60qSpXN'E1,Y4LXm4[SSKgDpE?Ye8:c+@IAbXS%l^lhb&(>J^aa6G'tlEpn9s#TjiYcXfa8R%HK;c<
%^;N.UTI8s<pJ:5Q.Na,clM<-!Dj,-OP$qhI:;T3,/B1=+2AXN/h`.t7]sj88*q-B+IJ0h3N@(B*gmSLB0isXQL)Y3h=Ktn&@JL_3
%bPe0[=)kidfMW[q!.usBL:P[VP:r2H-'@qGX't%QZK?O>,n:.,C;aBtQ46&YdrafMiCJK3M\E1)]M#H$c@iaMNFS[[fdkr?(j%.3
%RKk(p1cD\1chPNsTS[u8na3/t_*@((Z+`0dXYJRF+qT_CAuAA43HTHLL4E&Co]g`@R7DE3FF)*G\Lj,r)V;n-r<@>7Ru"f)O)m%'
%@<?(H@3Y&$o+\0(0pf@X()GR_cPeK^(k;27%a0#uW)&%V?4j3prT_hR6025l_KM;ZQgKM4]ERs`C!g;6`aq0/XT$nF<.^R">m7)W
%*\%/rKs'$JCQ!;8'j7KHm'Bb*.[Eepic7ir(]`3l5FXEoW'$3UGL'C"J(]p=Ra[iInRB*Z$T48p2gM>aVem+#I337=n5(Ei-VWn:
%o/Mer+]QYY]UJ:O%qFArTR,i[<!Ys\g+p)^Em8.KJEl`#g+t%RD<>OlD(7f1'E18j$lA%q$s8&VI.:*9JsnpqQm7[_:sZOFXF<^k
%2kWJk!oU,D-2)L?.Eb#b7E4;R!`Zp@s#.V&a@#XW4^csk3SYQ,MlnZo#oUCBkpncm=I,hAMGT:t.[f%Ab(Egs-F)?kra)2;QT(:?
%jD$OPeA,m!GYGZVB*%\N@GZP"HQ+j-9:^fM*_0?>]([q\>R5Tt<9k=&q9`E^S%S756,h!15.L\o!4)YFXCRna8l2.blF>Q0LKZIh
%Q^gg>ObMMfGkf0bPgD#F]Hs`_e-@YX/2Smb;!2)YS9kOCT`Qnl^b(M?'VRG,9@luHC&r*5Rptqbb9=C4dP>Sk04`JDEO:[^:i@!/
%LgCB;L#(LYcYKIDq""npJ1h;kX0ue$b<gXBkUMHd8)^_PVuZK&*^bTD5:=,7kZ2Q3R2$"*/CYK^X]Z79mdAcn>!qDrRTNX))(&Q,
%6)_4DiMjEK2I5gb$_W732V$7rT=,M37j71&;ul'_*LJNC@(.Rsc:]`bbnd1e%"rBQ(>5S.:o,Xa!&`&>igREJ@10$h"[!c:6SB@^
%ZaLu=mO'VlP\R-I/<dWi6E&0=W6G1YTJ_ko^`@roSSpdT%=u]B,65Hn99'I[\n83MkFm2SY01B2<&Zbd\l2iM6H-BPD0[10Dq!lM
%!4Aa/?oEkc0H&Wnd+0N_GI?j8Ts&jqdk*Q?mOlbQ/Jb2'MN7j.Ch+7K@[ZhZI<i<,AZ<lCr52^kjB>da^0GTb<UTQe]#o4Ig@8R!
%GFN8J`I$`HI_7]`]dhoVZpGqH]1\l,NF=05r-5PC<u(0ZSDClcEk/e60lC8%hF'bYglse"2+YuWn(sSbc;a6.+3j,`1.8ar&(A[^
%htnI2b'0IIk,R4m("&VthHT*^T*N]<ia#s_@km)WhA1UbW,dNhZ[]*)2];14Q1&&!4L?$SnEO4;UA/uc32>5cGI9nEb.#%<B"!Pn
%4fcLjb6FM37At?=l&"D*gUXqd<k00KB153%)U-.iUY!f'O*-07XYNlchX]&@#l[^n=-5^37o'm>kmL^j)0BPOF7:b_"6$%)Q+_Ui
%p4./0V>2K)+*s,Er2t6@d>eD"JM%%`_aRk*6lDQM'WjB]6t>nl]:'#]R,2?4K2!L1$E"s5euIJ)#u42;LqfMP_%7_Zs'-$`0FhN=
%dhc*d?F[2+[A!X9"@IaOj[fL<h4krh!(K4TQ^rE_cs=RWqYP%sW2;o%3ESVmNQ"`?[2'hKg)'6:cGW,Rq:m0m4eklhL<>qd`\k5O
%,Z&nVMtu@@]E+:AeJCW&&u-t2Wll#M7AtTIT`EWHLN1:ka;9r4lb.)75g>kqQ(c()@KWXgW\51rqC.(1e@IEbi+8ma$l(fP;Ioq1
%T>:a*eMkOc$+!*,8F8Mg9WfCsNMJ#s@LX[r]&XmA[GHGE0X'ua[KN).;a[fdmPa/b?!mh,)p`-a/nWG^73<t6276$_>euUGYMchb
%>,hR.I8Fft8Xd=,`W<fM@@A=VKAKF'!<.*Mr%u9`G]$eR&=i%i"OV1'`n@Xh,JK,feiF?mq@&,O7r2f*2&FOthpGVZ6";Uupm]Vu
%P+q#-S9,4^ZiPV@+*p?uX'BZUi:)iJM)/(Z77/g&A$Lu$nR8WJMIYZ;!lD1IXQm%^\G[>T_iG%BDJ(].WefpVk"KKAl:[k.$.")4
%\*8&!/r-.`/5dtd_@V13#niCMMUQ7eXf#$9%\]QPL]b&%%##*hD1XI$#]kfaY@L:d9*#kUHE$SWNc+RMq1Z,:@s]-?4L)GXnCNi6
%,#1\9:SBu@0e&8,JD$"[rKQn^IiZA[)];)/H&Pn&=t$_VKi[snBH^6g%V^B)B-]<=%9fccaI:R+3,@:0bJ8YAYVDXWnSHNG5h/s&
%/+UfbF+D9V)>DTB=cukG9&_;\s0gVJcCt+pEYm]8b0o.FOSd"+jCLnk,kfn`dZj87Zp;aC?i_.RcTJ'F+%Ag%F#ObRr(8"Vb/O]O
%lAAMool8fY,%5^`J4:J8_jrV;3%%mL/Q!=i7g]YfF!pED`HV$a.=Hk%BB,h,Q%T9)Z6'ZDnSgPWq8R6R,D,$1\gW!Zc@7BE,/6qt
%_]+93XkQ"8r5Ui//L8-@GU0nt'#hQ'0p9.lD%3T,YpfDLKWa<8jBL5t[RI[=1R2Yd*6=CC>ki$D?/?I)(@("#C[s?p@A\]8!]4gn
%1s)L8Vf&@i#e=9$g7Dh/r9*mR3)qs[N)Xe8e&s5L`QD[7F\6.qL0uk_P[V]0HHS$ClRUrMSAVbX+dp>U^)lhbL;`ciBc>OceT.U0
%"EZZtkfpXSJ$$?:=Hd(`k'CZY10n=\8i6HEM<=e:U3Sph["Y>_Ya^&T#UIgb+HQ1h7-;CYZTEHe'5<P^:/d00jQ1s)cm$*YMW-Y;
%9C;`U`KRnngW=/6iAA;'/5%,2TH8k?+p)lg)>>>:*-EA^,gj=qN$W!t7Y"3[LHn3\]*GZ<'IZ$UR!o$ffce9^,MDQIV'B,iS\)tK
%6Y&-.7mb8Xecne6%d*SWpHG:_D'LtlZ@NhS1]o$%+XM-$ge[9egBW=.qW"t+(P&\P)`^We,UcITS"e`**Rdo/apm[#;uuJ0$tsne
%'NOY@R>lRU"dB>^\S*iNkk]Wd-5h1%`"%"4oHs/Z\G6;W=`NPGI[%7E^?P#c>t514L=VKL6KeoTJD2jn.@EOp(^90crA8hW-%2]a
%gnNDTYiA/q/aWCS4D1A@HmA+n/":rBJWlg-fG0PubDa=g"!qM;cWSnJVA`R2`Z.G(\OT5g+=(tT7B(@CM&[$qJtE*b?LpZ"+[SeD
%;V\Y/q^74#1X)\(V[0+V2@(^bhE6\3[X+*-b\9LpRJDJ,,!_NEfR0lo*Sa>T80WO4JQ-YOgId#%,KWPK4`/gE,1<P<FgH9Wi8&2q
%\[f5Yks%_Q=_V^h(NZoG,#m#.^+pk9`R5c+2iRgJn0c<%X<b324#E2=8.<!P?;#*XVaX6o>IZmi,)-:AZsa0rTaJY<>,h>h./IYi
%B]DUMo*mW[m&*D],^"1i$&%C%_Sr[sf&!u_cGAW@"],\OW/keb6/ao2jfg5OX0)U0o=%84WEVX?>8VpG6C(Zt(D1FrfNXU;TSg9s
%n4O`,)Ho:`%qfcu)n8q>)]_M&c$-8!^g:&^\8hi3gQC2Na1<'1>#Xg%gD93q#a^IgRgY4&od3D3_\H\QL*t-A+'qO:])Frh\\YF&
%\ZV5AmTu"nm*2Q9C8A47W8Lgo4f:j#'K`1tg2/.-d$SWb2fS._Zl;4gm-)?&JZ5bW)A3Lb9QVHSpTV-tB(1DFh;mr4m&d/`W-5dZ
%CUXgg!AJSNg22T\J/s&C]C?i*5ON4S_tfNs>eVG^G*=K5>ch(YjST,%c?j!Ve<4R0'hJ-7h+T@T0,C$n<rKK"=\H<9]@f6t<cll9
%H>IOmA_!TH`eE'D.p^Mko"$?O`a*:ld+`mL99E1d*Znt2U;\T7WaN<E2GBgDLFl8:IDkZBoHN-iZ#FU<f+E>]Xdi;N4&Xb_[*)gC
%F="F:T9ePm(iC9_IS9SdH2g.-\NV/b9EC])X)?=LNMCUAm@lQ34W:>g8D$p4^QH'T&%gZ=H2m=eCLBInS,lj"^aIc)0H=*QLhtXM
%7qgbo>VGDnSaYe@p2P0%G3#@k[uZR:>hJH2L2iG/YO60JgPe`[>.cN30&EP.8:k'5fukm>MjTrKa])E[9*)gKF^Gg8#mOZEogjf;
%7F"2;,PCF#p?lf5U7hk)=o^$]kVe&=nS67O:a2EM3H*;GX.;?GUeIX4X]n-#QlB$ueR>p=<JTDR9_$\4d8Hg2b3;Q`X`5;*JIX2s
%3L#`6h>D<fR9P#(D]=&8<($!oikg3@hXFG=PEI@8(+Bd-p,f_W3j*)D-+D?)EJ7]7msl>kPiD`M>DU=qYS=na$^!$j[`'k0A)TeA
%"7h"uUi\9:J*7-'8%p7l)<Ns5?C18_fCJGmm5)o\e8+l/n>D4m691YXe9*A#3]6QGE^'/"^)tNBfoMHjXmD$`/Y=GZo!*4!oif'O
%ldEb5Q1M!,nqheY&!cb><,;;YX@j?o<mE(`f?JoY,n#+1S56hamt[jommH2a19P7^IGOL#ja?@$HpU5o\cH!F(b%N#*>re^]N6^T
%\oZpHU'1*C$$)5-&-);8IBQnVa=;)!=mmA!/5k+o&?Cq.=+WEFklJGDqAQqNH_=2,78&WTbW`HBc#6QN.8"ALpEPs1.rfs#hTBiO
%+2a'IKH'SC9-hn=HrMb('ohI5H6K/JhRS1KBhV'S/eq8-(@S6kJO8GPb[WrD6q=O[Gt/b(Y'%+Bqb,Mcm@?WAiH4Z(\\$*[RJ\tQ
%*Q[W_^LV]/,qQ[7I6s?t6j2D:+GOHOHS#'l:o_LJZd2Sp!jpJb8=6Lt&#;HZWOEnA0J>A"]h(/-=gpO%,.f@I8(Gsh\_q_9aB0-J
%'A:(a?<)kh479QeJ_nc#qrIeX]i5ce`>KE4"rOaQUN\fo5700'5/t<p?3%05jb6(O@^I5XR_i@u(j\oMb_G8>]E!7@g5c"KaM-g0
%R$<qoH9(5U8r;N^YKeku=5/#8SjB^b/SWd7DWa0'WT.UA'6+M3aO_-oWl`qH,PZm0UqXX"H;c?A=mWdkmqp*Wr]Q+8>-tX!^r#72
%cQenDBak>9gW11PZ+#^@<:8i7o+$85:NRb)hcsuX.e\b1cCLeYl@$GXFrYhF>L2"Tc@>2BoAo;.ZCIsKP\_qTk0`3TGo&%cV^T"%
%h7NO9H&g'/Hk8;<dYa=G<I6f?.E8C>YY0TmH1?F(G.Y,3/3//qPfFrfH2CV-8bNWd9qIM4"&Vr\T4K8Dg<?Qi4\V8Te(;I>8mQ-Z
%Wm&hD4``o&KmHs]`A00M@Tc`$s*9(I'5,rpBT')c]("/UHffpE/,j?3\M8q"-R"X&bou/"2Y]O$d8egXH_XVA#I?A;fFsB1\&YjK
%W]/1kb-:T_hC*<!hlP2ZO&XQoNTViLEc%@&;V\Zi&1r7h3=G.`[fYs+%;o'kBD+f,k<4nLj6'rk!-5U6j-u5Z7F^\K,4JF1LYK)1
%Ed.5S\D20&$2&7!ZT#a!`6MQ&O(N;1(e>V'rWPUq"Hoqug1"a&3r!ZRgFS>t\2Gc(dJ:%.P[V$G%GX)E4#oX/Ce>ep!%f/98fR":
%\Z@i$"pc>a7R`>MBVg#7`/T?5ASgA>*$6X"6eQ_.miC1\iqMDAcXnJPkPb;P"KlI6Y.B+a8q(tr:*G/imhFf9f=A.,cn)LMg\?Td
%PJfEGik3U?bhH;G5i/rY=(U6''j#,(hWIl#nQOkG;Rj=o%s]tta"$[KHO%O/Gosmr7Lh?YG1;QGXis^K=S^ap]H9HThI^caB3454
%Ao?MnqPdQYX``?p1&KJC]T%%-k*F<e<T\-O+Nm8jWN?8jhcI:qnh#;=eZGN`]t?heHF_T.4&4X_]ch4*goU``oS9LITg#cUDReKT
%OlGmMHRop?*URq9MXk^e*kpDNW'*1>M68./5=Ja@;''/:T5k!MG9$bs7VSS)qIJ@O#d3PHO7K9D'Z*<GUp;NT?iS13:i1<"D!eVF
%RMSHT,s9i7qrMflE*aAGkc."VDO6R-NF%)#3pN+$BRb<_%WR2_4tMbB01liNL0<9a&Q7`e[b!1-D"ukO(N=S9?'f00:&K:W5;lkq
%!/o+E43kW,>//3C^3rb=/?Vq..'e>b/?V>iCIKe;`HC#JLGj\@UhnT-Ib@$$;!_,<A8aZ.8G;2PMI^WhX%;pgrLiI^))/Q*CAXZ>
%aVK]g]:h.DET<_X,oCUs>2>nrb+hR+T!6a[^NuSt']fWhP:,QA(?Gij)^:fmoqA*Be6M/AMt3*BcVH.8;tL5W[j^^#pkWmro'uGg
%jTu?TZ3rY"ECdBm;V423?Hu*>S0'ik?AbViFRd%KG"'*DmQ6YZ2ES>g_D41&1E#rXCf8RQVDPbpZgC.B$;>:m"K[>WZ%4+-ODZ.?
%)\sW%aP2SPnpW14n5Xe?>eQL0rXGUg5jOeD[C,_ZF%5IdGb2='@OM=c:nN?sm^2]HCD208[C36E#f(-@l$<\c^fQhVc;q8dg_f\C
%S"p%E@;uAo(1'RtPZR#XLEr?t-)G99UKZ?Adii<A#uoZiHZ189ouH'Wip^O?%n^DWpM+8`YA2%*rQBq;R7LM=#%'jV<J&q'WsD?V
%6r6r"@6[f].3+Ld%CoW!#2d_>_KE3OmS4?DTQ!l<fFQ/[YY,.uIf3DtidOoX]A$?Pa*Qjo?'O0u?Wr=`iCeBM8qi7"ojY[Pfq\n=
%@BX0E7B"r8PG9Rp=#.-f,N+'Q-c;+YmnG^/b-lYg:Sp5.$*QgIcJ2HE2Y@Lqgp\u7Yjgm3Z/ME01HO[?L4SHkaj-1/(59!-=6eS`
%/29<W.tr?;Sl.0nWgU."8Lhi>#LY]\G.k:W@8'le]$d&Xo".QGZ9+,@rm:!(jDn*^rp^l0f0`9eV0DC^7O2!P.Mn5HllCJoS+W#o
%G#m_WF8)0scnTX@mC_<e_qf645T^d4*nH<*D5JCu^Jk_l9VTJQdcEaI>)QM8[jscB8VMR@3L`emm$"L8gXpfO)23KZa=XjlHtHgE
%p.3Ui`-'CS$N&[eM#$!eEIMdh\$/Yg0K_7c>M-FV0U'g3lpEPV+"utbO(fV?X/ESe<S/[cP$..^rQN,B\Z.jH>sf\am$%#XV,\,"
%;V3?ueb;H)m"Z)dp;uQ%Og=ea_EPLb$23L[$iAEnW)"u2PB0r^SB[rIp;tS<O52JDg:+:^Y,cat(@Na>PNtiol[3nbT+]O8\ZkPo
%LpkcBgd/<n..!.%Kot&6s3\\I\Z.jXL<E@Am$"L8q]UIKfLH;GUd?\5okerET2F5gf7D(nkk>kd8SHOqD<@NVX0>CFd8AHrmk3sj
%OCPNs/)I?+8VMS5jS0m>=Q9Voq\6Jt^g[&q+ck%gdJ_",rdXXuF1[;U>8-sBA*=pYSGZ9>Nt`_t&Kna\#b_]D5_(-FFT&brIciX7
%1,I?0,K"EE]sYJa)Qef(4(ETcX36;X.N,L;SgTN^gRf;`(_`41In\bHB:lILSXQ1$U!L*'hb]lgfi7M-M?rN\?DV4-T),BPKIBr^
%;/t;$3;>=&?/-$Y2)8'CYGogIe$;GlfYc9>isNA#ohgcbjB"K&3;Y+i[B3dV)h6H#V5m*rm1Mqqm2G-A1l<b9/cKs7=0#gGs!n)\
%+2<9rpg0$[Oj1-,J#=pu2jVtf*#@"IMU^gcU[l4sJ#=puf7>u<`B0Zepg6r+fj4W]FZ.8lr\k[e8+Nc#V>+E?fc835FK6:iJ"dog
%`3^$%:6$fIX)!dPjObm.X!;TE[g'G`O,XoL7%9Z0NTrBiM/Jm2_m'g&f/Kk3P!);dgNPDKiu7SY38Z,]\O1ui>FpgaSLO2c4/npP
%iA!Zf`nJD?lF\h_k%$!<C$4jpLhKW!!IgRMO7`MM#'-92WtgV;L9=SO^7CA`NAUemLNl^X(5P!,$or4++%@5`k#feu6(fsZR08mP
%c].'H2LM/pC:0&`3/5h8`;U3fN@POAi'XE?gU-J'UU*X48>D^^lPC@<6YljpaAZR!pG>*>P5S#WorX-60T)TqD&P]kMh@"B/V1U=
%fCkEsViGC-$Y=L9Cjbjdd_d`/B]MP_4%:0gC=t9l:h=f67EiX/MSVh(a%eP>80J[79]%tZWRD\H$gNMr=8:q>oWL'Zb`I",-jo`_
%A:;GhP8K3*41mE^'Y$'r$qF@Tf1Q(6,/,V]FWVuhOl,2TFoN@>Xl"IfD;Dt3.M/quo\VA*1&E[&Xl,,r".^^5W@?i89)kH0?g2&?
%5h:Z#1j[um+^0"0m0r:Z<W:?n9)kGCg,B>SH8%Z,O.l)TK:&:9A*$TWNP,u[5@\!0<&*+kUO?MJXSetkXrW2cGCG3Yhk<'AGb@tc
%^N^HC_!/*YQ8?mEWfkqf%Q%qmI?t/>Tn22QJu=RA:Q=(ac,*t,:.%7<aa9h3]f[3`dtYe=[8(d_C(rn<Yp)j=nAquc\4F%=mAt?<
%dnl<OIj/02rQso!ae!UJ:I^IWqZ]q%I2\H<*%@1g`&0EgU8EB!6/:kmZfgohNj7^6d@"le[(+lbLSGX&*/R3N5BS^))P9J\rA%Jm
%)SHu"dgr7X&oseXgXTq,,Nu@%j(t<Z\eo&@F,Su*e&U:=87+S"37\MY*ZfMuCH>3F9KoOq+/k'jLG/,i@E4%`-Uao_`6>@,JtiJ]
%@eanOmd5d"'/P\M/H0dQis]XjM>:@o9t'QXMi4t+lLusr!Xi:54b@ILIq5.c[udFVqY&iPE/#r;dp;bJ,:.fHdWAFV00K$XYP@"j
%144$&)u?p28DpM]gLjQ6rkcC\r3frpi1%`f&OVn]kpB+(=g)0sG[A\LN!DKFe,F[D01P@e9f!n'nc!Q4@Bgju2gbAdj*pNKk0qQF
%e!V<.XOp6a]DVgDl&\,AI:pe_?Z5UqIH9n-MdI6k]^HYm\2.ODle,b)=Uu!,hE5/i3YlJhV'1DncJ-D<%XDs=?>j(`gah7F4O65-
%6KRBgW6elnqK>U1h*&M39##FkY>-oj"F[j&r-J8%@R<&ZlP;Qc]O:SZDQ5ur=h^nO3GQY"5tBXc6"Ll#?2E,+-WLN*Oo3Z4(HqXM
%fPdQYRF4;&BmJd6B3f:&r<6k;6[e8jMtuWN:o\5iA`^LIBo"!L6OCsZcnA@3B'%kt5&N`kDt7/-<Bk&>gcutOZ/^PYboZ2LWhC@'
%-B:!.7QW/L^d`HD*3d?;#\t>O.[LZL<ZgMo;:ed7+pRA"O*O]A+0`]IFn]m"JW0m!H9Sgq6s[]QdpjV'N-RV=5@St]c0`N=77=iB
%k`V&IaC\C+q>'s!@r8C'9XJdD.<_?0rM\4R-eG7>:i7!3H<BV'NO-u&,9DucL]0\foWoDuDJc=OK@+FR9ufn#<%0!6:gTs1X)fYX
%V_7L9,+G-Ech\t$3gM&)fqh&2ONk%Hk_T3'n!2L&(_e+>:BRrV2u!?N3kjm)`k.aXHR+!K4u>(685'BZk)8\8eG-NSD(gs]R$?)=
%20u+1U$3_\'BsY@U+-8rFEHn^Ip_m-XEo:h2>#c78h;j/UW"Nc3+6W;Rt7<qmgh$?FGr:tq[8p/Zls"R$__OXd=rAKl9!Kt1J[dm
%MoqQ)Rj1<7*FlH"(=6P4g9?`,a#gZA:5%"4`S@)&XMlD"o]CfMM5/'8f%bP2+-P9Cc0d+ASgYk(e9JnFl_0A@BX!ul*'#9ae9Jp:
%+_BJaKHuS(93i#]`s>9'6PiqrLgpP)I"mA$%Yt%4l._76OuR2=ii&#^*u!MhGf7+^b'3>@K<Ha8j,Aj1Fp%B)(FpJ.D0NR#Kre8r
%cK:\+=CI)'IUfY"+U6&p.TSOKRJQaq#!AqqKe6Ylhc$UqXK-HqfbZ/TnH,U=<nLMQ1XSme[14]*'!^4?GZ_n8SP<.c^',%.)c1]I
%=fpu>%f84j*l$XlWEad?06fH1!-$G&5/RaLSj'4*8-KNZB=0daJqnuZ*>\@<;\qP9lkikcoprDHiF$Q;m[SBVJqrH@S^e2h)Q8i9
%4<3]<(#j/WT]"eeC58_;Fd<1A#OcGE=RhSP$Q]f7;OHST$6B\[FuVC#]]YB.LP%bD`gRL&Vo]G*^Y3)td&/C=R)ZJ>Wu[4k0KcL<
%n8PTU@]Y(MXQ($X*6;Hg"V<YGJqntQ0dB$=n:HG9WDhG&0_eaiUg5g];gEkUJqntKl&8_)8\r:FCEbc_"OoG8_8F+>%`\bV@ZDM3
%p@mF*K$ZA]?s'eiTRqrOWuZB?bt/6`%W_+%ZIS?(Mj"i;m!APo6VGC=S1on<1`LN$06!qCLP'GT.3UZN_8GQR]9rIJe+\\+*Y'6f
%XlqfS_8FPqcD%2f?EN/Ei)']5P3a3ai8H)e]k:12YkB,BeIDsNm>Tn3^[0@I61RtY%gV_&A">nY-Ra5lIpq_tJ1#W'Z/FRi=nPW"
%*Y&_$5*LSRK<$#Q*OAN"#po"#F5&<lGe=ZCc(URtJ50J@YSe?aYBDnV)2NQiJqp8>Bu_ZI310LZ$Ro:U?gt:)=D,%ZR\fL1"V6Y3
%MgNm(LP)WJG([R:$6BZuV8"\(0af$4)WgA&fY@8d16*/q27VB!fLT0)7jrUA\CtAho)9m<%gQ/tlm?Kq.!R_]g>U\G**o<E?4EuZ
%30rX64&s,7;0AG-/9ohA2EMOcSfmO&.!Ttp/rE"(*Y.<L)5j#o_8F)/@qmGT<PcT(C"B:)[LF`7/9j/,i_qmu%ElUGXPi&Fn)Lu[
%r=fDG3tBLE3j]P94<.&Qa8XUR:3Yq^"V1jABrhXl4^GnA-EX3o=>$LsIJC(N-?;,Zi*i$VVmEh4`3Yf3%doBoLA:YtK.&Yt)R-VK
%jn8'$f=J4HE-%l!E^8+D*2\q+=Yf`c=%Cu+<Y:%pjl\!DrRuM-qK.=<Hha@Fe_fes*?8=LX%SL\5G+CS\F9(.jC5PX1%YA&r<^%0
%nFl51YD]Hf932XiB-6%-1mr49q4Y+=Ht,1k>eRP-?(_#e+PV(?0=1&406X\V1P`[1iT3Xp4a_U9\^&6F^]0BYRG@h,4kUT8ZR7tT
%?HA^EHbZ/c^AI"mpA1`^/:2_RIQr0<oAF*Om`M$`K7c8WP6ZjnYO00bpIdFTIOuVS4?WXRorjt@p:k(8l,W8eQL*\NmDl7DV5%b%
%FsctOSU^4idF*aIK8%QC;STn$q<m495POC(melFHc$PXIpTNr:feP1"Ebk-o`k:'?oJ^(!lm;f'jsLX&^L"Epp[dbW/.?VNLsqI;
%l-E`.M:o*/I]Yj^b&-G.kHe6mbV+.2(EWm!pephRp=0&\?>5kJG%WJsCAL')[ZkVmHFfMM5QC]=_4cATJR_p-E7IIb<u:#0<9Le'
%+h=lJpVOc*X7)DFg\H$Pk3uP(Y&!:eO+a\H4@[iKDWdunVp7P^)gVBiqqU`WZ[(ummamG>9<3j6q"#Y'F)JsHGrBYNI9kct46Nd&
%J+k_rH-P4!3k+a+Af\YB5.C1Jn1Br0+koY@gY"Ylp3^p3hnF"NY2"@"oZcb!gr3Wi;d21uOL4lO'hu%1G5C;PHKWT`G`iG"4!^N7
%4$OfteKshP&:Z<#jD;7ObC<6[`o1!tOAKA!CF2Fq'/?,sT6'PK[9bLoJZW8SjhgB(P@n*%d49A,acFu[cT;LY>?K<Pj\fGu+/YnN
%Mh]3=W^1I6=hIWh/C.<*6.`Z\<4$N9W]$S]DjH<9mAt%nkJ+_jNP/)b;dWn'XcAI?VJ1prc2"B!)/o@gHQgapL$Nq=jL1P3+W^;r
%-\Q>ppMV\P/778*32#0scZ1k>GlL.HhsC>iH&!2\2bR*-QgaZ8Y?eaenRi%RQ34D(FdN,ej6jX+.9LK3(7oHi0&1pN78`BGE"@!C
%/q,3\IFJYRACD>WSu;M_nD_Gm55f*hEq\Q\.[cNt/H[]68:F]5pX);bACl'_;r>Y`B$$-DiV_Z"fuKEim*]BlB>qR`0ZCsr:;;$5
%Z*F2fB26'f$*mUga?+P'b*@/O^8HI/pepJXl!3lgjSIHX*e*F/;d+Zj6\KZf^3_fQM"Rs4Ac1/`QZ!5KMVOTUH-:]Y%JeCZ$kpX*
%qdLF1^?D6teT^i_.rd]Lq:f6eio':&T7&2To0OeIH$B)%hdqG[]."fDqd_YSSkc?fM-O*5*Z[CGrS%-.ZZ:!YYO2!e2^TSH,chD#
%?7U`c98O'U&m1Sl?2ShTYF,+X!cLJ4P)hK(='`E8d_pX;msHbbWS$[]\!?)rm]J^!]t+.8h!W=;8$=6uhTmi>%I/`9.nD7!]TJs2
%G&p%-p'hM)cG!YcdHi5F#LdKsBY--Mc`3I)S,1OALE"pdcI6p:DJ_S]B9qq[g&0NcTg.?RFm/KsqK(ab[PPI6L&-53.5*6cE2WfM
%9s=$@H8nG^$74E<q5lK"/^SY0Yn5a'af&^Xkk4!a:;7#VT1Y2YM>$./8(b\7.F*E7s)XGrP&W9?(QJ/C*'J)1(8lUN&3%f(*;tn*
%aqqu]4ZNd$Id`l?&f@CY*\Y7ojN[^NZhu;e\ak6s+Qb"8/HcK1CHA."F86F-MJg\)MgeCD\j<B%>+<P^Vnc2Z=oEYaIoFS)E@(D8
%,'M<rfiiasA`Z8]]1+>j)fXa!J:)SPiqh[a:D!0g0$n,o=Q90INE:6M]M,SQ@<l;[k*>BQ,?@:_,Y`Yk.0b8QnJdL,G(6TZ,.rP8
%X>nETS*F93);[G4'e.c75-bjNG@'>Ym`cK\="!.kjrOGbVO<gcEb>u@4)Ra902+QsR(\";&ir-CWUM53c\I@fgX!;TLd.AuR%&=Z
%M'O-<>*Sm?eQH?PT#['1@!Kk*+.)L[l!Z/^m(D*JZFp3YiSF'gaTp-n*aSblCAl.FHZS<-Y:8HCY&3mT=7DEojnH"Kl/MHJ\nK\U
%/%^kn-K\I_5&XagTF%7h>lMH[n9jipgt):d]-"4mY<6"?(Y8VtJ,"QIiPUN(PO$nWMu2hY(r%3%akY_X'"uk`\r[1%mho']?iTH?
%O7S9ED>cV7IJ<+`2S=MNG4SNh-,,a+78ATu'JU!7m<uXaq1RU8L[4i<GOI*s&i8ZUhl4Z+5^I3hjDN1;3jmak40s>1eYfnB]a+!9
%f)E7ls.9%n@iW-b3LEnjiQfabdZtrhS_7[I`Y!?"^GX35P7r:2e2b]-'gG<ulBSjA(UkJ;05g-)?MuW:FamoehIj+kF(JckrPl=m
%LI=hSC*=n)IjPNmi!@YMZDY04^3/6h6e]Z.I&$kZ[KnHT&0@-d?()U=pF"aB&>T*iriEmEbjBCn+1?Xco$XA!HLLd%D_@rJ;]0`O
%6)tYTPNT,Cbl.IE%@k"h'M,^3@K$7oo\maDo^_RkoZZUU`4V^l"'LfVm/HrbpbkM&CI+s'3\T$,BDh*8JBnS^nE`r'ELuMK5Ikq0
%`oc$N7hZj1m+kHs9;$"q5Pqe)F-pQ-/:/;N"$dCSF1#G,gV'%2j008$dkQ!<2lF6$6>TFMX:Kc$a+gsb@2t`ue6%/&Z9AiJqGHr`
%Vlls+:%MRkR6G0K1p"n,B0Gsl;>*,"_]@[D3n_rZS^C1+I:'e:r5;>:Bg]BiJA<m99Fq1Sb?L;5\@1,7jMo[!kBBthIUpVP]D(c1
%!hcaAR[YgKh\RZl?Ygds?J2XQmO\D2kf;eEK@fS\R]l2;>Zh$6F78Pf_SOWReTZ5u_p/+l=k_(Q4SZ/SqW@UUbJ-4nc)p^3_%ShS
%D<?-j9s?]Ta[=CU/6p!F%m$1HLj\AuQgFOcNS2W25-6qno(:l2?@MBtNaUk1qmlB-HXg]$ZFBA`_mrQjq?`b*q#0k(GQoTuT8OWt
%Q]^"gK;QA%J_5mQYAb"o"`&$_NPJjTZB9od@f!Ln\4<+_WEeobXun#sr`Uj[^A6m,aIE^c>3@G3a]-YEa(6\q6JIm/NCM5!0ic+$
%4IB2GI-.3lqKF\k$(_NdFr&m"^f-#3n4]4,_%[p2AiNZVSGG4dp65V?c0t'H_AcH\>t9Aa1$Y/(>WP+!G-lph^P0h;"SSso`O2$k
%M\gU161a#;Y7!.9"8AVR^M=qIip1s#F.sq'RJuBl.T)2sGPFt&k/rtbUFS`0Y&=t*HFUZ$E-1Kub*I>.,P(He+oRgG/meCg^:8Xk
%K?\iU]f@5c-ua)Rd+02Wc;:D*:N&uY:B+F#>Q$=fs(]71-4_&k(5-'<[JbmFc07b>R+pSHDJY]%c&W7Q;V[4r$#!+UdtH`DpZMM,
%^A<Hq6/(F)(Y2rq?b_'_$_\F1Es0bq33=9DFbW!g9@Ck*B.&?mnBf3TS"4*T+A%Xnc;+/U_DGn_=LoR,$$"[=+'G<*5*gfmpq)94
%pc.a/KT?NAI@PN4pQ<:Iid'gn<:c(tTBG#+!sp:3SVc#9;p0+tfgK$9S+q&F@d__&YG(X$"1-0^VuuK`9Y^JJ_]H.8IVN?kB)]HH
%Z4J3t?!mA2<&j7#IC>%0/k5<%[1SqY35\O""H<4>,j>dK4*=C_F'c0cEe6s^RAoQM$!E@.:8Y`f[c[;%#*UsKI1gt^8Q9t`VEUk@
%m?k@iMAaXn*b4qWTt)0riWXa6n2!+n5&L>?_<.M.qAG2BS,'U%mY%l>f5hJPP@+7KeCs)BQd_]np<'"Gp<%%F2#%E[52/*_!r&so
%njVFP-RSSJeipXrHR%O\T0*J[p$M"e8!b9g(tl!,^A[VFAom)"cJKiH3WCVn"_K\(-a)i"3@Th'^>YCB45'53M=1h5:'TV#%0NL;
%h_T3Gi7GSXG7'j`-C9)mS]qHnH129(ET$j7>k6el*c"7+ruS+nC[[Zro&'t<`>J;I?h3+aO2e)WE60?iThg$W220]^q1b)>*N,_Z
%AEmC1??W%q?1L@%:&Jh)p6kp5E<!,<s(KcWXALO&ft7\3DbMVR'tX%UqquEWi<_1)qHJ)J-iZ;K1j)o\EN_6ST"3-O<5DI^YO-li
%n!3_'($1]Zq/]OdlP?MW>[4s=ZK8]b>%=Wd,\)YTB@fQi++[qdI07\fnU3!:?@%Rk486HBI%FPIRZ685`Qq>/(-b#J=SR8fJ%"np
%<S*ht\Q'lqfQAV&PYX[[HMQ:t0^TNeGS^5:b8Nj0i![&Jo9Oj=]..H/"c[\_(G'mF<,S(p](Y]1/R61eLJ(J3m[*.707Si,cR/M^
%hn>R4gtb'40a%+&:Xdjf!J36s&Y=X*k:]KTjpG.m`6LAk4Y3KnHC!.=M'(h>]LgF8I_9$Z_i+.,BK><#I.9FY6WdC2+^DZ8nW"+\
%m,5'kHD*BT7SU!]<3P=%P!cafpgq3"KUIbk6O;pL,E\!"LLN[1>)&RMV^O$d^orU[&17&.b=`:P.,I\3VH&bUNT#5,qGqkO>H`D:
%rdJ)P6Z9[l0HabCZ8foo;5f6'!&\^(:6AJ60u<oI9l#^*0@Rr[UH-+sP<W[uc_A(A&RP_d.qXjWLq9>HYJmKOdqrWt2rF;BBq!F.
%ZE8I$>XUj`i9.al.a\%Xc#VBZJ:`Ot49f&gVZsp-_2fSbb[p\#V\oSsg,#Wp2I^Rkib[cp,D(W:gRasGY&hZ$kos;@E9XaG=1WJ7
%:&oi)L3iYqpiMHRm\HKj#P`OdTbQ-T3l[5gD!4I/#?"r\jr!\+DMZ(7T"D_E>)Zn9cb)A:5EgQJ=+<ucI[bhFWo$6nBDl*Vd]RM\
%)ZhETp3$?(e.;`s%W1,@DgHK&!r)"&om@'[-[YaMqN&TmTVMd+bqTckE2nn6c#73ZC?T1Ifs9@Ae3t(5elp,%#BIn"*\8n!EY2OP
%W;$'Z1;NcG(DF<Y'Br@)j8I$OfjcT8A?ED&+6%C8[<oa72o)/O8.W:oh>++b&Wg)sK@Pc7iqsQeK#Cb>1Lc5ea!uInkP+Q]]/lnX
%hEGGYKXKDjoADROECFHogai3snAAZ?]q/AP[5+5?M4RI^kYDg=PXK$<h:q*P-!%!/q_Bh^DLIm^Dt">3pA47l7h167*d-l?\K6f9
%UnFH3+W1;47o+n"W/Xm%hs&J+=oOV<h$6/iZ2?!!G-;GN3*^U3&njP`5F0,Vku*Af^+1.7dY>/fn&pHr[,J:b!:ssQek=a]?MuC2
%H)_bgFdLL(GG\k,e+U=-kk!)9d[BU`/iSH-F([[Rqltt(qE&9Xm@>d2K$pu,a?M<@$n$L8$hosfpt3'GKn4^-jF`ko1Yc3r4+qVu
%6JAjqT)\3Zot%a8M//,EIaF^J"b/pmIj=C]hFgkgOj;6)S\K3:KA<3fq0]dURWl_-XK6gNe@E;tF61j0a8O-#Ro_N?hc2.XfoRfD
%qQp'5-F4ne=^drXc=r.4CXnMPj$i).a@"O;8CKNrrS1c;>b9_t[!q%&/E]Y&H6tsT,4.DoB0p7KnX7j5hjuKq9m:]iq]2-f.$(Ri
%rETWR3BC53Yl+Lj6B''8s""iP[r4sh^Kud7!;ZVR>fptU]!(ii**aQbpn2nkGe[T,n<!73q1JZo<l@d_H'oEIH6^So]MHG<^O/jL
%_j^u*G-$MrIWt\P`OMBjheZcfh0UsVf@hUaH$Aq^5OXf/ocW'd^0E2*%ZC>nfrp8Q&_Y%K1[*<1M0C2c*50J4Fg4%ts4S((^HT`=
%?[Uj'J*Y[+bgDX!RH^Qkm`GC;gRIYL?d-^WeOsfk?$>i9/-6#_gDI0i/.73X]!5[!6laLRpdkr>/=tG+n*qNmI@2Z2iSPX'_49gC
%Hp2`bEGON1A5g1Z+r[dHaf%,335SiBR'X_7`$G6iV9@Fp(&:F.4Me)TibTUXL^rlnqE:L'(BFn[/bDUb]TmWXo0*G)%RlDH.#r9X
%@CI=u`CnC5'LE[753\m_$^l9ilWO\.&J#i@/XPm+T_0W[hng[H^H,<[ODl,pA"XaIOa4rXX;s^-3ao=JLrj+>kT3Y?)WO+=G_OEM
%([o9AB5-^>c=u*5cK.C6gdj6h]ZGKV>;s:ci7HSoK=_A\5CVH2-OJl)fY82&D@#cWs24TUK>"rgHiN8BrVQ#dDgV@Oj,;q*.hC6L
%h!ep(Dtj-a^%&XH?uh+X,]#&!I%$e,k+f^qh:;25o'9Ykc9JhMZi4&"I&WCo6>^#i\BsGRE$`Fbc$fHd$'#A+M:l6o%h[@!4u&\c
%Q9h"lO^9C)!dS4h]soitDY(JeWj3.8.r,Q]O^,KoIV%rfSX[g3o"ucgFld=UoD8poAE2UuMer@2k4;*4=')Qm7c\Z8n+#bmo@Gb0
%H1(cS>akomDIVoa"PY<g8np*6V8Y8#bDs:\ID`@O)j>\\nDYcI05ZQfe_P@jkhb/3Q]<*fN62_$_LO%H^Gs^NJ,Z<qrS.2a5qLpM
%4//<RRH9edZ<KErh2V4*BF5s:gS9Q1k]I^A&lYlGNe`ogBd4VO>R_YY4m\L@l!EZjT5?1pFC^<19I-fWo$c@aR5UeB90V<8asW:$
%]j!Cj9L:?'HD*(<O0siY&h.Iuq@bkNm\EMf8TuHoF=1XO8E)*t7j&e@BE5tB&qE;X"%Y1T&ag42HMu<r1`3j!MYG\6RF-h'GjiY"
%!OogUig[Qhh$^m:jOImr)=BZ/!f-MV6sOa#=W!L^hL7+#l0/Shkp#B2%DE(9AkcNjZTc.Y)hG(F(8t0?AmWN8Z9<]ADurYbOXE4.
%no9sXn]+]If2`r"])6I5PIpKtjjD6Me%iSs^79H^dol$$/$gol;AFS#\G]NtTB,tE>f*3<$N0lhGQ=\64!"=.F7)WX=QnZbc@g\L
%^//&#Ua9CJ\oNH''m[[j*t@fc5uEXIpuQK+R6a85<9IubQ)X8VSI947$Vk5&-Ci0BMoXG,L6&oj-ne8Wn`&9_c)nnfTUQ+$o7+hl
%)ucbWs'82>o'#0:$R<%FQ'niqqIAR9c.VTiAE?<'(&oU^T?hC3Q=F9Lg\SM\f>YWtb?(i0dfnY!RWst\pSVKON6`:n'p?tcR0cE%
%ncLZ]>WR)j_nJLdTTsRk+0@c:4>Zp=M1jfbGOF1mXm'oMC>gW4"^O@%ZEeZX?-Toqo37R-/\eoG\',h6TkVg]pku(JGi-JWc4nLN
%_]Mkg%)huDNtRuKW="KJQu=`Z?ekO*%k`Q?dk&=#+3oAas#g><MpgGP`9ShfXnCg9\KsTbgTd=jo`E&&H#@Vf;_Y0YQT&f*-"(;B
%<eE\,_rI,+A'%Fmfn9Dj>.P']dpg_6@L`_Xs*BW)X,IfCgb*GV-1B@!Y-q#:0iRLZR`4NrR(&=,jP!l6H0<u;F7eXTcjMDdh]]*+
%+]]0dCGkn<[0Jt*pLbD4W>]KM6J0;=.Q\h=!7T.YeU0YO$9+j8ZWA5dHl-7`]Q3=Pc+d8]4aO:^[Y92ms3ptY?&\=A@WRK8n*g3K
%c*8q_c,>&FCp@'6InLdF%Ni1)Z-UlaRS2f?AoeB'j5majJ;7Q`,"G^*gV[ta(,?Osb3<iF%c#GGnZj5m#R/]I\"0-In[C17AjMq:
%K_;&#6eY%a1R`G0(q11UCJ7k(3]2P=I=.rb)0Dm%2oiC\&hs$nO'i!IL=u0h(-nZ\3fQleUpuBbWO#[W%j.,#n1$SV?SCl6kO>R%
%%W`j7Jm,lQ28t?d)XO#1GAHBGG^+VBG\REt2\-ig_5LET=jmau,9()%m]_PGmMV3SLR/j`])ZSr?%"J^aP$WhgZBk6qu6+%;.t=?
%]U!/)nM4Pto6uUrXP&4a;F0FO:D:rhC#hM;7RC/%JW%<]#-K0b1-@I.,m+-*9@oRFNA6^8k+G5i+OL)4Vc*"H$)3fe@.V=XAh&MZ
%FF[,j@"H">(b'_'*@"iXF+=TUq)\;tNp/b`Q,;Zsn/\_uD2dH33>a:sfW7gl*nn\GYX4o6f)!;Y`?LoB2nXkp&Bm$SXkp5k9g=-`
%loGKL%J!>15h\fTB"B([Fb4?jZtIW<8k;%s]:EhI_;rs4hae)gUV42RUeOpPG/B4IJ@&22rq$IaH=CpnebqIX4FGU%dPIXB_L@E1
%WF0e/"'sM>W\IBqIG@7Z,!D-Ak=OTYAh\%e7!]CWRlMp[B$$Q2esI:oCTd(kq?_^a0+_(U!g."t'6AAqkCQnbM6<\\$lNtNEo:dr
%3&rX.,ouf,cT4)T=K#l\bg/@t`lWKV%9+oDmo_%$AOpV"k<8.l]TC]*o(/GqEo+aYSEAutlf>]gB9_k/893Rck\B8C4mV1Ai1W7'
%o:C)FhU;C-cd-shaa(r+Fg3G]mo_%$jcGpSIbqo_Gp2@>>4BAFV;M[nn]'tppt=K:RIY5fKed-_Fo]@bbG#*[duBoknCu]CgP]/A
%g-NSZF0i9=iX9dTroG[M>>!0"4BE)%/7@%TW%%5;b\]E^/(^05L$kCDk!mqM(NT];3A;_l#)\<G@cHk6I!EbkL.Pu@=CZrgnDi%C
%6Z!:EJ[>+ioQ^nlOMkV>IBLUP/9"dX-9#+l$(ZXfaeIH(Qn56Ympn.?Y2-5bYL$F7M/`]b<.s_W4Sj52s$LN>V4TEh:Cm2[If81W
%k3_Hja3XY;49*tq)#KX:&-"#Ps+C>Y)Dgf%r82>Gi5b6ZA,i"WcJrqkI!^A0?eP2]W^".%=?/?Es1E^Nq>:0:_10H@q6t"G[iaL0
%+(#uuhn5e(/rrfU_QpZ#SXQG/2#A'3IEQ-ZJ"HTL<jM8us!C#cl^=7YU5Uh;2-T;8XHsfoCMU%r:ALF3S+WQgc>&[`n"hdsIW78e
%?7V_>1chND4kmfG@=pDaJ+2&aqUaWsg]*4jD#F#%bLbGBLG<Ok0_V\T\mFMU%;Q7H.6B`^K]j:djZ&B\GnmF2=o;&Cc.cOK.N5Y&
%4%::@<ZCb9I]#=ta27jNO"WUX3r$AfEI;MDF_-nWrk\?(*V>?3^!QUtkO[]mK>$*9Sc+UVpQG"8qtB3&mlgTUo4)]YEGK4e_q2SS
%4$2?nq@7XXs5,nF5C]=l*q+T5ofX=rS7?PYmJFa!hSGue?sFF:442+>\0!s1rbMN92:Oi,isVpF^OL)rp%A4MQiHl/=R8!d?[/fa
%e'X5CoO-k"k?j"&MrIjPO1g6hs4OZS)V06]5QLOu>5#=gH(V6DH_3NO3f8?,.sfpjX9@8FDk;FWE:iC:(KLNo)IL"ZJ(3b2A,l/J
%kFJgNJ*hVCf\&JMh-AWI0'7C4E9oM[?YM6_(RaY>X^/\5M$iSi4>2"nb#*(9\G*<29t(\N]q'eHDhib0>KD52lsIO&+$f3VR7hD(
%b(UMup`X`R9@&"JKNH=^!it&YK4g?rn1?Jh>Ap@e-Hg*f\R[6E$$NGqIBL6-X]FKR,4dso1',n\d4/\QR;j.MQ^^\0RRU2c6\>i?
%8OCVu%?VcOW,L4n9-[%I;5.&Nj)^]=.""g81hlD7DD?gEF&+Bb7m!EtN3W"q_D8&uN<[U_$<ZSjS]tkj[-8X(J]N6mo=<%eSf=k$
%prk8b:uno022u:&<Ycqen3B5^0W)okcP&U=<pCmV.d0-'::/FGT$^t`:1Fp?Z$bi;ZjJ2AYYdIZSi?H#-qUn'L:enY\?L6Si-^KI
%<bH\kTL5NkJK,A)PtP9_>!*#JP7pFY>Xj^=Artu!*8LdAUZj[W1as?d\ZepW\4QF8q?Jl,l@G_RF:Ym:2l]k;+fi8LlO&D;q\+jj
%H!X$-?o'EGKEFkWi't5-G)pdn<&@pI4$fBla5iCS/7oH]$?tME6&uP3K*c6tRHQXN9"7&k9qI,#EO92FDCC]OQ>d:`'V!K1H.<Rs
%L5l4%+HeaE9+,dO-XH>]EGKn&E*)rR!1hEXCAM:`&b/)7!?%1jQU*!_Vm?qnn:;O2S)dM6P)_gi^;+h!@R[p;2lEt^o#]Bh<,dk>
%bQ-2Q6U5R%L`N3#M(PGNo'dKS%X_"YH_i&M>[=In#0ZOcdT,A8cJ%+\NA48Ls6-b/h3`^.9YGOrkL;#geNa`Ld5<;D@6)7+e(P_<
%8\`j^_[^e[]Q-'94T.\t^?ahqIEj3D9aMZ%[:O[93,'K@_r.,fP^:aEac-4q)b7t6B&S0(K)fc9n+<7V%?trm!D?D`42OT>m6\E]
%U3>DC`RZXj*/CV6`+=2Z$!\%UD#fId^duR&E@"b)/k\UU20M=]^tNNG3dR:g<,ESo2%BUlN(e0?R`6uBl$_*+MAN(W]aS>q)B;o3
%I$Qg3go=;gfrc6=T$Ubk`O%;02.LF6f7]jiGYYcI[WMFbC5=1F9n]3WUC4;iAqWT[f,"ih"r*CcU0H%XDWL+WTn%Ct`HY3-n*#5j
%mV@l8&LkJ>R=btq)\E]YJUW.eB5g721r*.j83!\nTQe$Qj3pB5"H!N4]^h&k$R.n2$SjuC(IptYC-Y,L[\lD"/MXFGT.jXn5ae))
%8>1jE1*G&CM5#[F5W1pH5a<U=WBXNoLjXi_T]bbiSX#$7^:"co.n$:/)s%o)lR+.jm8boKCA_Xo@#0DGasrJjH=Fh/1j2.A31M+J
%d)sK:ehp8;!.?3O?>*Xe6$_m5f8ZIiF,fj#8EbsmieZqehu\^A1JW^nC6+Xo$"n-4Yu1d!DS_oW.Lag+`t$a[-Y1/fe$-1mH:B6^
%h1]M,5as&pJJ_'E&mqC;i-#sGNAR&HMQonqY39R2AgUP+F&#hBL'6*N1Q^1<?tp6)_1mLLOjkXtYZ!O!g'/b%a;=%X>t]L?ZiJuG
%"%f#=_X(ITo_8D^^4p/`"m?P,/VO#c3Rb'leWb/BG`^c?OGot_)OO$Xdc`TWrmWYMek#6\"7r9DD_97r#aqf'@<>p5TegJ<M^15W
%d3?0[E-'VRi,Jt%Z.-uh!X!$@l5,:0MN9P<!5_WTi/mR6,S?bii`XQZ0\4[7KdOIJc]kpripN0O#5\[t]L+e8JV+ma3UF'J-&_&`
%TIXM\UYe8M`I5n5$0L=&^!Oa>4q7EfkZ].KQVHNd)+EO)M31ic(/Z_b^N/Rq?==\&QAfI65?(-Yd!REd&umK)FWD(^#%1q=9X4gF
%43&lu;)MS]G^U?tZrVq#!kJ[i!6BbY%4OfGb_kmi_:;-id@rO*P"<DFf?#k@'p'c6'g3ncr1Bt[2aW9Y:SV#&]U;7rTKIoV;\>k"
%?Hs*C[c&@oR"pKpAfR-d3[&TZEdf8onY=J`/;qQgpk"eu1(^XQ<fl;f(IjXdr[VCi_h]$a`pm!**tg1<_cmd..30*oNWEOT+R!d?
%I+gpAE;`gK9(3mkLBZ0sX9PF6h8G7U#HC16,'+.uW^0F6#(OeV&BAWS(Y'c6`)*tZ-8WoF:7+R)+,V@8@@<&D7ZA22_e!MgRP9rK
%\P)lD0`rT2^d!prRE5H8]#K3*$k=!=#k#RW'@W,"o5K?i%8\!L>@?>k7M0<3OT)LAftbal>?ZU_OeW&-&uKKLml;WA\h$09Wkm66
%8Wi5.*4,hEU?21Tj$ZkO_,boKC2!pkL"C;m#X_lQ,0mR33+A(/CgaSg_:9rZ#@@^bVKT<0<IZLPZ/c;_V)AALYe$Ln7>"7+bn)/P
%5NA65Yp9I0FbUBJMLb]@inAn$[4qK-`O-<cr[Y.:$iR9=p0Vh,^Z*tGin><o4jbV6,8aI7A-a1=@H9,tA/aS1.0Na-'b*++cHmMi
%ef'HRJpiBfLV:^CEg'UGn=CdsiG,WH#Z(!J#*<]&Zc;U@FNkOUKkaiTiW"\-QgRJnP:q.+%<U<0UW&jX)2J5d[m8#<<B&MNO)P<c
%o*ci1p!E/9mB*))mHkCfj`aqm2njb>r8[9gpA(.31(FRo@W2mW=as#]lg.k8$Aub1>B]6h_U_EIeSp-Llt*AITD(8;5Le9IN>o+9
%_SdmNB;_3g]'kjoO*2"ndRdHqfekX&T?9b5=cFIrL&/U=/#$Mg\:3c1"YM@4'ps9.HD@LdnD"?!QbW<8#:lT'EK0ALZ5]40-n<de
%%J'n.RH)W<AI!bee,qJ2040AR04uE?D`Uq<5D-@YD2DKNLXDQ!KN%j@?R$.p3gaeuraVOqL8IY6&`+hD8Xmo0I%9-%5t-:h$\bEY
%8L'%G-jp,.TJ.TKZh?^o.b<#Z.na-4UKa43GuNr0PngQJ\J'RTbQc3"X*mQ/?tVAu&F6@/o"mj:6,e!9$dHN,e3qe+-@0O/?\hpk
%0$BF`O@'UpbK&\`*RQ1e;G+i+:C()XZYY7@q9S33q@*:,T&m6r)KR@dPI]n.'B<,rg;3uq#Y^CYLk=%lRb9Y;f+ectiFp#r6`/<i
%[15SDD:#HM5N_@G.2NM\EVMC#HLb"Q.n\fWeHqf2c3-.8"33Y<KSbPLrR2>]S16up&B]O[S1T<m%r0%$7M&^AE1i1G-A[.THJ:jK
%TO&rl4X"b%9Sp-EP'J?&b*]gUItD^Mi#C]1nLkb.@q7HjRY8:jl[*R0%%b)?f0I*kFV]V*]D1u3UN=+7+S>uT4Z#p/E3%fc:<K^<
%DH`EY-]oj^(I&VlmRRbo-)gVFma-?I!#iM&$IJO4*-EIPDgW)BDp9&i6#1?8%,qbsLQLroJ&,'6R\Cb?rVudM&<=iCaiTr6Lk!FR
%'m;k$IFKI;Jdsq0j3X`'=f9rr5_kQ8g4STTAQpm":i1"6dSWt>_oc;k:GC-\/Q,/N_=D#NqPK'mZ[%P]j<V)=RoN`bYd)LKNYZ"*
%HA9?P-YmSlU,d;SP#KYk#b3]-ndDNrm0C'YaimhA6JM$,J*"(46^+#f@Nn35j\t<MFh7Ni-QiqupoGl<$di@#'mg=5!Xbt@-FIZc
%R>Hp2l"@@_.?`dRg(OK^EY(68,EdD-M%H-D;TQq22h6MZ[lQ,C&E5'Qpf[2K$^D\oru1Y=!n21b_&&Fu#R+5;;`#Scj=L[#.0g?0
%X73q,X0]tBjFT*eOC[<@4sE;8j8nFjmh/J"VH9Tm:8^(RreJ/`:[0]ho"b;594kSOa0[V1jY2![\jaeCPfsB/B$Wi0%&[Vd:%CsL
%:M)2&eLg?.XT9Y^f3H73adkK&@uKDfQ\32K>g;^]%4mh_Rc@/sU\*=?+&>?H>YYk0p1MiO(id05]S<_G?FW'q;$t=^maF0XmLg;'
%S?4F$ia;34@\4*S\Mtg6DMcm&S[/825g^/U--=s]iTY1q^U(NX1mQM9]@J8,kjjr&E>=*B^P'`)gYs%'[SCO2HW7j+m8X:;Is]`0
%bhHrn>AaAcIk3P]d0CZjR)`\56>V;?e:!_5PJ.aaK;&&64r)+h$N*ZoT6W)2-M?&D%aJW<2kHD^n<A%!EG#E5i";3u98_$_@9UGc
%9kE29fY%aFXa/W+<$3%&hr2^&FfGshc08f[$A6="]cV@9f%]6)Zha3b&KLl=<W1UsaE1Y%)YE0.BoO;hnTR3kIn"MnOsg=8778c\
%_jE0nY(FTEcS2F*6<Rb`nQn!,d0hFC/"kdsG/NHidI7P%=@/nt^nttGFRTI8l.s0f$Pe&4*39\q.QV)i1a%g>%REDL0*M/\ZNjsN
%*84J5)tii6NUH!Cfg]Q3<__Ba_XcC_+TPGPfXN5R-tA'6:&D,GXI,JL@L_ap$4^4T*u-Mj#nFbh6@2BW$#Oc)kjY'umbbcbBHUo>
%:'\3PQ$[ar!SQ$$QP`13A5dAFKGd].$u\@+f4@OlKpS$XbC_P6H,/)R5!aJ?_8j!KT_K@H&>&tuT"T!>[nC:._&h]i\Xm%MB[;PW
%M3*R&#ePVZ)=9b*%XY$)cD@ZT/B$1K-f[R%#:bo5#RmaK+f:>t5ODf#:]LU6E$cQOo"l=tVr'r4hf/eBWBds/j#Aj)6joFg9Uph*
%ZV&^_=G9TfDSdYORp`P-\PJ_`7_"\6p7utYcKA(7cd#@KFAPZ'H!gUbXpo<0-sZpRBT+J"Y"cFJ9(#-R<pI/l*K`sG&-=k<jh^&;
%2Oj+VXt3?BKU.IWS6bB,:OA11=<6'&.W6.(YlYQGiO!6We)>Q;(.!b-8k\GYk]#30Mm.o=hH#jiF`==SG>F;8>g_3H=05D4Zk[i)
%\Vrd-Gb:Eu-Vate$I=Oc!b>mu,gV!5,uImJ7JRZ7%UBg0"PY]2U.5?!=H,h4B7/U>#=*(o3eMA7N'W&Ug*pDa6DC\o_>*;4V)J^:
%_9hl'Rd&,Wo7b0h]";_=L9=&I?o$A(*II3Gg.QIH#&j^U-54/sm#R[ebY%6#Lf>Z)rf;$TF6n6>34))en9>X(1tXkJ]Rj%=0#ZK_
%2F6",=ElD0::?E\_VZQb5=Md'$s$o>$$$/mJm'Th'Q>rV+N0NO"Hj<a1Z0XI8uM^q_h+t!.BX'W_)#GL<Fl<KH`Gi(Z'IYI[3o4U
%H)_:KZ'oG&?(E]hA;Gnjo:U,)_;K/un.72'`!.+m.5P?mBkd++H^U=T)WP&h,k*CEnC.V;TtCgmY1)YEYdVo1mI/'$lU;h>+JhC/
%V[$Y+L[V-<^]TFS!L?)<6!^;.>ip[n[7QX\cqm<n]V%a$:cVC64KH7Fi!p5aJjY&8.YM+4rmn%]/>oOl29i6H!:lB^fYBC\C6o5#
%@]`O85r`8ij];iHNDpsg!;?^dU5]eqC-#9`,X1&Id*"FZBV8"o>J^ish1@m*-7A/FTW`9bpWK!$&p_Y4ejR3%/(:Q-4U%Z'I(UFa
%SPI`ajk.J&*Wc`VRSGTI=UW14eM++U8#u7FjYct#EITi'10@[Ji!=62iSgt7'ME_<(auU/_@>E(4;>ZfKuVTl&Mk-^cq71hWJNX]
%\JKg2!gZC#+M7jTk?tiF3V?2_p6)o34"DL%1>J-=b#R>##$+*"+M)4u"sTqq,`Br%ZjfOoNNI,3aR,KL2ukHJJ/sbOU1o#N*^FJg
%YRr(VRcL!u(WT8Q;C@,"8/H1!ePX,ll;BhjFoljs*XmWjbt4"R5UKF=+eTN^X-%\0dO,=W_):&GDRQdWe,TXf,LHd[A:BZd$\g!2
%D3"ck9Z&.r9V&:VG[Ms`h(-O.=E#??qT,SkKCDtJ,@;T10L7JUP?M$Am"U@[d=WD2L=r3"(3]h]9eWYQdl59Poe8F73)uAq)#T50
%GnT]T<I'V<1Z53*.TjQ]hJ9b8+rqlG*b66);N)6@l0*Dc(L5@.-5&/4YLX!'akWrGKRk8>+r:Ybe`u^/6#f0E(AJ[eTa2%)!b;?i
%X)F(uWqb*8NNn^Agdkjpj%)sb75@;\J6W-];02-E\LO)9Q96Qg8np&6WL_ZI[ke^<LijJV<,hX"H43NdP>E@hML*8B<$Lpb"]YhY
%6ZO.kOX)>hKlH<j1h+:s+GaIDS.f%G+"])S=c8)je=hd]dC"SZdkYQs7Q<*!-9pM:@]YR:_?qABr:%]oE%5^h<hX4>3baGn:D:U0
%bO31(6r?J`U7I),#__,ffp4T9@^`ZS]?*TKW33jrU,'fMP!`SCLpK"=M%4T!S0skoo.iJ6r^Zo_.3p[e-R.D:Ym_XJ``pK,9\Kko
%_MQg(>;]lF&cN1R5R$j8l=,H-<-kNWa78:d<ZIFLRd)7'n.R4/6h:^lA4ZTNGW5Q<U2hAb-)0fcL@dtn"3Gm8D_f/RZe/l1j2OIW
%,qocG4Vpj.72V-)Buq>)0bSF3+Rp]qAEddu^t9dt2Zf6[T#nY^1468rQ5UiaDM):XdS+of\<4<bT*99pm=7*\Z[0jI9_rQCd)!9.
%)"4Q5*PFFf(VC1?"::\Np.;-pBT>"rfh<O`*+<$e]tlO.IV9gJAC6%hYsR34SD]E\G?h]f.S]VR/l=L#aI"b/qQ%$M41]Bq(Ln`E
%/%o2c9\2OKBY_N`kMS[?2.!7S`Nq[fSd4c\86o?%$\Sds*789cN1r+1b2j`i/Q[1-;M'"5S`T?6#uH0I2!1K&E']RkN1!II1iReX
%CWYOp6@tBC4*i%M:.nnPiCb18]Bc&[JhDe2/%Pqr.`J:j9U>6TCEZKDE#8l/:^m>:W-safJJNhn(+f*nSPG('!D@Z](]kTB"c8__
%UC677OMN9D#s2lN]*8mifNo_P*h6+p:+hg2KYSf1K[mm>a[$Yt=?D<[\IQD';SH!0*GCs&M3ON$Tm;kIge#7k+Mb@;=/lt@XC:k)
%J0Zs\K.;^X,3?4[$Rgo-!VE*4!R4iA3h(A7!M=W*RIA:o&$-Y.S91I2o.p!lB?tm5OfMj?K!)oai&7cmX9h*Z73VC:6f=dMl=FL.
%86-nt0feG&U]=]ffM;'6!Kr$'01)<^`9!G^+i@cODh1ZPn0>tE^sE>I:.2K*.o.uUfCd310Fkg+3]SUliG:sr4[DXkW'M&WQgtb/
%1g5f++I4[EY3q5Omidf_<1oT%Wc2g/72%]3@1$B!-p9p[,nc,fJD7IPVGY:>JO\&QeCAO]EF@.7dtAi;*G7AP`hMK,+ric@-@1hE
%"RT6U[>YJ!$\j7p.%92[$&'I!hH^b=_G3KHSdXJ(keQJ(!mFbQTo0*73+&JA9MZGaBHULt-cF9X3']Oh<$m,G#[!DYF9^a+*0cB"
%`GtGcNb<OH[V]V)4cI^?"=t'OptXJ[`6]NVZh#/qQ>-iDBPPkPVIC!]j:[kRc$3&c!>7gDN2l2NEko(/[`1Zpb/@7<!p7>%+CLe6
%.:eddX[kp<]Ira=(^Qhl@3FN,-jEmM#CofH@PDh/N_%S)B^UH`Ds5fHl41YM20I\ld!jClJS?I^/\EMW.uDpJ3&ZP#a%BNo?nJA]
%pG`4j%>hXc)=;KURJ40H^@bIaaO\LkF\VVUqL4HK:GEFO4gAnS,!WWRo*@AjPq#!DVs'C:6NkmPb]%M,8mj$%a!q*J@_W=B'W23L
%2P`(%(ZGUS'?O&^RlO87C;,d_U]o34BO$f0X+3[KRK>kgq5pS'Ske.IS_]C!aVYG(&5t%2F4S.)K(]DJL<dqu/9hao[oSEg7T(Gk
%D:c>(R11<WU9YC9[3tF.-lVfZ[0top.q8^'F=tdK1''ISLm<&S'13ZP__#tqM$7??9VF==$q<B#U?HZ,9QD*j%"*_T20&<.CNV+,
%'M)nWBr<ture?t<3jup7%8YA4%[&21<2ES;ZAa!)SE4_:$8:QsOeVBFl1&C^PDmXQZMZ$sU,Y4<"FD!'3@.3#11Ag4]VC`DV,!!`
%3UC/p3QV>oNIsWqknONc_]^qf&7$(`Q85'h+mpEH(s=6k,BBd3&!7tC=d=gI%FRa(?+[(<-cTu19'/SLmb?2^*4eTTRasOC-B-X3
%@.dso=K:W^TB@<b>XZd;c=9\hr;Up&,!;01S0LE,Jg?q-J;>R.p:I(%'q@'8Un*)2$BQ99-o7<K7n5(mCL^?ObS88:!^8RtCb*J5
%Zt<Q/cQLo8_()I\$2B<4J6<Baj&o>5>9u"':(s*%'-))jj`DM;`B#_cX&Xb>n0E(`ViqTN:IkJ'YHr%SgsOnbojR/gb39,#k9'^N
%M-SGRfKg!iJ&[u%^`!`5P6gJ0XrG?Mn4aB2ngn)Hb0gFc)?mmD^Qe)75gMt6CW0n$M,[KnYq[V?i@Th<S?Nr"lml;:p;)5O>,%]e
%4BK9?9mgQje$"5Ei=SS]Va4Vj6/nl?+bd^);EY+N-8G<>E?rXNZkaTpU'mu'WI0O%U)o'&/'r#e'2jV&X&'%F)%]J(:<me-Cf9ae
%+P@k_<bf$oe3d/fbcN/`_Ulr')4AXA,#T==m8ncn2A/7ZFATmqZC?<n)eg'ZCs(^bK^9Su*:9VFE?20=c&_K?8VD1G3V<[u5$_No
%U**%3bVPF3T_/ticN9VBYTJIZE3RHWS<5I,$ZA]*$=S4IPu5d+o,CqWoh0>1eW8hj,<^rOhGH<kj$a;+rLkd88<))=-=MK3qD>iT
%M-EFF0UpZR,Yeg7ObP&);PD!^gC0=FeWcY>7r*)^XkCi9//OZ03'BhYEg<6W-Y!'Sg)oHLSN:aiPI-gBe[8W)D7-8l&#4Pr;9o:Y
%!tci2K3YZm#WEGb=m49hA-4_MZ+nYV`\t7]8[]s[RZ)e-#oE39((hnM%JHVfUP)9o%#OCSX,%J.S9l&7F06'+B%V);\WN`M;CCB1
%QrdqH/f@Q\Z4tKp0(N8aX!2e1_82'gaf./EA4\+_S&<Aa<\;)h$>ZmP:mL9h&irr%9p$Uh#g:`=.B@8dP<g`cF;jLZja\=J$&0'I
%PlMrE11,1?B^l-VAL,1UOJ>B>-!<U%]"c+AM8j!(du6r".!W&7p]gu3$5RNueoYI0iOZ,e^7u'&8>FX3X3DlET/5$O"[,h9H[tZ!
%qJDMHDKM`5@Qb]N>#<c2\<2e(I.geeNR",KFTWW1*_=tUnULk?!e`),ij_,hrS=:4@ODAa6VSgXB9`im0QTQ*"uVmm_#^8H>c`UY
%p4MGE*!Sa^PiZ.l+c9bj5c8;SE"@m!N!_2p[!\3h#;)q5LLptlmOEI/6I"63P_)Y#/$*eI=Y><jl*]L_4!/KX+s`'PP(5b%F90=O
%#hBtFGVRnVm(d09Bm'nZ_S2E$"ZN\s%^*T8n7t?;9(XgtD>Xuph[Oi@*Jt7CfQ!R`#YgJD)''2:#&+OC3I#&rj]`0/mV''E(oK5a
%JY`-N[Or"X;^Gl1Y=t8nY/kYgD?-(l:]Y%W2/t`^3J'SJJk9/1FnZ/=&`6B&9^2nS6ou\Pd2(XaBJkY=T#Usd/lcej6k-g8LSL1e
%^cTkJFVW]N&>cU-8/I1/:tA"Fn-XC"*;*@Qm`>#DP#W/#k(3H#@ka1`5'l#B2Xk+Iig3=SM^FC>6q00aUW3Iu[1DN%LnTJja?_DZ
%*(6FIV3,@)d+-Rl&5H[eKY(p\CCf#>,ISk0dG^3TGmlgTYKLGh)D5c&!^8YY!dkP6KkHDL<7BA##0B=M,T0c17<q@@h%A6V<$nh0
%&b2Wi1HIK+'ds]<@TK^V,-/5IXtJ(:aqBR&$+5*\?bo9-X9STCl!Wa6%!..1;C:@K%<D]D2DM6(TLIc]LdWujj$lHW*&VIJr0_BL
%,7U:(MUB<'8le8%Cob/SoT%U_Ft5^=%5Cs($Y:o[4.M"$9.rmAVHbYNMYJC*.#:!"_O*(m_'3=B)OMkOmh!m._/"]V>A-kfU9k]q
%iTXcd`LbT;&Z?!bXYhI;Vk)0?Zu\2b)X@HG9/fCGcQj/0%p=]O*LP5%?m<;qLb_KO:dQAK,u)VX+_RfclVXOHD66!47R](k"L]&u
%7g1/bN^L*CHg=ZQn;Lj%bo.4Bk4$RB./fFo"U>3HK_!&Zdo)%AN8+^GDTMO1,#PjYH7bOS!dti5B]ke,@7[29of-YNP7C1h,W6KP
%3bC3UJmr^&;Np.og+=1KF&7Y#>Fj_$/c(Q>8[),2LaCq=*#IQSUd-cp6_A'pSFMkeSBdXkl&[M"5#:PFMPIWH]PmU5\sa%%0MJ/H
%&dOtP<tj?`foFn9$9r?9NQ1MDBbba:c4G2N9.)!?\q/laQ`T"5pk`NU:XOhMiEf4k09Om<BNWaP1'U>J,+r!P5nFb"^..<dBZXab
%EYGhB6?8G"[6ehsL.5'_ZO$7I)GTZ>:%79gl"Za8<>9am:OogPM06s/KiPIo+Gc`j<bm.WBS%d%;J#@d-9bN]\GU<0ZXJ+\$&oPD
%N>2EN1M\)<6aT7cMtXRCONW6KP2o-n[B)"lcNCF$3>1!+2Z6IhD3s)lKFnhbI<$6V/N-D?28\L8@mm@@`ZM<NApeb!P%-E&'cF0)
%3k6^s&\YYeo#r/N<t#690uXV*`bUdT#4r=qR&XE-=-I8I+KD1c!QC("!'JaQ*Rc1f%+2\iFV[]`6-YPnP7YW$+Dbd7qVZukkg:m:
%]1;Z2&(L];(5A;$+@UAPcWr_/:0:%H$64bUaq@m/*Cl=1@tKEl"J^X*9i^e$7&`=],;*=,"Ct&p#\0UaNE7,!a<kJG#lPnE^E,`>
%E`KUR<#`&&Wd)r$dt8k"%P83]P'u%k@or;5'`?!-*RLS+/=4'rierCNoI#R('u#qQ;b2,2iC0bE4O"%CfW%A&M9>Al]-G(uY2T8V
%p*#ZY8sr(qCLdQ.[)8%NaaqFT)_RZfWP[5#'eGaEAeWlFM+!K)"Nr3fbB-&_iR;=b8g@IC&BIs+TQP4DT"O?,@fMTb=2-"k^%N\W
%!Vh@.:P3tZ#T0Ue#Augs9seSGoFd_t;0%=ZkrW@X1=f27]F*FKEa]U#VY[-A+\EXl$l(>c:2uArP^u+PfJ.V9&<(W$'\$(;r#Arr
%1u*rGJX<;4+A-qeG/)7oKC]B_a^HN86UR5t'r%0*jchQ?MKNl'A9D:DSRpCt"B@J3^JQF5b^iL(pM`:BJ^^`gka^s@QHg%U.ir)`
%1FY.LT"UmJ@J7<;CXN9Ce62'Ahj-:L7AP4-3e\A0\k?`MTuWp/AsV)QX0m5+n"uEMg9N_-?L$HH[DIheqpZ>fCmIu!lJ0bj&&s?6
%mV50CjruTgI9P:a7Hp6o]%5^(&q'[qc**u"$f:S7^D?+O%d?!#HPrFY9@&5N7<[K(g-qshe38QOThSJfR1.qD:4]\q@P'tF5SXs]
%!K+!3]>6"ZMd!C3]'JX8-`%DC!ZW6a6S(_a_NI&tXuMSN7[GT[\/cuE&>i<@"4#1?!oT`mJ_:O0S(a'@)3@AOU,C/In@,.PAIm8`
%pP-eGK%?IE+lEAff`@r'/<km?$aNVRgl"teCFtd]d_NkA*R4,qFU"C.T'R@-Xmkm:N)%cQ0J&s&:i1f,N.f"QNVTB,2('S[%1rm;
%2X-!B*rML[DCS=P"LLLs>XlTW$)"q'd.flnT>('-TMI<$@%\fWh[UCc*S=H'3C8gJ=eZ"-1.Q-`4,18Lj[PTm:l'_R]NW-[;0378
%2_UFeB1JaR!XhOC"Huogg6eUZS-RJ4=G-=PPsd"=KdWC$63S`$+.JLt&/1F_5l7!%]:o"kJ>nIp_?]1;l[.j4i/FX3q2Me5N2RDA
%"g3t<0.>OecL*"^kZfMs4`mI8R0c\/3l>DG,'E@*2_C%l_&)"?%`jo+-Vk^5EEP1*Q!I19XXS5BK/LVhQ(HPl.%O)7`#98B@?h9a
%>/=PKJWnFcM0("5a!UkY4W'!2Tg8_eU<UO:!=fMZ@UMhk9KQMD/;rBt$Wdp18AL`-6kY!Inp'(<*X;n00d,um\7X"^%^sAJfUN4J
%i2V^KCYQ6A-j9c:CF'eTbI`f>S.`]'W0\V`@(QUeQAng48iR!TLd3_3Yq9QrKuMFf`1caiAsj=OZ,[A"_i;jaC_o]EE&'j-LOcIs
%pVC_m2>$qi\T!9jp"JHAMae9W':`8oV5L8bWmC"/Y(1F&VZITQ-<8*o.:l'b-!UXfA[OmNkm@_$R*/'/"GRKpp`n?@(ZAXgi.>$o
%c\#:4FIZVU5Z'+$>@fh%XF4aqGWN!rhYs,4L(Q2dN(7,Xa%K>@N%hs1%-e-W%s:!;QoZKG,Y2#XDkGB2CSKR>"'Qp_`PCIPSTWm,
%<]fOW:Qck5KX%'M))r!B0EadO9nNDLBS7$BJdf5O3o\)ocmGaBa1N?;`Wb=oVh0/4Uo1[BBUVq?iI'Bn?GkgO,L"5"CBJ]pIP5*S
%(Q?n<&Pm&+:b4koTno!)IAiBr?r;_DdXr)Brn?F..qJ9<+g0U97*eo@;PV#C`!E;AZPrdR4">7IZuGICZI%h-6]8%/Bm.r@Bd_%6
%i"ne=@:E3l4G$&Z8N7Q4BO8R;6mb8'r92^o,XShQ;@A:<Jppg1ll^3<Gm#&9%-`R1O?p%\"u7/&#jo(+2Y]j57a#>9nu"uWGL6%1
%$lTiJ&sA4f.[j\5N#aVko].kdpB3j\M\rkh#$ot+7^-Ms#ku7j&QS(Ae:qi''&!_F3*SM0PjL?d"peXa"@qWk7o&hkUC<mnP'\bu
%DV/e3@ftD/AVBM[f/me8*IPW\P&4).GNUKlXq-3FC,ccg,6P,E`/h'u8oEm,D$iHIe!Hr2r\gn7IjRFEQm3;/eThA>BD1W4REfh,
%#>+U,P!Zp!Xk'TQ64=lD2AEf/fVf-Q=V^m8/Bm2e6RAKs$2Y#M@V16j3tKk'8C#hgSn?^#Nej2+(*V1H`aPYq9kaA6n?IQ6&V<Q*
%L&b>?7)&0l)u)?6U#LG;Q;tjH<_/t!/@8r-LI&1@5jh`Gc%ThU8O1c.M);O1XBW-\qsiQ'\2\;Z!n"j-VV"Og7PCgUJApP9#`M7j
%ef!Y_4tN!<pHhOVInQ`eE6sB_ihY37Z1)Rr8%'r!e"W+^8-gG1a^]i0*ZsVHE(p>`-3?TF-[9_;)iXH0_&V"G*]#"s1b,8FDDJ`5
%?oX1a\`eDSQ27r!HR(7QRsF/U./e?)[LKgfrg=%u8%oNo)8W'hdOj)+A[_g%8Q8P@'Zha)QUT@f7sDi_h+4q?(WHV0\SrqTFAP\6
%ktuhrlVD"3Pe.uT9tXN/-X%PLO;+4VFBhUPDE(Kk?D/3&Ug3n[2/CS&i.nN^=MoRb#$!/U/N6q^&ls)ljE.2^Bo[u^P*f-fY"BFd
%>*eAo]X?1t!HqSf.NC=LCtOI$g.F&1l&ZjGGb.ae*1R,g-aG/A3.7FlK?gJnaVN-iCF)=MM8Im)h6T<V/'C;')^:gUV[Ns!;%`"M
%2]t^`)'/@9XP(R;LlV5f?TDI5@+k%D9rR)IQl-=I$VeT3?q^P3NTi:_R=N7)bLf;?[>sE=i$QjQ,eW<4?$,8oof^b[]$]CBOl;^^
%(C8&8[+b';mY:L>m:j"XLi;sR8:mtV)@]BCfc,qZKnJ1tThHdfUR>^i&LcRg5Q8q!N3f[YNH`=nEj8k[/g<cfoXC`,E$6V:Wc:M8
%(,fk?HObfk\e$I1Fo`;;dA[PR3I)5sojV#aHc&kPYSh9pC]u:0<>U43Cg7-#;_ki`ARQ<]FLd5F?0'i]O)@4MKLn"hO;9N0'npL)
%QTXbOeAC&Nf>K6'KkE.@$E<ku2S^-eBRCQKabh#i8#m20bmZ9G]^e0^=D3d+FE(IfT]X0qGu.5/("\7Bc4%gs*oYl/7$E2"ao[6o
%9enWsTlNVij@R=a)%;>.q-Z[b`rkKaqVLpNF9P#=3;t'`Gn-Y]^<lWa@?$.h%Bd,X9]=(q5o2F1;3tZhjXq=&=>a.]%R7n@K,'(B
%,tX<l>@H>9/'eF6i6u-ID^sBJ)LS&dq5SF)4D(6ne-X]M'?Du1WDVE8'95@*&(I#*+pWH<\9l+^B!DO%p#&n6%RX\b.;P#)-Eq;g
%<NKpD41=g%&N3\*KblbI?3FcZF+?:An0V.k"(^g%1&X-$:IQ\)cbf!#SdUV$Lk/_U@=qr]bP<*[O0%9TC>"f8Md;*lV9g,?E/n"V
%Qk4Nd$hns2=C>$'qZ%CZXb_+AiJO;nmrN+DYBU0Ml%1E\=JHj(M:e8milub.>Xf:Y1ReWr*?FDM]p\t?XoBX-"Bnof7.r\aOBAl4
%2i^#Y(,c^;PVB-Gi?+ni-.9UI^.&A>J7!QC7S4h/Sg]7t73J*-"@=:'$L4'))E(Mf$:MD%Ek44l1'F@"1(nn&V]gm+j:mMSD>59-
%&4GQRV[c%-nMV\&s-U_lH;ErAo5jJ4k]I!H76kdkf"`aYAL"oU@%sk1!b6a^pTgeFC\A^U]fam@_/F^de=Y#>[am'9KfmM6M\=)r
%)7hNF$;;(Fb>`GXL!X=^CHYk3=?:k$>^d[I^a=Xf?0puWW,/Rj]Xf5EJD<KX1MjeLl=>_2:gL#n:(P>J8q]:/D$JW0R"^2M+)hA"
%RFCo+ZjZL1ed>G/F-jBR-r"t50X_p%fRFX0-@d)R4q_"=rWWWjN,=.@i:ego%"#$<`AfET)G%H4ZKSj@KEME:*2>oVI%F1<N_L8!
%+!Db=/p](<e89Rb9"YRp!_HA&HLXYP@Md#=B=#bp%$V"X%Tb2_fY3c%`<@tsaukT>Sghhgf+qj9qYN&kaoS@L#_XTq'A`U!mVGbH
%>m9Kr,)>O3`OPpX0%2@8)l"D97T:?mTBK_e]9]]C$CQ785=(H12BVrp#fNW2CN=8OiZR_\:iI]_p"_lp=cqho/-c*m%!X`=qQl^V
%>OWmC:Rr/F5aIqUl>$eV$m$GK'1/#En`\If30s<]@Y$gR;EI(ZAH.YrK8B,OPcO&^83U2FlMCg7A,g6E#bo;'>'I>F6A>Lo3Ptit
%=2V-cKP:-!iaNXl5N*Y/TX!mj=G_?/FHE#qLb3jHO#W!WeD*UGXHCSanW6-'V+Q.r_BT!8/JX<8`kIH1=GOP8#VTSK,nG[eonZHH
%g?=UVT)9W<[hbnCB/p3cb>^n/XB+;W/2ZIV/t,*o5n.@8'S;U.a\dcmPh;F^"&,"'cqtUYA>E=$W6-porKM(L;I%0KO`XMK[\b6(
%G7hJ.aUp;%98t'FVRo*g*TubJ/lAJT'VF!7r38;k1<\+,)>GS('_KhY%@f!L!7W@3K!W<):"VmJ8q&2&cXQWV1dc'>`!/%%->i/:
%Gf%7FJhtYF8BXsfU0X;Rl%O[e#]S!YpQ^?=Yo1YM%AZ)H\n!0rrZMg#h7qWe@%?9V*$S?,0[c*2&q#e%I">c=0>[6Aei,;T"=7tc
%E;Vdcj%%'A9c]OW-c'IR8g]9_;`Y1hi-@`:'MTE3qs\f;cZmdW`LF^jj#k<:Cc8Et>Zh!Z`%6@.@ZqZGM&?j3MsCE"B#.E]7BP;M
%k^'?GVDL!+8kg&;*l)$nb6[f(Kg2@72ZM@al<0!6-9ubNaJ#*$hj"I+Nsl7+OH)`WlqC;87H)k`>5o`$(?60[`AR"Jar1BdAr^hN
%22$M:<nXW)M^Ei/>&*k=a6ngVqB*oK+.n/d!"#!k5<&n#o:359%9d:F]aXCK]5%J>0F*4u(0(1#o:dM0(Rd(2)I]%%%3^Z)OC+Ce
%Y`VM7nS_^HLnJ@fap&-Kb)uXiE2X%rJcoT&U5S"jFEeoO%\5l=GB@9>'"eifitQG9'HOlSqr2G?a@h+5JC\bp?!@-bfUQP,Ubr>Y
%f3/<ikA/%5g:M'AJOuMW/FA!lLDq$a_VP.S."KU)"iWcM2#dOi+?>5<T_qLf$:$BC]MIe?';>Kah=\uu5Ct-=/rf]I6A4]j*;^QP
%F28@<kX;e834#ETMFK9.ERSlWZ<l:g#EJ?i3S^Yd0f5D<[c;qVmYT;<cS*><Y(7krH&sJ;KGCOLQdb6Jg(jp52LCj(`O#8YTQi4I
%8Z^S$=/u_kC)p,tT]R]4=#9KSrqn,S:)04m5PiL>]p^'QKI;f`+PLs>N]c9a+#N'3]mJ*[O:Pk_bW$V#oF9n$M@[JP$d%#ZY-(W$
%$'nWO=a`iTNr!*\FqCOFKqC:rMk_[tL-@ZoN(#:pQi]G^a],C.el&:7B"aQ&aHDe+`3^oT8"#YPCG3EP"`q(0h]A_=Ep_rs^OlIh
%chW%m"m8iZK;uO!YF2OJ7uilkI*JhkCsMAj)[X2(6*'Zd;t8X2emnHiDk4",0<k$nFb>55*I(AJ5"2utK;'OASL`'`0,T_-aN]78
%\PR70?T![=3E*Pd=Q+-&Dh1dsP$WQXSi.\;>%SR<dGAK9=2uJ<2%2J!5Q>;@s1a*2,2'+6,GcE7RSTM,Tf'n>oUAc!)J(-%Bgfu"
%0aSREWI4#LjbVUJ)pTLBek2bJlZNC\5G1R^E2b+\Te;fOiajdp!Y4Q8DJ@4:=e#r[AaF;@c.:8VQ\cm?Xb\N)S-l/S)f!,u7"@@"
%=Z!C-Hu")jL[@GXBBt&9J,G3mQo2#E&#Y]6T`>JY#RW4C9V,tH;>%Pt?.9o^LemGtAo"20RT!-DM7.c)M@D[Q.OA"G6^89$lQod9
%;2iVn--VHg/ujt'kX"!6X35DM&O<q#SBJ(P@B_nV%Us0*,SF."/uR6r[4c]lB_J`:Vkmp.j`l,4`j(k0V,_:!X4;n=Fj1#'okGRi
%CH3Wpf:W'/;.8I6!K.?k<b"TrEhOnMb0Dos0ZQ*LDM]1$Bq28e\3"Jo*$N$jLNnVuX4/7^E4JFMD3"Ej!`%5nZ:AFqEF(99qSCCD
%Yq<A"ic#pm"/+hIaUJ!>b1="9\X]dsWE<c1:7AkQ2.AJ5ZaHAsHb!FcWO:RU33BM:(,=a+s87)`V73`p3[ZmBm=jTus)(SN":k_K
%-V,#Ws/,p87r'8[_OX;&CQR1CEW1k_1f[Q\_O#Q/][erk(;=M(MMm!r,@('_=B'niE^Xl8FK/A7+r@[,K/D8QW,9.]/[Wt4f%Oea
%T_:+Z7J&h#5Q?G3me<@"5l]^UBs%19-u#037%H.H;J^P6+u#U>&m5sN(HM&T3[N4@k2MSEdVt:9qERVA7K,+(gGJ9%<ITZHp&J^H
%_7Y%S=1]oa0rE--1a9'6L>,^T1'I@s!k;a&72,R6[5M*8fKPI=]"U]1kJ'IeC>f,2"V[dL*Jn)pe?@A7lG'%J5O]RY`JgH,nX:1;
%&`+8mELF#[9_DGAb]&9)a[\LQ="Q9C^@I0F9r^co2%rjrU+.M\=uhdq8:t--%s&&89PB#0`um"VF"'iE/,,`k;punZ!=GSF]-\M3
%33t?pRG^r^BcX!9P>p&o$7$bjC9']o%j/qg+WaEuk0!6NPh3fF*6Ga]],5Tl.7/D(9:Z4G#WrQL?R+gl>*2Psp0OJdm(UZU]AP4Z
%*qck%c-"I<G`anEBdMruo,^=Eq'b3$>U8`n7u;?",&@;ZV>(N<MK@*td>YLpf`4]G3.5]R@a"*7euAtG\*)J1asNas+&R)/2D40I
%'kVETk0,)U,=6XsM6mECJ)%F71uU6"?9%9aM=&1nObZr0aV^g^0B=)b"XK!\+`Z-sBo4s'*4Z>POs/HjMH3.@4"-kc5_'@X'bZ>s
%i`*cUj&EmIIBg$X@V%mW*sWlgN/7+EiT?6KP!6e68.8$r$C@8`i48=dW[]H)4%EktZZu]O)l[t#NkjG[Bn?\VF-5EN'e^0XUaTS#
%W5SuqcohbnCFp))V`78*p$jPdY8#F"@4K/$Cm(do:rfe,<!2736U%Aj.mF]Pq?Y\rb2Z`s9-!r4F<X8-CI6ltX:S7L+lcKpLPf+B
%U+9HWd@,bnP6/QH1([`Sr$";DgBLsV$mZ*:"EW8H"@=J(8WXmn,0UmuHTBE0bq.n.XOpm]^Aul2Usl.UM__Yj$R\WcR42YnPRVH=
%MYBJWD)chXO$>F_<3+<.N\(EAY;tgu+VSJY)8oj6P=?H,'0g!(RO\F&E3%&:*h!Xu:r!.MX3clQLD%hRLnpn0U^"=pF4)441b-M$
%$*TCl)Pl;fm2H49?R/b$AWPd4N"f80Y?i@G\E,cJ?D\#_"#GPZ&2V0\>u;>([WR^H(WM^aM%M3PNG1%F-V''Bpn-Yi=@hA.MLLT7
%g;'IIX6n]]#6A*8YLp@FI<G52"?EI$;K?(lmUBR[TJ"C<QIFAQ-34LWR#BF@TpNqi0A:KI5]m)X,>At%dY1ns;e\hJc7\c)(Rgq!
%06[8o?$r4IcsT)V>XnJ(F?/]C#U0<D-"D$eQebJm#S;YS'uRl_m=>NO3M/8/?`D\Y5@\h-Fn(n&cU$PA5p8WhXVtJ)s$F^BeK_2V
%o[-seVY`[r`K\V>,]S^U;JCF@5#,0nQbr!E8N!$@o$2eoIV(p7AKdfpHX3HahsS@LZ:%Tg]!,\rH[/(>ahH+jH8]mj_[KV=Q,rHK
%(+.0FhOhT5a:-N#FWr7tNUK.N%G.R;9_p6SiVWe26,E"L/d.,OC?P_:-Pj[Y#ica0rWO/L1XX;8`G#hpLkns23Hnq=5j*mf;%pQ1
%Dq>4)>Z;&$cEtbK?gkii70L\a2%raKB]6/h!k5*cBIM`5%&NCX0*PT/J.8DK8!-:tU+[A+OI)#3O^Uo&<ZOm2bi>DJ2OCo`k"!h<
%ou<<GC0BS_MpL*.2B+50>7/roaAPIBTTL:X:'(]I*8+MPD9WXfY7QO)Z;f3j7@nau9cX+`)G22F8u7WFMUPS!RLc="$Dh)TEcL%u
%3RBVu@LE<Y`5+kf!\W*$F(m.nOHblrkb+`.9cg$[6M)'7XE2+7AWV"?jg!8HnZa%Am0ZTFO7[8Pk"tRN/;Au$K`$+#o8Bc@<j*P8
%!3q7RGf5/IjOM=mP;[G:%Yo-E*.?rNl[Vkjm%Xc>'FPVk7h+!t78.5>\GcXhEnZ2N7L.Smr%&;17nj!!hf2@C`C]W^iXT*WOCU2n
%-3\$l6`X`ML"MbD=Jp_mL]uj]+t-]OF<[5M!Gi1HXh2\"2kLC9XP!qDF]Ksg:rPhq'HJdJ+Rn0l6`dE?N7U[BVCB$hBaYJcFc"t#
%+^[nIQWV]s&2?(r3REJ0i%Da$/+VJL22eT&[?/+VEC6m"HG]!R#'mULo)d(1+LA@^1IW_EK02.s)0X#!efgaq3O:8LTP=(,$>Q5E
%&NLI6,9(s\3.MQq/f)!S6Pj*j'qkF-F%Is:;j39o65Ho%&HQa.cQp=B.\q)3B^4UA^8l&8lp>odFGYAaZ'7K]eoI0Y7-u5VIl/%o
%LI6ALPLDs9-;Z`p$YVW5TSu3<#(T4_EiU"88eQ8K^jI9e>A0fsFi!,`Cs$=''r+[sXH7-!=m$'uf'!I(Q!"@l9@O,#!Me7L9UQ&2
%R0HW\Rl6&I?.-&gfb.k:A/G\Mc_L'*+=tXs2epQ9<<$*_<_;4X=?1rFOH@,;;&=L;W6#WHdn/#+-ifEOP&:EcWq8Yh&=+_;/lC9C
%73!S8d"Cp"6`_Pti&Gd9b:c[>+iFr2BF+D;Ib-?0-)M`;@h;EaOR#[d*P"*p1#k.3G.!dSPpmNe`S.GK@1`Z`kl-AgU6j099LQsO
%TfHB%)TY=,`OdO!6dSsD;03S-MpTVg4Nc7BO<L$aS@!7eiG[sLjHpP4gHCW4X$0OFj0d"@c8rE#LAEJM:XA]<!\GufK=Zb]'X#BL
%&T<T<Lui[;SCS5`F=9Z==`RMuc]C%MQO;tZ#^]4)N91Y]?4^!GE)dkm,FH[-n1pt)CmK>f<#a@3i=]<2ICV9D-m1;\TaVqu'*tKo
%_>ZiaMOHoNMI`g6d%NW7QA1p@&FqS#Vii?U9m@0$`/tg71!jTurR7'4.YJL<V8=*Xb8/+G8AC\RGa.:k>1IhcSL--fSa'J8MFFrU
%E9C7V;iNW#;,;_J,(V9=+lt1/c>n4sXPG%i*E4j?XoV,H#l9Eo6?4UOBJSo3kc&N`&6@_"R18LthW)OWpsCn`Lq%\f`Gs$>[!;<;
%Cm4kF&7*VDZEk5QM`/I6$tPPjacAOcUk:"M<Kf3$r2`*Ge):(^I$`bdTSm>\]7MPcd*0`OK9tO:dWU<kc8"1l3u(K%6*Em67=_f+
%iXj4e-q^E@Eg,e$0Nr-8MsY1DN4`P=hpEjG-F)SOF&dTk?Nr0(QlP-F_nibHs$0ae_t?qZC@2[R$g\d2S2,,T-7EG&$RMj]1@q%`
%T]%4GGG%kmr.E&t!W`$]5^'BB,odcX&l%d]rB7)H#We&!fa$5]9K0nAH4n+84G#G1i=X%5Pf:V/BQ\o2V9C0>:N&u`mi&\s.&6$X
%-U.T(aQP,lIge2Y'>Ybu:2^M\OnRK4$E9/TWtN]?aoW,U8lE+Xe5i\(bRHLo9Q^j[1+dj<+bq-50]bB:gk.iu1-N`>U)9\`:l(/L
%l):8*".Z<ojt,T\Ng"[g)2XD)7kWKNKr@GN?sRTLd0m0c"[kU\LLcO:OCK"4AWgX/0d>.5)Q>*?jEjWS"-rtZd"KQA_dW82fP8Nc
%7D]5</u0f8-"M#HcU(]lWn)om+;2.`<su]'Utr.Y::h;CX:RsdB&\2aL''tSdKfl[;V=G[e^eZG]!.JB>T#;N42N/PWtu0F+;'W4
%L*S5VOu@Zc;T6WmcIRtY>nm_d\52OH9S/oGT(th`V/cpn)WV1sq`KQ-d"Mjn=8VCMd]o9B08*;+.<L/T!S'C+V\uh%`9D<jrTa6A
%Tj===WYV$rN`h:io:irPjR,FYR[gGHC)0/B*`=X=M>Bu'!)eo]d[8gq-04Tu?[pI:1eN+L,e+3@=UsOE(5)[kRRRi+09MD>XISQh
%a06EtCdpT,agIer]o\L@(AS0DM'_)eI"E(mFZ?Bs;LcQN19;*gS4g?lX$RFGnRM(E1rp(pF$XKc9m)+o9o7d42(96g.F#hIX--,l
%:rDr^2=f8,N\7puJM\">E<9k)eI.):Ln\)&3]6ChSEH\Y\KB<)5?LunV[mjVHJq\9qa-#K0O.X;,q.i9,n>Pk-JfAWJ`$m'j?q'D
%(h%71%-mBqJaGkQC%,l#i"[4\JqOI--hl3[!pLiiI;V!<,)%J.WsS$I%&%4--d!U%To>9r.QJTH5Z/Jt5U'AP1^$5)b#O+A7g^#E
%;$)dq5Oc*&Bbcn*:'$WW!A=L@!15hYop89-"<CdXQpu,=]WY?hY0a*3"6GP<>Tg3_gmhcrjT'[fik"We+H\pq(M!a!N2ia_@/qUi
%%6QBSEpg6W.^O0A//AnBFFpVNFCKg\&=H:Ylk0VM:]qFlgg)%.:h<YVD(XfY%n8\p,clqs<UE\D!;(*K=:R&_5\Z@U)Q-<C[STm0
%>"iOCnJGG8=Di`L9^>LY&JgH$5T,HKC"UlS%*(XL7ii$D`l.&FlO35R1#C&F*O?$^=R/D=]Yos_$7ugC@8RNrPp+;T;?l4_D&'eo
%@8HQh<JKd0EKSjRQRH6'%:PBp#n+puWu!/*2kYL5Qlts$Jh']A1e#uXa)89to!ORc>I,ZBal]nPVVR>8a`;N%&^0uN+*)`Y`-R[8
%@g+(2lJY-A6W$P:DIp$W6@fCq"'/WN#VPbn:ia]H;^fb`Tj!IF9gKW'P`=We>jS0%1g)[&``tbS*$D=?<&^g@,dJmUN(L[b1PPZC
%WCkM?0*-Ah7<gJ$1dY29`?l[k_M,i_Mqk^1Z'LJ]&KIJQ'j>PaO=<.T&F0C*E\Pcd9tMQ%V0B?HKFYP]HNmeU(;<W`4%TP"&HGVt
%R:1B0$\9&CGi@p7cml\kL#S^:+ptL,W7[6RY08U.1?5ro-6*P`HC0nSThm6F6fkC97_BE"VP&cj&m4*<$8P"(_HPLC6qDk'k<f!s
%BSAi@bRN0J+PMa`#\<dTnZMB<3ulD$-MGZ,5ol#<Ao,#W5(ne`A0J*98C5=t*DOX:]3:=VOn1,Ke;Zm,*1OQZ20<LAH3TU+!*$bC
%5Qnlr`rM1N[AZQ\5tA"mESBosiS$0oeT3l$.ZS"bJbn5lS]Fq=+g'*_;e1%03pTYp`>OkgLr-R(GnE]5_,i$YL[<Xr;EZ?Z=<:*"
%"C292W*fZ_6?:YB!*:RNJ0kuF5SI3q65*#Hh+`UMf@B/<_[9?n6#?Zn>Nd7gQhQ.FJTd3]%LJh;:aE24UF#Oh0NnZV'l'RlEZrU1
%80OG3p'$m9P+6\S+aCFNK[s@).n^"b.IdHN60"W3U!fV_RRD\;Ln6?+$"K^HMh_ft4HjN^>b-X[GEq8g%iMDn@f&.H$Y3Z0LepPG
%0GRTL;"f,M<?drTKuJM'ZR_GD_5Z1a[&P&5:bi_ZX@P)8[YEU1dL,U<6^[oLY(4)$@#-]S`QPl^&n95<WkadVGKa*f2#?N)JoYJc
%0bcJ1SI(ZOd.2L%+KPibH$XrJ`TXj-%/d)tR)TYAet1Lr,AY#lrsg@mn3gN!O"Jm1lD6m`Jf-aj/1na"&]+uC+ffWEo>_uC..Zr(
%VE;[4b\3lZFC<2n(D:m7M+U%LaI_KSiP7<P%"NO9bS)W"\]2elQb>?2d3D5g2.+=hN<4^YH!'cO05K=%Rqi)=,LDne+Q*1@G=6<E
%c.kl9aLIhl&W&j%Ikal#;q"$e,=aXAV4s<^UTUej'XIm;F\d:$D(mbENc-p$gA)A=;&%*'MsK',SCG3DGh5m9S<()FmuCC`.e?U+
%"qF'=,#HjpS6TM*7q(_q#5tG9_XX[C5HQH#Edctp6au,C<Re!P6d)d'o<f`?X;G6C_:p9i[Ze^+4V8r)4sA=(qZa-GU@*Z9FP,<l
%%*\5uq>]^$*:$'mHF?cZ=7I.:ms=\BjQ@u9&ScWoSZ[h7E?<DIqe'!tJ,BoXr&HsXhsN':eLQ[5DJC9A!<Q*92USQg8]MW]k6%U)
%+d(G&%Ls4qTY-7.<NYn%S!L]p!nqhL_Zm"f[5;kVV7q+]WAT;^SfVO>gW+IY;!)4Pm;M9rr;G"TU.[nDG-o/.$UgpDrcd-gL^#q:
%,sCgR0d\nm?sZ9:f`fM#/qOFqo="6uUun6,gEu1;[SI%%,=NV;VLHE_=a^s%Umd=Rh1^W^cBF'5qVF[ng45gcHm<ct$@4`:fZJe(
%:;$_ZLJ>VLP;8C1\j-a&*:R@NIN_,-XWo_Kf"9\GDJpONDS$Qm:\D6Hp:--t'@.4[V'q,FrTl\Z8tek8%c?&ZCj'E3oMSl9,B[3T
%D:PBX>+>3dj_`G1^m_0n`2OKoR<IZCL$2S,fea:8M8;M1qn'0aD<a4X_Bp<2fL\Iq0bZ$_Sopm+I(@YKC\F>JR]T#>a['g=jBaQf
%.C5,E1m-Xj".:V*DdfMU'#1I<=u)[P<'/T-X`aL'CT*^L9":jF"e04dp=Vk+dmfB2$\Nb3<C+V&`]+L:_k/-CqC-N7m2iX:4NLj3
%3^=siMP.X<o>INO82^LD;hudTGO1S6]A5kcj"1?'?"Dc,bE4QC^eX9E,:0u)O;>9<mu2jTbsYDZbDt+8>S5#3JG!FNC^p:Ve^n9b
%W#u?sg14m@'>Bq1o?W?1^4te@Yf"d9aNq2u!UYh:>8K`Zksj&(gR"Vfmn0B[MkK15291N=%8aekSjnq^QqfAoX+h($:N]B"l6Y)?
%]P$.SM8$Ah7e7=Hi(JT,Jhi-sZH^&L;uuoE_lA:Rh"Ku5a4<nL5Qe+6#:d!<D6ks.6H5@_r*Lr2a!RT"X_Y[C<VMp37ei-NjdSEQ
%,Z:]B3fd$gM//J84P&h3k<7$GcJ+=okHeIBk>C2;.HS-P[Qk.0%ktsDf+LlC<tE.n"MBe0Rk&gV8g.CJMVQ'a]'BHlp/4u$cm5<O
%\^IQ7g^dD($#Tklf$:0^Q-5#&2_bGA:(&"ds*eR4KQNm.\T+Fs[3rCoH\3]n3[rVA?(,Vsd>bWUZ%fUArRT:hUj&`P9=\:lIHN))
%%.\.jfW,I#clk-d[SLqpeEt.9#X`-F+Gh"bdjMRFBX;t"D4Q$8;Hp*"9hH(g=_<Gh9hHd-ZUK3ZSbq3T?(uTTM_fE29a.L<)G7pU
%GSZ]gS@<1+mAq-`gK;-N[Ugql[Gtm_`GHG8,30Xc474)/at[pMi!gA5lc%ArV!JCL>jJ5hD8T`+O[I?-MuMBW3(:Q+&k[W%<b4df
%][-BMgBdu*DW][r=P>67j/VJ'Y<\S*#m]9=C;f-b%g"Xpl*29%]fY[mdN/Ye7,,1"5='70TKNN\Y50JPLi6:!Pm&PEF(:`\<gPL9
%\7AR"TY.r*dj6o9:.+nq4mR,'Rb]q.o'DV3DhN$rr_faVTCI=mX@=>Ec>mF.?D?I@qM-nueIL'KL-S-\2=YL_8-Lu/bF>8=kZ"sR
%V(1&g?c*;BkAXV7Sl2ihr2OphGqLPoJPrIF%Cr8e9h%4_p&gj5D5_+,)o_E8p8dTX94JL.AH@+Omb)ES?ocr32Ad87;g$##Hee/!
%kVEc@$4MJtU(e=uM`p*fI\n1`5R.kON/mu&kKeUlA,rt**U?jQl,\@Kq_em)(u,<b<\'2$_>8);nm"%"GYe5G>K#OndXrPn?T+[7
%*FcrEf!c*#:k^atLluf&:YXCT/9on;0KEH#Ebd()*PgTDWRH+GFrs,MrVBZsNF!g1&k#Xk\'s;5Z5kD3>q#>q$#L^,dpZcKNcnuA
%bR4Q]FlgH$486%JEGbQ5R>s0/lhTmoZ:3@Oqgf@FDQ\uMs4,0?D#qSDP?A^P$tE?.!;q#W%t&l<$=I'unqDg8#G`@s1IP&6#YC5e
%<o``/HKm.cZJ-ZV?Et&q%4YBGjZ0h0'Kg_V5_l3IH10#FP1sdBXP6_pb4?T3]QY_Q`6o`6B9U^5lY,X/h+$u7a<,npDkB-T*QXBV
%4[*q1H3Yi55NHM5\KYkM6i6_Fg$,HRp%MN(q#<$c_\^`TLDdk3aId;'`]UGkn(UiV>pZ$VDElmT,pDX[M6_S)@ajqEeNI9&g3(]t
%YG-JK)(1JYS%o4N5;Qe;:,P+^Q0!&?7tPAVW>#^&g$Os1!d!SU<a[S3?2!-:W^TZJW^6H6@$SmA(!*4N]FSVt$PW_M^SDO?6gbrK
%4`Fm3fe%JT70LDt9$e@\)%m>GDaSkTjE=*<%#)gaE3%S`Urgh6j:=$f;:tPsL8H1B;&!84`WrqXOQDZ=,0kp#$.m4!aJ3'K#2PI6
%XTQR*`s+TXUH"PXLrse)`?E>;O5#)pY!HqlOO$(\R-.-VZZSe+"hBL`F_aLDROQRJY\:f_MlJGD?LlA67`*;kQ"c6<kpgD&ed-S3
%O:+D_BK2\:V-8VT90BUgQdeqXS6TOJ;9RC-dg=]\VE>O<mk$DBNd/6^noROdjpXhW](Gc:M&(m>Pt4oL`+aM.$3Qrt:%(;Ba'Bn$
%i@&Wp2S3B2hX(fH:sG`%+qKe.17+f"+_[$taY)m,T*AA_g_B6dJ.jEB4(LLF!D/9(HdYF*efSUo@-9ejm0[!:q6W6*P'a`Q8?)!S
%GH$[`,V1sM^e(JoFBS*m3Q]BX3i[$MoAL<'7HHN2V\rhFcI$u+KP_)<Ck,*e+RL_2n+W425I'I%4_nZE43W9U;ZUB;BM"jBPi#H$
%&+TV_.RB.i<OEY.?M`Dgckpmm>S,h0*?JEIZD2'Q<,<aQ^Z!Z1\=Q<^j"q9B:Uu="h,KTA<t4_1cAQjq.YJroT'W.tDf:tU3PN5q
%]qO1gh0\\P;?-:"S/jPIf-_sFWliZfW0=hK8##60'Oh$A1A=(u^J(']@6s2m8b?,>U.skAQqQ<YY8WWc3a'h\eM"j+"p*Q@=mG(<
%T!bdPek)@>j9*ne9=.+L(Yd#J@TQ)Pnl%oNGR+>_8WWJ:2\27f^6YA`H54B$3U@fEoQK[u;oOS,0(o3M[nC6I^5UD*UAH(jHLheW
%lgq=Xd=0#,q[$<;l"`2[l"<Q,jGnWM)#[No`-p"nY?Ug6nRu>5,[:eU6s]2Bmn[#-;Rm<K19Q>p==%1*Amh0P<7SdC@45?Q4^9/6
%Yd?d1_XbZ0[1hk`7t[I/jf&p&95\Ym5LA^rPuP\N3aD.0@0B>lbkl23Y)jg37cf*rD+O,dq!kiho]nWW-NQ$@VdAOX2YbTpHNH&]
%1Z=[ln/O[]34+.>]B4;NOurc%Jdb!IT'hX):&<f9L<&E/9qHlu3FLlE#ZBj-@=N"]-;m(bn`>\N_V2YV&A[9<)LR,`D'D90?@s)m
%)q,RX:(C.37naKElCa#]a9CKB30:Ur^]q+n!9Ud]Hpjsbhhq_2$=)OST;8f<NnCU8Ja"Eu(L"teBZu46QT3>4CNR0V`rI60nLWBF
%.o05hlELtAVP\]R?BO^qq*RI5?s+,A11?T>H%BU]jAD9W<GadA10rq?dk!VuI,lZrpVdZ0d+9<1F1XiOAL=8:l$h"hcjMW&_EqSk
%+pcNa#[f!i1mQ=u?)S[lHWI)2S>Ya)$Z?%&5(K,m9+JA%^>f=jB+rAjdT2hK>r^\K]+LFG$hbe@CjZlS"^)[s8#\)6mPdm0P\*]q
%D&hMdJ.E"E"3m^`[`3m*:i[pkK3V$=9Bt.ISh04:G'@7e-:t4)c:TP7M'Y*CO;84D=)>D0j[RTO_ULkYOS6!*j&lNZ5hM_U:XV/Q
%NPrh*TfV4#D[K,0!E;Q3PP61`+6%l9"r+b37/?nuoJ,k""2r\Z332fC=TXWak"?.lDdH>XUc&RkcN.W="54BQ@EXQ?RLP(08/RsO
%.c%H-O=L'3OadTM_R14#7OGlf+gKd9Y0@*)5,=#[N2&,[9M+b"qW;HM!Y?XPU_s")`a"`d`XJ>N_cbYBI?`A`WLfFF/60[o^cT3G
%-Gi?`*K(;g(PiS;.Q-:0b)48.Qos,bfR]0>%:4etd]n0Gl/U@C2_\U^rC8QVpYgZFJ-nM1,JK4JquHTg0kTtYYiQ*$bn%(M++Q[B
%Js-*5K6kG:IK4?c(`E2OV"Om5m`,UiO.a60!/<^+)Lh`arW(UK0d?Gr..mfFm#R:`+$dQt#E""i0`MEIrW/\j@jLsW&GhH<pE(UQ
%5CiT[O<F%4B#-td#p1EJ]UJrlof3,k<anmppW%.Ea8:V7[mdZFK=?BYXF(nlWUfOF=<Z:[UJ=!OZ=;`U[jP5(8&,9e:?6[@3bM[W
%U6HGH#892l'9`E9Bc%_(#Cp9VM1a;7hGY';nt?&NZ`@i>WYC[[H2-kiW9/Ag?Xns!cuqjIGX]G</<iF-][@]'%#8IZK<L<C0:Zn8
%hL\_u6g#f$:Vk1c)i,tiKbn(/Y/;.CcQ:XSj9@hHH?#?di1WSm_Ke+5c;rHJ7nUWEXB$V4%8l<)B7,O=s7ko-rP3XJIg?:@C-DAa
%rl>'65JMXDYO@sMj(_rYUG9!6?RT.o"+sS+ZnZC\+TE/ThfH&ANg/PS8Z`]3'P#+9k`qgEQr"D*i2"J&qY3#gdEs3d3e9#dZH,)]
%jY7RK#EMHi"g;&_KK?PT5*[nc&h.[0CS\\KYV;_WL9\W#f+j"JKbiJfS]Sr:]p>47'DK#=9!MY[3$30')PRsUrH8LW.4:I:...p=
%]iXp;E([);7+j?SbT.bh5S*B"gT/*mU]iV/r/a/5\UNf8p^:Q8^c>(E9GrAf6a^cU:E\ul94)E0S>J'*g++l>AVUO!M@Br@FP^;r
%23ARie!K"EK&r_P4uPO/h+dXJ!%$,5=H3^7Ar-gUSa)H!-[=#_W8@)ES)PS^@LQC!a3[K:no9nBCC>QfNC3aJ+RK1ePbC5_k#H"m
%j[aY:M9G7rPRDHZg30@+,P)9?9G,_r\nu>"jr75,1q/H>%O-7qDKiTcXWJ&E0:k,;fjQ9.=dK(="eGJY>G<dm@0cBOKN?QVF*YVj
%a>lX3:c`/(apcI0[d=5-!tJk_hiir3$8+A*j%(s4Eo*21<(j(Oa5r'p,X5K,T\7OqS0NWAktTll*KBbL]`!,@OKW%^KH2+WG*g4.
%[c;4A_Yo04,jafL-DRaYb60'*_"]I;61'9#80jBir<,1'99?qm=/q,`1sBA',2^o.`)5N?K_3E1o++=^_ccMb.8oYnL7^YH;#=[D
%/?He$Xd\4(9S/NA^;D@kfUK+XPs?K!*B#W+cWT">q)3#3]:S'>VU7GnoWanS]!tgX#Uq-8#&m['`hXR@ZG+$Za=I.A8d5=b!M$F6
%40WuNluG/iBF1-kXef?YHoM;l16nJNQBrp>-gNb2^&u'l<E\CO<P6eH_A0%?Ou>W=Rd*8kI"a/i[eAd@'p-%p7JHNT)#iN5A\4Ta
%OrYoDaO9&c!j`1)Yls!jj]'GRlt[A[N-44^BoPdO>A>e#7<5^KC+_<e^1GX@m_%T1Njb)oeKl'HeSEL!qi]E"gPI!-4buH52cM*&
%T"VZ=HF[^2[$uN@alFD9h8j94->hVPn['(!Cp6Rajm,5JGpC3ViM%`bVWc3$K`'=?D[[n:IdlXK7>OO_)gh2AhUc5kXVZ>@AEX+b
%H[d`!m8ppcqi(["&Tn-IV`SW@V\_<S:ckmkn8T-g4+Zd5oq]OaD%M,qWSXH,T-Y'8TsQ_j?OjVWqq=k6@4'4r!Y^1K^!AKa>n[6u
%/LA#^jX6WQB]77'#gC.1QrdS/MCX,J=+?Oh:C3?h>S:e-KD;Z0)Ta+!Qa#tL(#2j:355sR3&6hf4]X['9_Q]LC8"/kIH_=pVo=j&
%j<*3tPsMh6T0Y=t=+I8d+$Eudks,),^[tq5MkG2g-OM7T0/EPQ/Ssp^j_a,Cr9DS-@lqNBTko%$L[.T3LgLmhWp"H@VedqHB0P!3
%;p2mRs!`hIH#*CFZFWJ?G:D<>V/XN5*b7m0F`9NeDA0,Sq;m>()t0Q+5OSL/qt-"lW1n,O4pjo3K#frIec'VijjCQo$$6-I#T9&$
%^De?FMSk&K"fsfoc7<A\,Z*ZZK,urZ5n=tcAp=T]$k!I8RJ=4CSF/3hfrX2N-,Pe+rEA``P-.`U)M/HZhGE]1(%L_J\R"4`U'KIA
%e<:@#r.*B_N:`8LH[hI<,qJZH3\'lYDM*E(c1>TDoZK:rJD^:c^c-j$QtJXgXS(h,Bf0Y4q;70X_[&5uWVeIjiHkBLJfD5$+Y\J8
%U2N'TJ9jB'[MbEsQl2)\/$G;\cUlLs,#qU5/+om8Le%I)mbBE4Ni0Mh:-R0="l23^Y,0;s]Y2GSP&F+\EZL<i6h^VrFm&"YI/`5t
%Ll?e+!;gi6gA_?bq6,@Wd9[m;,5e)5Hs0g&!m5]tB.A.C.dAQ(.3mgNY1eA;8=L6--Ggtg'FsJ*^Q2i]g]tJ"PF,g5M@mQ!5USX/
%I1)DIWcu](0>ebg8/W]0WQ=BXlpZd7L@aZL5<Z*AEjI[:/X6LRBS9q\GiJ!$&.ERV&GFmACetOiG7U#,A!n%MQJ7/1_s@._f\fOq
%.`iE6h^5r;0nhQug;arkjAqle,!,6&,nNEeH+aqm0WY0>rSIL`C:F.Rdgk9P0r'1A.8J`RkjOp5k77!WR)2jg&E]#=6/T?Kel=g0
%dr4pkN3'3_2QNI.9Dh12r]J^Oq(FtO7QusGs$>r2iU1Y/96)"&*[5@nWe=KRioN:m"Xp%n5oW[(D-TCA1gM6Q8WI,-$!k3_!(sKs
%f7+j9bgYlS`giKT%s-KmBC_-+GPWD-9g+VbG@Y[dQ/i7YjDajC?WYK)^dKbk;2EG;OiO(b"oZKmd*1?C>ktF1][2pSeXU2>7aFaK
%+cNn&kj-h>0-^0Z(!'8>!Bd8U*"A^YGesd[U[4C?ZgO.L6@;iR=bnT'`o\^)oKRF1ggdWM;N(441Aak.q:LF"!6u!a]k/&,hB<KU
%9\95AkRb#O-1f*+TGLFXB*Mn4-@Td@>d%bZNMW>-oa5\A11m4J7GQk0f9;C_H"=0fBB&fl:DOI^-^'mLMU$e\nc>E-Qu)p[W5b&2
%^cl31I*""@*cDl@9:llVIf-25]U/LVFamC8@2ke7W&KWDFLZK;q>L:DL#1M,W`29b`\pQgCoZn>B;Z6aGVc*98l3-Xn#@5J-8Os?
%;5R"Y;>-EI+qFL0e0X9t-"T]>S0.JJ>5b8A]9MTZG_I1[7mW(,gs8\_S+d`SDnHV(rj_^Co<W58*T*6_>X,R[3oS_'3.F8E%4nbk
%R?s%b]Cu)jp"#r!4H'T=IMTqd@WapA^HY>gf9NW&N\M[))R&dL$`j(s-a4`VlmC,3N*^A-QsLrIMrQu9J2[Y+TWCb`h&gYRD7u^h
%#AI3"NOO\`g"t@I&)=e-8[QLH\(WKb(ng7>muQ;f?eW;bM'd]>V-SI.J%W-9jia7iJ:DQUK.=8tp"PJT75XrQ6WOQKD!eo]&l?Kl
%3M^dDQ+[`e??B:b"?tE'A0\I^H10Kt2@62m,,K1rdrc;VCur;b6RGO6?&GX)*B+HU`A%tX$H#;_/)N;d`Kc3VmM.`4`!9:%?qEFT
%_R,1nS$2shOi1!t8N^$LP:1h)U8+3%.B>2M(CE1$e5h;J"VF<+-(-1X\W4[7PS=0t8bD;<81+Bbe*_cC,Gcs-Us7t87*W%FRMdj8
%e`9G&-;)JHk$;^BVc8K^rYcKtn04a&lm%,aD@UcF=Xt1!3$bl`.4mHW)%r\'S,7')H')KR\+BHt#LTN7cVhC_&nr:9+O+a,lB`Qu
%/p;b*gm,iM'[8gBKoQJ+R%oKebQ6jYO!#9Q1ZMYm?A7YtO-7tIIM?7t`4BP<m(`Jk`P!"T5[Fe`Y/(K[C78o2\eNrb)l#l+*0dE1
%e'i7VQp)NF^iF*eO`=gD>G<fVnhpRj6Afqg?-8mdM^\@+2tk5"#%eMZ^<3)-Q"a'[C2Rl4?8;P#ZpDW3crCZh^Cc..I:kXJB,5ck
%h+nYQQ7/`Ni<6'rfJG9#<SW[B.%#IHXssQE)t)%fZ!iOmOXU;0$FV)%aF7&W;rGb@H!8-5Tpl`dVq_WE#!H8Q\1`)@ads]$;\N$g
%bj<tPO\0inX$9-D=^^.Gr]"+<e;&J9jsKodDsf$KrGhmCSWOi!,q:RHMc[m3=]tu`E"e@#Dk]jD[HW<Wcfs#m`nmb\%_FGn237*`
%QI_hUqA`;gGSAK*6@,7u[0?["\D12tf69#dK!M'8.HKp$HlQKhYF<d&$I(H`ISi7L+Wdks\2%Vt/NLfC2SSocOCq731Ge,ofgXeG
%iDL)>L"i-EGe_Y'\%S5unDJ*J\e2CZ-W$XE7g2W+&ctTYP'ecR;rp]'aE2Aa4!+2MZ,6Q1fptUC+=UkQ+`4.P`%jDr[ZAd1,&O7)
%Je^A;i+5fUa,O$[q4oQs.Li\S#<Nd[Yd<9-ZA"F0b"qYp"\Uf!NhlIB"9u'(D>S_f2P>m?c5tnC=PM:;:b3'pWHWMng0%<'oZ*hB
%TDL5uPT>s`]c^cXE>I1erZoWmQ>0?bY>STbi2ba[*37(##J^)g)1^asTI[NVkJ=n"i,=Bu<%/2#BmMeBP^F)j9'*&2BP*#Q#O8<e
%)#Z'"%8j9Gg>AaGZg[<XqcPEh692]mXYhaS]\hp&>Mq#Vg#)a:GKHhJ2rXaVpLik\o);I7]=D&C+s[`RTM5d'ba!U$HHkp);AHU%
%c:HJM:@lnVnBLVY%nbkE?B]Xu6=a@/@su''N\Y<6PST2KoX"kFnM))\*J?0$bl)6mIJJY9[U[HB]\b&a(mOE-+,o?[\*fKUf&B1S
%]h`%lQ0uQc'9jF1lfU(GcG(9Br1M/=B&9dM<Bj_J<S`FVr+H<LAI54/#NAVrYI;6QRg2pd'`>_1\Q@_IloISG+ADmu,*n/Q1hN7`
%SGNcgVk"oR(N&!'c+=[<b1*,oLW=7EejDYta4\?<mPjR/Ys7>.BV0df6,Q'LdSIR5W[JU2-IArtqgV+Kb$P_Ea6OP8qp%3Ek?/qo
%P)"BXaZQERBI<1Ik]8N"!P767<+0*2(Hd(QL-Ve,'%8ru/kJtd[Jo7goua^6#H>]D"^jo3[2pN\<"_&c)+om_c>duXl$s&FfC,4T
%D^Hc4U^Z?a5V4Kj9S,+X6H#^^ULU3n]j7#kgfCQ%";s4)!en"M2GPGV@gcE`V]R-'0GLjqTq`U2[k_Gak;DADD+^NdXl,1uR%"XF
%@\*Fs9%)>^#>_j+dGW830FOV2ho/$],GS:)MLYf0[Hn8!-Mlk*#mKZB[@Z3+fP_Ib5\9,a^[p`&caCi;1(u`X4#OKhfL&;6:64PF
%%SU%GW(]EMds*XZBX>YO7/D/c]Zh8W+?]m,gQo$WrHL_<mn'\W#-s_<C@"#/@/m?U,&KdW-=KeqRgO>+h,\i*?LAAA/j>+kS\PL!
%-H(dmTL4/b3?U9J2_rPY\Y>A=Sp47o`B/[:h$@GuZUR['T<1rR?E+H`4[8$\3q_o,R*7aRGS66C@G`EKhU6d&PW>\2:qa^'D%g;0
%dBl85@n1.S*.@Mlm1i^$:ZXm,%7NI/#G!IO"#;$U0g(<TTnV@"1R#9%e<pZ+%noAg7>Sq3K\u1U(geJXeL[X+f=u02D-Us`Jb'*,
%-#H7;"^hp>Lt>&.H[aMp<-GGsN$;5JC<a>c>.h1g"`?FC<E!Ya15bHK!LF4<HbQI,,\9C9"VQeIl:HR%K^Q\RZ&-C6i%DV)/ir`J
%9T![6T@R\83LIU@iLl\leGGQf$PFkO%9ZTI7k.G$VCZ@L$(A^h:\k\QQ1(c#6E,6*11(:^Dpm^R#4bAD\T-:b^aTC>ql5?A[WG4n
%LU@Ms)8`gUTi$Vl3!D3KJnc]3)l?Z^\P>F*PG@hQR'G:N8TEe8a?T:5b1_7EI2/S:T7iAh.EfH\jaV6sj-IB8^9(lFo@o:VS<Ph?
%hhZ@,h@&q`O1%aa)j3^RW6>+`+/Lk-U2I@:'oahI-Y8Z!e3pBPN%R2787cj\Vtd9?7WPBkgLQIsief;@'!_VD6KJdFmtr3,\-VHV
%>AB\?SQ+BPkK)AimA%01@8PL]P9+B&^MX9%SomsR^2U_Yq^BkdFY][>hi#QF3[5QZj8;`6:NlrHrS+2^dSuITKZ+3+FL#tg0Vpdk
%PL?033qVt9JN!&cY9`?2i6Au#908A92C,6pSSI%uVrP/I,mkWFH//W;8NO)SQP<V[l$Rp?Cqu*$n^hVjonPYc:?2<r[=-FLrnG?N
%n@mmj5J"?&6;tA&fe7glK'a^'cAKqb\I@5en[<gcb9cq&rWL0WFK%9M.D7X33K2j3]0*$qRj7q0UD,h'<I>7?/g;"&c0M@V;M<CT
%gBg`Oe#Ao#AQ3\+ApgN15W[d>iIm0QVsM0gK*TGX62]2M%rL_e\pJ)80"Upalo.+ebkAR@#OTtn4>SZ.O3aB/B*X8(k>*WkZN%hK
%F5^JK)?A&6cfgEs\+%=lKQ]LGpS^/>\D[10:XWrTC&<n5i/DBEhq)U?WAI;3N+!1$FeK>,)JbG25b9nrajSUF2sD%8`2UJon[Kso
%lDM&c,XqYTl?e$9mX)S?oB`ir^YjS$_m!s<H[e.BrL/DN`Q$qZ-f.Q!b&"[S?B^I$r*$mG)WY3%B!6K3A7OUICSn6rP'B^6n'=mX
%Q-J0XYkgbsWTM13]`00o1tG,C%P9O+q>(:-T?UZjNZgAE2uXp\/XF"j!;$<TEdO<]%9M`ep5?dflRhfP+'s5.r.D9NoZKs?9[c(`
%k"i>=cqN.TlJLn>pa_\7_;>1I-2J[uYRA&3rDCY[S9TnFno'V`mABeZ]M]I-NX7/3cBCeZ&I:s]Gqr=a,*`O>k`E:tbdPPTM,*8r
%]<i@ba#lHojO--ggdEnrD_JWXGT2qHC$uPoVdG;`'#0JB]hbjHbOFKgM#c,1?&H,ss-d\j^HHmCW1I5uPp2ndI9H)\^#EaY_8/9:
%)jI>S!B4VZ:cR(@^fr9AON^<flWPcB]?`*d`FZok=-\Gqa"-(>Te%Cd,\q*T/KZ;tI+V4=45W:,Ie,I)Ui;7AiLkXEMHP9!@`)8Y
%C:I:&C#b0\9G6?YgI,6/HAN&W?1tYPrPlJ@FFW(5..#I0#AJo`%+NnrELonOTDH*TQESkugkr9NQEBb<=aBT!r(kcJ<Z%b]:N_9F
%f-DVT%[SGfZpt/?QXZCJR@^N&6&t#VYGjGde+U(!eL?:Q.&(<qbo>U,74R#q9P5%Ub`d_C'p=5HSbVAr;Jm];ZNPA&;#=4)jkaol
%O?YKF8ogQ@rj80Ugrm=6\9IrOW+5hA]5[aQ8*pEJCe`RNcdLcGs%,YQ.tB]PqVD]A'/M9QaWQI;lWL"u'"l=aChl'6r#UmFrF$52
%e"V2NP4ls5]fg4fC>F5^EZj2qY.Y>ng`Q7h=FU5_)nNr5?6*lL)8pLn'_`8>ig49?"^lh0%DB\3E<ck'`SS_*W@=t`WDdp9]0d2O
%/KpGJQ3?'(<*(N1P^5)h&`59&]@_c\2Zc^9Kmi=@@3m!Xkg,=Sll]BOq5<KD^`T6*2X4$/jbL7?-s@Te'N@9s7?JQK,'%Ta6?glq
%mcT]0bt)U]i7%=O"XV6F1#;s8Kh_$W%V;;0lN4^leS]q9%;4kY1@W!%QBE'Yg"UoS/UXqp<r#+`*<^YAl5F&X@JA>o8M\H3FdFNf
%+r!OZVrs"SB8l\Zrk0PYQ3l+8;@*P;^o,_B2FJT:h>tn$FI]p$9D$rcZ4LXr:kS61oIo4%GQ@'`nER,4<ng]s4XBF:Fa)#noi;rX
%]@)'&rY;6Ckf%S$=`N]7-Hs@hgHMe[s65iB7bQ(<hS]C"Q+fa#hX0V%h:(X%fg24kerFsJNaO&$X:`4-/klBRNU=^oQ*$(Jeadd"
%%l[HkF30`)k7.(En"M'7)etl<;,l,e/H)IK8Guhe;Ghr_VKCYhr`f:So=mP9@3=,;>;>MY9snDNQ4\A)FrQ"(h[7I4)%ks*qU"04
%5cYUoR3?hJ%3V612?H>&h>M^a<&4t@X4QFE_>]Z(dHVcIh5*`MZ*?B^!c'2QGoh:>M.l2R3r=p26.hh#roecR?"*p_No\N)rQG!4
%$!i-Y;1<41MR"u.SaqiV9U@/<p6ilp7_'ON/)B&,;,8r'<iG.\i45^U"!f47/?%//C[PgBF9tX+lUdm@6`(k<1S"ZqIZg-/kH%Dl
%.XQ#<gZ+knE=j]ba<1LYp=UK.-@GQ$:VGOOg*LX?\)2EPPl5UjNTIpkC':Nj5IkB5qg/nE)^$AhW;A*s,-8N=H$k(s>)\h$VQ'Z!
%n8b9(rj3C.U.Je$@<9'^Gbb=;65b"]k0/hiNj#606.;o-;,NK^Uik/$GbKZTa"2%3Z'MBP23)>)"mVEm\Od\Z?Z/I#,fC:ZIH\p&
%d_9[INW$kP@I],c2di8+]od^KM"^F=@Jn>ilX.Xb7U]+_N82J2]@n<,#DQ%K"ns-.ZSi8bW?'H>Y!NtA^I6V'TJUS+!l[mP)Bg&p
%p.@cMe>0582e$#MeLJBJCZhTXLfX9"k$<l/1V*&T34LA7HL0f-XUQFk\I\Q,Bb8io4rCuZ^\VIeLQCGqT4%?"kem52@f]IY".G#&
%\c=O^AAQKT&;XQ/e%5>R,R#o"Zb:$1qb07i(`>YF;"mBUe*LW1`M?)qPi=*M-";W'qBa`189sD$/-!-,N*T<_Nea\X/h;5IN=oW2
%lJ<K8=2DQtfCf%;$HJ,:_m2Gnr=Sr)M[g!IplI<!1FtSE$`0K;=8Y!_F9VSJ^o2+FmcW;Ik1sS[r!jTB9NMu%L!rNWUie,G?1Zjq
%0,5m!M0,W5[6S3FXdnjTW_>JqEVus,BT6iCR-?L+oX_E+]F1rbpHIr<ATD*=^It3UfH9hT3.:d[Ah*;b_*Z?6nKRtA=CrqD[FZg$
%!FjPF)7[GMVq3S'jS*;$[V9Xu(G>Q/W]tSF)$Saj>4!HuYU%Q\=]:+mbY5jc<kPs1IUh!"5+]%ZII`bC^Nn2H2M6@'@l_IL3jOUl
%OkUfp2r7m<Ghfpkp"@sV#iN)HEsmGc[9+Bcq(iU];`6siG)-'tVOjnZ.+!J4TiZ&/a)OkN3\OC=r<.jeK_SU=n;?L-6DY-$P2S)F
%ipD9+.G!nfN_LeN4dOa]^/5\;A%OIm0.[]Jd-L6"\@ZG?SD9/a.E$.)S[gnD\7C$QV$gu*rc7>%2%"]r0*CnC(Dt%E5")8tJd%IP
%&*Jui(eekp])GmMi-1[gFXsQ=0/.14\+[3:^->4;?rprJKgc]9M&%kO9poODoG&"P8+'k``\I+L896gAqEN%(&++B^hV(ApFdhfj
%T-&7n?.SR@g(sqRrGh]Y\bG^$Q>\F$gisp,rGh:ekN?39q;9$:X4^."rpO!R0Zq./7.8a08J2]536fkA.;8GR8Hs&qOjI36G9+sc
%32S5N3#FJ\iPNeQY&u/8/n(Ij4(N*M2UVCu.f+-l&`5%2C20PNSotbf0s_*&,e"YfnFj(2@/em%9;)7WElWV&iS'pthFN+p[:nSW
%_hS_]c`e1719gNA\e;nfK@?q(UmQ&P;lW+6[*4&uZK.XRc0H/^aA)_/fh)TSm[^<PD);/!d;r=X.IrP>I<?08#fq>Vb(SVi8uo?3
%VFh2Z0rAj0F=^@fA'HF$M"1u6&MBVb$`#R)(gHt>f%s+QmAS;'-neQ;erhFY;W(D=UE-m&(hhLh3d/Q1!Zl`RfL6phDD>Y!i_6`h
%V*cB"hc7q$OSmkCV8hMiOJ)MkDPJC*glS3e:5.=,]N)iIPg[MV!aukWjG4`#1<#o1\ddbX7U3]$H[uPA2f8mA^ts5BLjWKAa&Aj6
%ciS"<VcsXQ`@gNY_J"h@PU.'b0T_qYpMd-8^jJQ"^G?JG6kTrUo6:m"_ujQ-_hP%P@<&l@_RYdJRu5PhB1\os!eCE"5GiHbf)-A5
%oeUi<9TrYD;,XFY3\DZST,pUVQ.[LpNOh<1I[BA\Df]0nV?'73U8(V5FlF9oV$dlO<HYI)<::+l_5^Qq>ITZB\Imb[6mOM=m9+_g
%BVeX/CfL5a&ZA=ei8`CBEbb*U/ZY#b&D2(qMT"0R!Z,]rSVZlqf7V4BXq[N.S_9oc!R*O#_7"YnC3BT*R?s2*46r2UD%62f^6IU\
%oVI_@O]M)&"A*BY_GsQ>F+MqLb,13Qa0Z(URlFXuZc6DJ`nV(9N/)C0AnPfF1tL\\+n#KDeu4`I<&hLME9`!'[(Z;AeAhCR5M2^n
%#O^GuK)s*.h*Z7WqSIL@`?nJIqAQ(LF7ak7duC-f`o'8>&lh(iOBLuYpAa;&nf7_0Dk#:D@W(a[(E\n7DuW0'(S=`<mh5i9Hlap.
%mDGMYhGgGLCY;`^/]X]`3E8e6*1ZGFY$oMKcpLDs"%uBAd^H;m<]'DB1uOjEhk/b]&Cd/Y+]S36PO-6+'l>=ZA't#sZMeO?V?B,6
%A&CssZlr7Lb;kpOqDT.G[P'BPKnupB$I%6c*d*-i/GHi410aZ?>H73;>2W-4;#%K%p$F]$Kd0HrBc#;G8o2D,FN$6udG!2Hau;go
%](l4,B]ZUYb:cf'Io?0g?cRY0g:;#AN.#POWYHlqE78E([4.qESBl]8m[r*['^Ur>Y00PqeHX9Di<@Bup@"_s?QQ$.FLL!pkE:gG
%M3h;eP[-6X&gK]N']B/dD6IQV&)flKgV?$9r:Ir8V:guSZ^tsDgdlGp#lWoLFI;/7B,H_I*Skk*$FI>CqC36#.EsTc.:(!6@.2f<
%jW)k)DB"p``V)eZ_1.emg\Jq1!#%!SKAYZ0_!Ep=r3%!h4kj?"'q0C^_HUiDmc$T%0njN.9:H;jYtmGcd<\ABIqO.a:jP`*WaAZ`
%*4>r3oX1Q$;7l(&]82L'e@8e1=8phWm)\reB>!;mh8:(`!YAhcU$S-O0D=:>=D*Xe2+i&S%LOVKPpt]bPKaNjjHpgicBCZF7QHCN
%WROu!L$c=<9mAed-<a]%[O#.1UGBSI4KL.'kcKb[GH'G+CqFC'QbE?aOo"uVUM6W>JY1\3`,t>4BC&)B%/s-SmgiV"2p9MG^a/gV
%[n6;&8bTVbp:!We[n6;&8bQ\XC#`F)*'!pG#G9ZPmBC=HmoHj$8Ju4dBRN1,eaJ[_p0D>G0,0?tjo`'S,T#_0[L5Frls[W`\,3S"
%P8\f;,VM5&GOGsZb\#[KA=*ZEW62`CGar.,dn+8WdY`1L/R):G>L^$g,GPr;[qpWZ3J?X;dV6`;\(7*o]Pck+5o6/kIH@M"7'!,O
%SRJX24gEW`(Mir)[[6(CF4cKf'D8YWfA%F1"Z*op74d?^];PHhr^t=h6>>[A!E:<0qrp&E*d7iiKLiV<1=mI,1R47d(lK&Eq[Y^t
%-_ZL;m%SUXl"\MX0]4Z'eua4H`*KbCBUuB2ddD3&%o:(olXcYK\,E&Jna0WUlh@[:g3t'4cYj@_$57i6b22F$q;4,BL"!gOh9i:j
%),b;'$-\.UqKe55L[P_5XQZ.)d'ptn)lfZ1![Mm>Z,2OT-/R<E60gK.Dmo7s4fB:!m7s0tkD)/j<p.un>tR[QQLFcdVLB!bcA-:T
%+us,@f@mEX(kV-(muQ;f?[eg<;pP)800_Mnh\ae"X"Y??4Ma^^n@JB9Uha8CAp\/"G!8BOW6^C$5pM1ee[/7[):qjo1R.,PVNE/7
%i:Dqt95/msn\](c*C"G"i83P/FRFQ;0=C[Mlo.,@q7a/l*O=#+k%\Eh4uld>J+GPl(V.=r?M/Hej<J:"NkTrV<Z[-`^=t130C4td
%6Kcpn4Oh&!B0dsXXe^#Qk]d%]PEfU8UH*[[8K4\nWfcCtea:`oATAMF_7Of-IQdD`"C3_'n*^*HaeAWECTK?L)ohO*?r8X0ZV.k<
%_?K!?"L$[3cK`IkT=eG*h`W)?[X-2WF`(RO#)Di%c?"-Kjr@hLq(*mpfQ,h9+<<X5Zki8+&6()u'7!aF;XtXu<*;0#=Nke+L8akD
%\,%2E>H=@+npR3#oh06(G$j^rJH0h=Z+*!XZWI&(gb4UMdB69VPNY+AlM*UC6e"0sf3\P:U:a@)@JtrsAs:,-.'9(E#:[TN"KKi1
%(Ykgo/he<rX)hK(Wnph]P\D-ZbpJj+4lGG$M=d&[n\e7h/eFr>=R5a:Rb_%EiM]q0isbLRG5,!Qdai60T5Bd*Acu&3$].E=BJOea
%$Ru1e!nE0"0m%4T=O0MH%>44(8VT(4*7GCN$Ai>!^Xt7q]W"B&jM^_$-mt8eeT#PV[i7]s.8@3X&]$hJU?SX6p8N(6NMoSDNAn<)
%-oQG]7tFIs\C'H+I1r-1G.1^ae/k@\d=]No;(X<P]LtmCKN[1R*g`j@<Zh4LM.e])0@lpj<LI`rDm[%pHY%OY%:B*HMD/Z^TGjf6
%SLC:N?'.btdT_U-1S0h5ZZd<ekUY@_T]3qr[]/hoQ>iF@eoU%E9pEB5UY70_TnksFfu<)jg>4OMdrh.'E-_E`/#VVm[XCp90AEtC
%rM3-G@;Y]!&;H+Mk>BJs+V=F`\ebi%juTK*7]\N4/K0SF\I2DM*utqGRHi\NraEG#,ip?cWNEu[EgoU>>WJFX1H!?1G.o]@44Z;)
%M@psp!%PJVd-j2J9*3''6OW+#+_??Md*/F]mNNh`I.\ej]rHF@H<N6F0\Zk\M,OT^o5Q0O;Ekl(HYfs_2khjnYecf"Q5XN>!3M6h
%O5Y('MF8gcDMq:c@o;pl-rG."2'n1,Iu:j`kNp!n)i1\AJ)/9F*D]G7:1;$7kT>Fb2u?!lP2\)oT\ms`S,7^S>>nmJ!"TotaN@9%
%*SV7H6F)N`\Q)DT]0XQLVN'QE&Pgc*8X`#IS#CDF;-a8J?^m5^`g2FtAX[_LM"/:8J/,9\VAhB7._Nbp3f"aHj`)[ZNJTcT8kYcQ
%ajPaVNhs)!<1C6-D&RR7j1(_=ote[`b()'Qn.YWZ'H#5AlmRXiIA)atVsoa9C/FGeQrZ_%%Ya<J1b'.s7(-1jnM6Wb%c%?:;sR]r
%h"aFprg/%!5'i]9<D7+d]Bo0l94B\Dh+[2D($W))Z_B$J/e[QYn)E<PAquCC.b61!cX^)^Ud:SQ>MWO.\k,X&XDBIU0cA:rg0nPC
%"9umdCL&,'[VV\PHG\XAE#cNDUO#/(8Oq-]Wbt[LQ"mJLcFXEoV?kXWRtp[pL@gZREjuHMj'8.eLjn&]Z^G]DV]B0&,OY<rWS#_f
%1^mYag27I<J0%/?ENUW1UtJC(<f4F%4-h$;XR_5:>/C+$KU[i"Xel."dfKugCtF6oQPPG-1k4YeD5u<J!Uc]u,"eX=oOs+Nb\O]'
%0@/u+-lm7`:<b1#`OsK=guip@XA..gg60>"U<_8m3hsoC.akQGYUo.&$RcQXO^#+"bbk"ZU[tR+H&?>A#'ARU1QG0;$2s7Dp\h*h
%q2bRQ$(FjbGI!4p5UDhlNm8i^[1\"pNWDeQ_H6-Q8o]r+Rm=rs.SFuQG%R3l6UsYS8D=BWHW3-sY6::C.954_+jD71/m/r)lkXo?
%/JqCif0QQ5.&MWkq`#@=6oL1)-G.%[3^cK-^<:t8@qsYrZWRr^f8Z!"X,+?E$(D33:u/KShjo80@aki+:YQ#0=;[_;T9P28<:VSV
%,\AT,XhA"s.:/Rmld</I@\b$dPfTHK5(G<9MtY&s'C?h[R\K9_oZra5I1Xq=^->0MT!>sFOb-Yo@`to8`%QW^[AaAb_\&:d69cE9
%@nk]q/:u.gCu98-`P-2&h5BRLOpBdKfbG!dmSbnQINR]:$A_8iO%R*(8fI=h-u$f(i0`"4!E[jW)GM<H:2Y32%gn-!J^'U]Si][k
%*LBE+2f1'iTq"j"ETpSiCA*hb`Je@PEY"n9p<e7Xg8Z72B)6IiQS_tI!=^s#c'VCjW4C3*Z![D3L?];AFkr%E[$Zu3]^!+F>sQI$
%M]6'0qU.Grp%u;CkSd)'Z&.g/70^HV*^sXAm[p<K*<cg2T!J!ZVd>on+WLmCX=)IkVRt$4)lWmhg&bS=DUqi0Sk'Kj,uN8TYAL`<
%;AuofgZ.Zj=Ra^%-l6KN?5TgUCl`q10;j7S"bU[K+Co3tkC.0l\$JbT^A+B6<H_J#9l5Y=Cq7%f\r1)4BVjW5Pr-;4q^+tb<%XC<
%O0^(N/4&%ZFEiGlYl+X:"Z2+)3jsof`,)0E\(G;<;,6g(M_D>i!O<3S$+q.`V3mtZCU>\-mNUBnVjj2aDsWR"c:I=-X_gQqeuRIV
%&2[?jXO@mj+-l_8[Y^fhTSftA.JL2TD?M#>r>dULU5K):+3W%G4PB,!j%SouBZt"s;_am"HJ6D>kQggVTMn(%/T5_=Rl&jPLF[';
%K+s2nhI4Gm/uCmpe('g/ps3bp91cW*=J"IlXMR*XkRIZA13=p\ft.An6;cV?+aJ2ZG,j@h78!FnaK'HYI</HA_m-e0XIEg/g&;=*
%)/)8q9C4jI7:7'G.28c:p'(rT#8-=`.4?\D+KZnQg<_uFDEl+t5Q8Fr2([R^WWh!j_ZqPP!fnD7pii'nXiX6<ACb$iJ9k3q:t>Z<
%MIS^<=Q`/s%fEJ?S+WVdFH95Ued)th`e_rmM,6^j:[`N)iiY.\@'_83@3sI>k$3R9=a_$p*2-(@#N=5*UCR7EI;mE*8JR,BB,:d.
%p[7WRIfO=aQeK_]S"nAlED7]>,`BIPHVLs;Ofq"R&c4u)%%5#TqeFkdn_$67EqK]fFMggbhlUY>X-DIL)8?-heYRK'B_n5IcmmI2
%=c9]XRAtg2BfI<O3\J9f1rCs5q]J&.'Absb.8ZeBjT57]k//*IRtSXuDM.UXpHc5Jq<HQ([#A:%ahQ`nm>WfSnS%.uF+okaI!=7c
%RI)re4fQBZPA,I:7[ZWsq?5L&a/`\G[u]B^^N+e6eZ'si>BXWYaL^4l%I[0`6T,[)8HOk0$<s+2GP\jVj$(7,MVI3GLn-2/s-F^:
%`!dr3i.DO(7B0S['p,LiMnd@1%pV7i.mKesH;NCBFdfuM-Rs"34C<BY2#Hc@Y!O35@<SF3qi&P,A$F6Y+7`12VmsGOmH"Qnq1+h2
%prDh53^GHcg!ia6-bT!TdBrA&&&]?Y^GGIGnSbc46S&&>!JWU$C"#*gHo"qD5)]@H@"G^HJ2Q>*BY"Nls3QgMTK"mTdU$m;TmO/R
%bTVEOiHYlL+^Q7d*GV$gZjj8O3V`=),N:>W$cYg6#,$+JWQ-4Rhh@h"$K"O`O]l8$?FSS<VGb_5arLRQ4t/:pNe`0q1qh0Tm;;NO
%(rUk3$@HR.-e_cY'u)Pkgpn/s8EA!PY98u1b/nu%rBotc-#=n#AR/Hh0iK-1?f!lA?fgc_.!U0oW?_2JBPWHcr]E(9kg$0ds0>GS
%"_dm&#*\EM%/>5`q6E$7:g9:1XS"5ibTd+O5?pIUJUM4UiqXeiLTc3l)2![*b(P!eE<#e5,%_',B<"->ar@k3P`eD]ID3W\Wpfm/
%Zkk9[Y1_<;)ieO790\`';k/EspT3+mS=#'"o/k_+QI<2<[[5^XETi3Q?<;^B6UCq]*Co+3OLKCnG9kb!@pm#rb:crMLFq>*T8[&b
%qh<HF-3g^,cOpu-L^TlJ--R.+Zs@3Zg&s=!b%>5E7'?'-it0tD2#:>H[AYd&f(<pci^YB7)&0u^7g[N<Bgf1pD'QO=3^Ot5bGh;]
%YuKB*)c^]n2,d92r6,*4p>6RIM4g<h6SMW-7@:>V@eJ8bF-5(l^p)E(6?rI1(C)U]:03U"3;mciK#`hS-"d"6IJ.J<J^to:"p?4H
%gqf1(OH)Mo9?GE-N<JJWc,Rh?ccS/;kI0iGCoja_TaXNi2VBp0'GR#Dc"ea?mCKE#I\`ZrYK(h+=>D2'f@>RGHf2-EI_IXg(S//1
%+FKTYpBU,5_t/?JmGWl6V#]5(P;/Xo:%&fA3o1Lu2hJC=(K''8=kD;I#&sbD5*Dm]!np+$dX3;=lG<1+b6R[AVgncJO9KO%L<To\
%8$!g*\-C8t!R>K0"N/O!46[>"^!2$"?rlV^7T@j1.X`,4kl\uEiY"="Q,_SF>B5SFO)[36T.Xgs,K>@p=Y[M1^Y!-.D(daH=dMSQ
%1XYRMa=Wofg;1ptBVWM9lL%9tW7rn$=FVVJ(Ho]9TO9k$nJ\9eEH'-fUFK9kO$k*Y.6n"RJpeklpZr@-&rtL8%M=s_#I`H%@t1j[
%X/Ln7p+#1Z=d"2\kj>Sj4dM!]n;rc@B'i_r-6<rLi^i5uD`<*\%]I`Z1tb!Vd@e.?L9qRfQ./M+VAnpdQcN.eeYXc'Sg&iOg-ikc
%P)HRD/kQ*R/DQf?/VpG++>(g%RBHOpAH4Zo$]\0`&9NEZm8$^(R?aCQRiS'b\a'?Uhq_5Mb/ORF1VL-Zg.]F_.Z4GD@L3^k<,XOS
%ble8/$)=s+g=s!1:R)<mdH4Ru?&0,VaJ5IYBG%,kS<eRVCr7O0f_-f>K@Frg^f2m]rM_n$1>"+gROP;+1O`o7ITY8KD:-+DnJLA?
%aG^3e,d]#VV/VlgPCCS!VQ+VBVib=Q-H5Wj.]RKFW`!hnD,p+H_Gg7fftg3Y8c4;cVGu8ehq(G;Qb#dH;]ML-&X0Yok=L>nYDrMK
%[:R*X7CB[aVG]qh:W/T9d7B\i$ECD>KAZq2A,j[sK9OL+#Z.W%j//RNpA+JW\.=03nJO9?SX't^NEp2)M/Y[OUgqamQNZCu(tWCN
%iN)^bnh-&Ve^??hRjh#/b"Rnm&C?j%-cTZXa@/GgAcH%g&7cTGkuVF3Xue%;XZHf>CZEBBWe]@uA".KL,)j]QbOG4qR@\a`[gaaL
%@9*"OD/=koZ!kPFlme%[*INb2<E19mF#0u9=_6,2Z-NM\VN#Lp2COFs0'^pK7T1nq1q9;N@qpk-`3NI>[EU>HZZt8=X%tZ@/f9D:
%U%Cbn.f7[9/r?L7n'^TO:"5Fg#!$j3,27fHX,K\^FdZ8d[A+AR:Bpoo-eh'Ca%RmdG.?N@ielALfiH)G@,#pBdD*-C_']D%hg/TT
%g)r-M\0'X%/l23Lglb6C,&)4H?_\9f=2k0k@=%3SrL"\_[Z&ZNerP7&:`Vr<mB%cJN$rc:V2(7PPC2s8e7@XRRVM.of^9sb[J'ZB
%.uFl^$;I-l@oS#Qb#:`_2q`)[ZNMp5Kj@eS+psZ_VDSpLA8`OU(q4#02S7pbgNPa1qk9.c8lggIQP((M@)Su?m<HH%b6LQOMd9O1
%52%A]p:-kKiL:P><<a"]J*bSi0A<0OS1+>I@_Y`;:ra,%^9_kNh63hV-HMHFVT\LfXXr9EKT)bfPp.<rU=\f2l)Ng4jqoFF!(!KQ
%p?q=<_jW"S<N%n3.)U'h!jU?R;CD<HT(.3';N%d\=]!$nNlO;=*r>bQeTBu55W5D_ni_Xbe.cB2,*J\I3N:0_&/@ZlPgpaE<)5\@
%deTgF)^]nJIof<Z_.7AK-W-^pR\n,hFR[JqE[>O7)l#RQ(@PA[Pdh*T+45PJrLs<H>me>VZJ?\6'tms-p^Zefcs>*Z&OEea:&$OS
%<eCl90s1E&oYJ_4W"A%DWt_d13^rCKU?n->!sl!^_0k$N)sEWkZftI6$PJ7&?*d8$HIlK+b/%"QMgraq%lQ`jXr4XVaf*)l:HL:M
%0!i5c)(o#-l^Q5lfDP/BqtaCVN+UD'Qaq!K]4)/gDs.i_SH16kadqNAG@8b`)Kt*-pKt?DBSrll?sp0$Xp=0u2nT&m&(Z[[bEl<-
%Ys1FZLS]Eea*U$W-2Lk"]mm`XGi+i8hZi8M-d^MWWXQhDc5@W*RP^O!P<r26.K<$.dJP'QkqB2,nK7e=V:$bNJ;lrnVb[)Ar9lq9
%>Fpb(=ihEg>l&L-Cm?,.H+:b's$;bGQ0>c-,K<N(PC832'ib*iiOi%28kZr+ljOK6^j1\_,;%T>-?Xre^TC8O(7BSPJUP.DS.uq4
%%j3QWCF7,T0uW\74SsRmc%HN,jDK8G"g0F'G,%olP[s_M.-eP!]JjoQ4o5BPO4EQCm((!PEXpn/.iDo7L?-N`*1)W-.*9/Ch#W5M
%,nRT&;*L4P;3n@h_U6M-c^L9+Uqtg:A+kZ<&Tcg;ZC29.T:WbiSiXOkiTrNKJ+4=?3sP[JO!5fR/qDCsM1@BQTqo&QLJ+G@7_Ghd
%9W!r;r7"Q=\g2tO9,4TqQcR3_MAdeD9iM.3nPP`3$ifcg]DpI'q!]BPU?i`_;XPHg-tbY*m-,/-m;H3e(FaXn3'T,A$N*;5Qr:"A
%(jc[f!aJJkd6YME\mf#SoHsmJ@bnVC&[:W(mQ[4&EW-EobK7$l_2k)CCf4\rq//Vi4f_dO3:+$G,r11lNP4W8.D*jkOM'_!@2WH<
%gKS/lgD/BV'+OG:15\mfQS\-q+rd;"45get,qi*r2X@*3d\+RE;j@S^H1Q"a%K.^/]5fgq3L]YO7d^o%RZSHjOQgIu2P`IlYt#Il
%/iZX#CX(_2f7jpS#h,=1ECg1EFTR@o:4bdah6nRqkUnV2l5Ggb7??Rm<&3"`U^ZlK3=-E_Emm@jXb(cBoOo^QgXY90V^52B.YuYb
%P,g)QaDkSN]5h%kOAA)'.BAr>/LP2pT)$;XUKj$ag[ueK;)6Bu<]3p21LK1i!KRtqTGdJa/uK%?fTT45\7HGInFbCN`dG:<E=%@D
%joj7I9TW#=g)nlX<mGlK/B=3YX.<1ilf@A3RfiDKksJiReKQ7bQms%//(+^[X@*l@%;;L&V)T+uX*GIP"/S9)3+%`0mC(A<mZE_s
%C\.lf4C(8be8l!=Ulc"uSI"3JZq*Yk5CAY*]mRM(R1o)LgLomHJ_J"A`&o85H>u`DhPR2P;""aHQDL\o8i<a8h#OBN,C"OI]pcL)
%Kk#:W$/eY6U?DTDN`hXE]53R6_D#?Q(YRa`O1$kZ;d'Ii.W9)+*$%<RQFt(M<TU+cE.k<'f.@mGN!PVS=(,olDl<fJR(A0]7G3Q]
%Ae]6c\*GdRZYtU;V''QQ)AdqIiT.jceX-@?YDesP?s`+X+)FVQ482:L"Z#mmM9[+#1IPG`m)>?3D^]VJE#QVaQWA=sQW;?[:&mCQ
%j/r&IBC#)gZh4UcCWDS%=OdZ;ZMpM!P!X8[,QrTfpOc?WM!O)3,IU'100&fIQT_`D(;U/3X%o>0aD2J5oX$X7_sk-3:>;Z)>p,5X
%j2n&FLC8=[Y`4A2G^Xu*Sojn_I68@>`]J?eJ%DZT;G:.KVZ1C(Ub(uUqP!b2`X)_Q+(eVF1_X/UU47SuEW:>1a[d"B(c'UJ]Re!$
%ns3uq'!Xb"P[2"_^&eFas0uT]/n*:J=4HONeSJ=W(K^>b]eo;&YoHi1bUMn_ISlX`=6SZZ)?`X-9U[5Dmk@MS\=QN/&W\]cP3XTA
%=(]L3nXeb.P>WKK\NE%LeT=G'$$'??BJt*THgWHAU+OUQP5V5HD1V/:pt(f.DAsN47A+_%_Yn"?fIGS3k.>Dl2XG+[E=un`N;mo5
%aInUra<46P"fo/5`qLM7ooa57?;:,)@]6*V4^8.iWg_AO^m;>j$dTSs9X7UL[e''AN9`JSW"j(aT"A5D5-1LWTAk>`07Q-8,Akn\
%r;;!N?oG;<fi=^\8.0018AtAie:s_N09#;_"<d3JfP1egphVQTLK-/7WCrJP$/OaR%s,D/9/TEF\U=aQ0i][/>_V?15n<cd7#"t^
%SbBC\_o&p1)]?)urh9cS,)&#sXQ+nB*]HD`d&G50Ap#=sM4>PtEuUqU5$badat'SB3BfWj-"gHT\BubGJk3;/Xb,AOq&?;bHAmVn
%4_@?.JLM7L\MS).Th40IU^tb==(hm:jW$G3N2,AW1N#`$*Un3\PI69,&qbVLL`@4-WY$rt+sC[*-lt9s*qG46i9\c((AnLPR7ECA
%55b!/]W%qG'enA>4*=Wp0[LE\1qN#eo=?a19#TbN:"P00noDi2?e'-E*]'g:SF-i[j$^aTWGQuB"LRQD8L"`XRs:'=K7L9]I9B6m
%S.es:^8Um.4e>]<SO@]I>[lMMSTII!])Vi5T5fGKP[Uj-HA?Bk/]97cbN(K"_F^bLDHstCO^&.#%!Jk:&/:cb!E=l+EkdhEJY6o3
%QOS4NoDaKC&P5+[OP\E%9;;`nYPo7F?Tm.[Kdia7S&,3/+q0dBN^;O\UjrFN_\DMsr9hg%=)>fig)e=fD$Ok2<M?JF+qc#R-BAC-
%m9R\VnFqg"KH)Mp84_TdBI?)<co$_Zo8TV"ce4A?NNYhfk\nHkkKU3^j<`"[:hVlu*Ga3B972+J>@hdUPjC\l\e2!g])76'V==p*
%&]2,q"37k?L`=>3?esCWO%sMu/066\h'S66Pn_qZAq,3Eg&?6(_:t-ml<>%^C-?#hZ)lQoVY9;0c2S\pLOJ\"Rg492:F@'$GNhV=
%rguqLPZA$P?[OtVlc/E:[+QV1c_mc8h4GOs=p!d6dB2WuO9h-s=)#`Z.ZZsFI*['gS(4ShqG4"Z[F8/O>c.jOoDPbSr4&pL>>_oM
%Il>;F:.($#p$nb%EY]_iGqqUELL/^*p9WOk@sp>a.0g,/bkb6Z&si;]N<S?N?S^9B@tUD?M?5(1/YXLYgtDe;Ki+0_`B;tKo5hGH
%^H8eL_MBDWS@-F510:bI>:e9sAT=RiaJ+BW-n80&T788clo_lR9,aMK/NM`TC<PSqgq#Z%FqIk]pWdZ>Fhinpf+.SKN4;Sa_L-UP
%qXs'@I^m):]ig?4j01*X^799>rTk:gJk=P*9`'Oc2sg^SHAlD,hli3,"4%C?aW_mCGWS`X*^jF&VsXTfL8!k'9'%oDPuooH[R)r>
%&JagXfGPf,>=:2*j,SMaOF#h@%8kQ,&(m"VNoblr>L"HIm,t%Xdj7i7CrmlF.>6197T4A^@Pb-S]g3K]\W]<.E;1p[AT^pZeVsBm
%E\jXn.&6mi3.#BA*&#L"`Mufc!e$1O1P$H&BL!,k@cgeA6JW>rNm+XV;YQEi$D=a;&_H-;Zp](8j@Z&m$HA+?$Auc`CX]c9RmJ^&
%kb,5\4",T'?(2\%:"1Tn_\;nY_;b9$G=r+<;]"TOY7a`(k)$d/bS*8i`NsLaF^_0"VBRgmbM%3S6pZUfR33V?Ki,B>6uYj0fpq=+
%/<U(sGS7jEITGmfDX_sP\iQ?&\cErHkp:*%#i-;W048q$<PLt]:[C6AFDGRcJ[+$<LqKMd<S4*<W;70YB4!5Ud0ToC%nVui\r'0c
%J:+jY!:m\raVq]cNYXPrXO&@h]`Rb!Q^?XcSB>(__#aaLk"N.r6<3#T.?^U:3aq0>\>L(g,\s\k&;%IX+L_NE`C8&ef<'d`ZN:Il
%'A^M'HAONrc<A(=UuS;LFqR:q5eaRWJ,MF3=@tH\"<Fgqmk3=r2CaL3Z962R9PVZW44sS'O+NW1+@H1o=Z=/,5s3L_bWFf2JZjp7
%Lng]G&&.&W<FNUKESdS\_??Sll8DA)'EB4j"#EpX<"bT@-"V+#+b&#T9)`Mqm4(e0ag;)V-%Ml6fgCGO(q3=(4j-UEMIrRRau8/R
%i?`h?b)9Xl4NL)%5`K6lM=Yi]r:g\)LE4<8KFU>76d@<[FN[fcqX,[3O!7.KOo0^DMKNh(i$D1Ao]:tU%Z?ZZDVUQ!H$OD4S#4d(
%A#$",6'^g<lmYqkOM(uV)$?dk6kNi)H+d^aZ/-3;\6ngO,G&l7g6App`%Q4N#j=A)2PBBUL<Lr2a0*k8"l\l[ht`a94RZVtSSY/N
%&4h!12)=NPVmV?lT&ieBH5LGei])WuY\sNB_U'N0_!Mb/@WM)2e,@c%n@0U<F7ZYSTYh'5^gVt]V@A$#nedo##r%bKR3:C5dZ'Y[
%&V)i7,pjb"mojptYQb0GOoCb`ol0=Og7VTA$PJtEr@C\Bp=4_ll`YI8G\dqnQ3]A$0(mR4+S'gKr&f)boo]L+Z^i+qes&u#IT6kP
%f!^R(%?m(n+BO*Z!D<BZIK+,aK0gJik:44-V'+Z^hj.)]QjsQe"6(9(eb=jU^]%1#dBoo5Y.F5+h]%/<'=0(?6(RsiWh'qQgH((a
%R=\nY1S`spXB?pG.>jXSW3q%Z<DT6B-"gk2!CdZDT'MOiT`)SS?S9_TYA/0&RZA&/(V;PXcPN%Gcr]$i/cd2FF@Tu?TJBVbaX<<n
%>$lH@3GGEl>7en@?9F7SPu&-P9.'.^Vlarq^3RGt=cS&\A(qXfq8U%7K9Pat@/"b7]g?bS4W/IFU_NCar?&W@\hjA2MuRrVAK;Wq
%j/!!V;p1o2@!!VAU[QOW0)?>#YFod'[]dQ?\4sn#;Y[(]AZ-ASh?C!,jiUEM70VP/HZD9Wm!l*3E0pU/cm0-=/3E([a\,#P%isME
%I!Ej%C$uSYk6GuBBsjQP`2W#l%-N[;S5`IgnX"heKku6fp+M&<K'RBp'Lr3\#`e,Tp](->71!/QH-XR@NOprqM<O$L7(d#%/uo3t
%$R.9?*Y+5%NNU455"NH&p<cqQ!g<CTHIYC[.L,Xs/JmXGIsm`-c[Dm$+8<\#r;>lDbkq*Bn]O_40(H[.Yl;SPN(T%WL11,J"U[#H
%]t^:,_*'Z)"Y)Kn/f:8MBA*2lVfim#KFC#+Ukh8BSP?<uTj1Pldq5Z/TQcOFaO(E.Gfjjm$%$pPLek'GeYgY9Jj<k)i8beV<.R\Y
%+Y3SF92q)BX+r]#4X&'aP>:ced<#u)84:DRTItU+fg<;1KV#?H0@5dn]G`.4K3FR-4B0e@Hu\7sX>KaKJp(7&[XlNhndC./IVO-E
%4ETp8o1suRi[)63E@]!si#X/<&>HO&)7thKS9\JT2F(4.::n&logso?-n0St[!2OLAj^l!cTH/"]R43Fk@.@)d+mXB'<=;FpHe$`
%fA,TLTTg=TW8],Zb_`ScB<08bU,+M&5S6LE;$V@):SLa5.5/aB'X[A8p;'Yk]0IG1]Lo@@cmlY`oZA4NK=V#48_!\2cG,Y9f8r6n
%[#*5kd[[L3%PH.UOEL#YoGnDFEl!Nr#^0@sLgp;:T@&&F:"#]s;X76kMH24r[/]X?l]%p_@Yguj1ilncRM+q(lQ*'#=pLp*a?mmk
%,ttYP'[Yhta#W0+94/3G`)W\'7taNn]s#3XglAd*>U$qc3#r&H0!j2'mg[+-lW$D']:%HcLjU'+V5ZeV[P;=%\fu^D"hQ4J5E%A-
%MC*OF1"2=FUP2^iEic4J>PG&_8+rRTKpp+`gfsDkM7bUc9:eTb'9oDLTF%+E$(kjfX\OoZ`6DM.q(,l9l(0=udQNiEY-Dc!&h'0/
%6Pb_cE?"H;hG"\39q1*f*[IbJ/lc\i\H1'Ej_eG6A0kAo9&XTAm2K^W$kf5:eoVG]S=d6E*?$Ih^XX:3X08*N)Yn8Y?i&PY*S"l5
%^3Ws3cPRp:Xq^uhaJ3GFY46AP8%hHmpGi<CS?Au!;7Tqm]n<C_eQ0p,E*#,>.Mtl`#\GoijUgsO)Ys?0f%8gB^2-#nl[^EAjRq+"
%.Njs`'*`XE1cH)UX\ViBQ^C_kceCA<8VCt^/lmS;\\'8q(<g38#*k!./h=j6$ja#Wj+ll$<Er**9KKN?n-@@#k/XlPdd1&%p=K'.
%(WSgjSq6e-jMe:GaR(@4J"/UN<3^R:islCtin6B[]&LRA^Ck1tGdq5!hOT>A-?9t%W?"kJf'iHsn5F(J%oGnC\4l=oT(FO57)2?J
%CfLEmi3YVr9BDhBd/3Z,h3hS<fNtb(*L5s%krW%b4s84Fhp8om#cj9LdXNiLo%0b:1DTZ,qZs+%>]17cEc[AchL`\t?BcqP](mUL
%6:4[;D4KZ1?DP)7<I*7EA05S$Z=g+seRS\Db?b9frL1LTAi(FlfZblI4r#p<<GO+d4bc\T#:+Hr@jUYG``g=ff6?ctM>_g4YC$pk
%d@/G&%s`Z@mC*GM>gf44Hl%mZ:k2QrTK5#JLC]ZsTqCYEYNX0<XV!/UhpQX';uTKm(b%Gb,uNhuP4uj?<&n(Hp-FT(c3M?.4!cY)
%F0<<Vk:,Y,5WQ""i)3O211Ocg'IZc*n6;pE=!m>H<(6j#j;0"/f-Ue`2E<+"5CHlR<"dAalmaDLGkIfb&rQCOe"gP')dnA$a3l:#
%Ci,n\gV^'G/olc2\p;5(8(m1*j4[K9Z!OL$4C"V$#1j=Di@9H>kP[-9aG?0iO%D>jMY*Mo&M9g$Y5=C?",$,.D]5Q^MB't+7CY9W
%VQ-G`fhOb*<rg`9s,C,c\>U?VduEiFe-.KsCgm)7h+_SL9d/>9P451gW5uHJGFLcA=T?s79b"f.N,D:.Jj`41F6C_Dhg,6q!^./N
%;%RFOd:ihUCne,YB=1_'hF*Z5`E3FfHr06j64Z@iIt^)RGDNQ6^DpC_%&,(&dsb`LbCUlbV`K(`ZErGk!-tk%_FNR]c3m\Z_)BDT
%o:7ThHSiSl.mp6?;6mGe?,#K'-XB=0:s]V"7'%+pD/Q$Bi>Kr4g_%?i?<Tf7p:MKj(K1MONbu]C2+jJT5M%Pf%UYducHW:Sl+2$6
%cgtZ_/Y4H\RDCC1T.[Y_jkZ;O^#YZ\fLBf#^1\CF%?XDu"<,GDk;0-SdeZ+,'O00ROI[F[@k:q[NLXo]6btOmVg)7Xp?#a7]`Tnh
%_.RW("smbqb5^jP&^SZi4<nVi[d3)MFNO18mb>`do.%En5Ir-8,oPpG0%&*5`,RBVCs1><bS*:DqbfPoRU6FeNQL2*K`-[";60$'
%g1A6g6"P2>[(WIMX]U3/<XQ76<^"j'm)j$G%\5.D8t7TOD$0(1:9P_>Prk5q2-k;agE.D4YEsW8:!-O5eubY%qc0iSrOX\gDgr4/
%4nkfWP(*;#s8:W,pU:\%D]din5.nXYG^oV[rq>=Ls4iD(eSutb4DgQqbOst=R1%Neds&hfcRUVsd8p;>(W.GjT1eiPF^aOIndjb<
%4]P6*V61)LFY0"q[PgW]^:'m"5?om*;_l/+3t@(Q,W5=OV8^GUI.tb!%.!cRRp8@4dRPtZ37;h6%K!MXXl[_R>-h2?CnbB<h,&[d
%R]3K-M%b0YKqSnf_&0%l6`Q-[EpP`[!<8Hk7k[Jc>\D%1>JuM<op'QP)^\LQj4?ds>C+]"";hP^^spT6Z8^4NJL$sd5pKU7hQM<t
%9$?HV"e_ZsPJ_Lkb97PSqu\@KluMH[&`ssR\G#cPeXoX7ftnW)ARA`oKfj\P;+?,=Qhc%iVW74K73$9838nF`05$ZbL?'RkGNgIS
%VO:^oc7l7\$;hD@lVX)=0'C^qo>mDJ#?O>RUtSl/:s)`F9>a'"=u;MH<d3-),D.l4[)"%MD1qAefA>Z&>_Z_0O`MoI>#M(f&W:TF
%f`BjFB+,sn0e,Yqb=T"aR-,F#F9d'+Q2L`Q]CJZd^J7QN\nI>q85P/C\n/ric:TRCr)()tQ+3I,H6aRn!;XeIs)@G!J%Q?+##Z1L
%k&QPbDc8*DA8]!)Cg.Wp-K^54Z8q+7!)ll-3-9"9nJ<>6U8R*J]tFDZ2u/lQmBrE"La3<RXiLlGU1_`i^K`ARj[AY*Zs:E$Yd\Hh
%bkgr/5PK]Ud7Ag5\n(h6e"(kf*>D>]^>kN2n*aY&,O0JblG^l.\"bPi\8bT+_NXh^ap6[\])ek%]=cK9`-*slZbDl'%p4*`>P87n
%Z`DY0i1=tcaEYJ848CdT>Cppe6)H+j<?,M$]Xj!`3eN#uKP`?;kAAYk[7AnM\S]&-D8McTkGkEZl1G=Nqr,V^:;1(AjpcLZL;J=`
%,1b!/ianBUenP0D$-LHLaY4a2LPGg#FS0ca^Gphba[5iZ4'ej.1;t[BgI=0:ha>5*]RuGW8UeC";JC7_Nq.a#NUu"55)1r<E3G(j
%Fi;*5;qA./ADj;2/RlZ&6o!>cj>tL($.8E[0]$k7I/PIcoG*,!^CQ)hKI!)I0XeYBmDY=Z`RTZ8,>plI[UKsk<'AT&)Q?2lZ4'@J
%&L4#f8l$d+pqH,L/Yp.'(I=Nb:SV/r")/M9T^%=:;WM<4%de%+h?.M=foVQ0aHn3\Xhb`L:D+U7KOH];7LHt=@DB"%KS:no6cF9]
%!J<9BQ@-/S%B(($;0>i%dTJ%Y_F;teKNMc97Zk=-.^PsrnRCVOj@9g"4/;QA-I'o`=HaFJTn9aVAR0RjPRF?68.61\.3dAYFd>B]
%K,>`@odDOG:?(:leV:KL-WBht+]4\07C4g83%78tKrAW;EuIn][X,nrqts?3A3un8AL=[TbQ`?S@!36^++05(Rb_,;R,nkUQ4U!l
%2`hfp*,t5YFqRqV<4nkDh"krZUa-5>_lWm\kp]E&UO*O"XQ8F;p@(':.dV,"lK9M"2ISR:3t>UrC;5m/>0#dY?'K0GJ)e0u>Q38V
%s1k_'*2`EqL_&#\!J#XAa_"HaRQT5mcSsQdR[thG4FE7EU:+u^TOB"WCBr"3Gb$t_;L4doRn-nWWeF,/4,QFOI(I]pJ$+r]VAE>2
%AVpf3/r'1J?!Pu>&YjTQAiC1+q/_A1f^$LIF_qDfK"\E=Mkf,?#eFpgRtT(TD5lM1c1W/X4ZMl)r+DpTYGiQe\ACA&16@@RqR=(/
%\%Shh2:atWg<GLr7Zn<]]hRiLqrX"`Xsk16BA2=<2S4%i54#kMLjo']F`-sYZKI8fc."48T?ilR><hXZ5D_W3XET/U-4dmV4Ds';
%h`i.\+qOTM^Pd@%FZqt&Q"fQm(\@1uqL7arlG/O]!CrH(;;tb=6:hI.X3RPI.\iT7@&LAKrRIL6.84"sqkS.(+Pt6fONLN$JT[$u
%XEg]Hg1C\&nd;Hk[!$m03ZLNJK3rMl4>Wn/%D@otF;eaI/0fkT9Ks4mC*'G6AouRdq][o3+e+lL\6Xs1jf0Z6p*MlJ86J%S&u]fa
%Nhc!^&s[#GZ"%dDF\i<("/)plNLnQ3S0k;(l]Pr#P:J0W3CYS@690Aj^aPTEl&@04C#=!>6"X!6#g?i2A*!N<7-u4&?nuQM-U2s2
%6$a*ak>cX[5"H"<_&FiKW4ppd.(75Tp@5$%<%n.C-LqfPKDG/7B%V7hhOa9\3d'mWb'R!\V,^AI?X>`Sdjj)oe`>#";/Fu;5=(([
%GHMgs(LrrYmVKj:eC1Bcn-"CJTFb%DcPq;8Silh6Wl)'8Xet*6P_c/4ph=W5l9hQ$9;hKo!E%"pbFF77gji"ret!VU]0m=#.QqKA
%K&%bFgajqfT)05%Vu*9oeGRZ,S-*=MDt^Mdn"Wc\GB/dgHF5seA.X)cG$$W$9nUX8ZL3"sf'&l2=L\/#n3FVdPXTl]kU)IN:-lPa
%(Z');1LTR[I2ZdU!a[rjH2"/>4c[Gf`q,@5lmb[!>uFP[lM?7gZi."&=T)X5lq<"QLu8rln.uPSZjK_5hSb;JNBkI0c-Wd<E"&?l
%Y5$5Yb.7GE/a1\5!i"%hA]4rGGmkg#O$,^b=9*2<=1h2\U8T@rq!tqt)3AhCa*i'<K*(Ls1_c+Z08%OV1KA)]rr$]5jbOZO,[3dm
%4&^p"O*);=,9$=$+o:GqW-BTUk@9K)h8\0MY,-NfAaBee\*l!bFE429'AM8PcLmlG[;QD]>he%%ekrfDE,]a(P8&-p*Sd;#Fn+09
%7B-.@!M>,8>iIM$m6M:rg!PPg^$7cK,1qi_>`:oN"*&)n?\kZJ,#4t$i%rOZ/Li#jgt5.bc4Km*MjO+R"_QdB;1m?;:[nZ=\c6>h
%beZR;7Go@.-n%G[!],'.Nd_rGW0'W4rQS'eTSD><6j])!;G%d!7nMd<Rkie'5p<6ph,Gi!iWO0gP^Y5W^1G?E+3#?o780<YWgj!`
%/A]Ad`W!T;[HVtOQV!3ACHhVAW->1JFdjZ6Xs'oI/6tfEI2etR<4PT'[TYL@<;Egu-Vj77G7)V:9FA,pbp9^kFh9r95*CC(O\je?
%S'iddG(!\^gPmnA7=3-oG-B]fFN1[Kr'JTXY-PIIY7aeY;nHG_[P!pmW?YLa.!#?,gKiTC]*\&#rZcuB])dND[>6!@6ZnhBhmO`Q
%+TTOfLWWj+$I0u4<R@fDK;q#?`N"-deLs9uk+\_Dh`j=/&J_miWB_$\Zl5(\/B!@81L.::6r<BOG4F*47MP]2h\JQ+VsUBJnmG0#
%gO>U'JKS%%h4J.HH.5L]JkGrD9*j!H4^,^H,dol_ME;?#5CSGiP7LQ0;@'Im-4+,Y5IsY@WR"oS5IiA8So4spku8BD:*608p-JJ+
%bV3/2,X`X84V_\]`'J0l@H)[+7]2t(88-K@Ek5*b`VJtYpm2f9!<PC<`1,DF0*d-b$T@$KGN\kfm31Nn5it5sEEq?a6QTu4&`3)(
%\/pC*7:q`2%9r\'$Ljt=A-g]PE/3N.FI%gjP[2gDF?%Kf@9?jA%R(_mK@V]Z%r?q/$_L,Gl[O2LSH+ebMUR\`Qe*$6\CtJ9SL6K_
%R:I,easMLu%eOi8)qcQT6\*C0id:"b/N)7*_PQJn89%$ccRk#%=Dl>hZ4&EeDc6sp3*`j?J@72I3e\/-KLUB(4gpE\c(.p0!U%HN
%E%'.(<VNHIKn>4:'EJCq&c67q67E>b(.q/g[/sE8OVl&/8YJM]M47:Y<?I2#O:qMN**g`gQ[j(tQC">tUMM!toL$Xl;k1++^A)D&
%lULLcQ/2D:qe\g=T5<81d94g!BscJn;:'L?Eu!Udct>\XZm<>q2iZ!R#7G"PTW"NG(>+7'3,nk%4R-Roq$.kSpYW1U?o70<Rcdh/
%2,?BV$>jOj=p?sg>*dTC`asY%Bq[b,EV3F[\Oml$MCfnic-r<4:hb<`./bhbb0o!<nN^5j2gp-32j3(QIk[loo&!r*LH]XSF`5R+
%F<+d3_tODn6QmPA3T#>NRF>"Tnk2L.isV*Z?O$s]T_'=rM#Zq-Eq'#d.0g0*\TA\q:'>k:K,<rP==<)M](P@S,#E^>9!W>9l;XWR
%#:_%ID68\!-cMFd8_[WO+-];UQYR/8#cH@nNP0Vb5$OK&]7oQZ#bR^U?QU/-+)nMHUJ3D=U=tp6MD*,oZ)0@)[GpXQYjlm#FW;&T
%V?,;HD_16fRG\5goB^[,q*VcEKn9-U1pLI)7oMV&I[;91qFJ%VM!958dTs0OO;@:_E,*44chkUrJ%!ldmTnTN>.^sk[bl3LN;ZWB
%O5dWE:9ZIo9!cA/Lf<Gc42D,k`BKeV-J/<U*I]HP"tm,rF7_,a?auFUlmhqfPedpL@#$VoMXQuE;LG'JH,"Kb91dYA$)<UX>>Y*M
%l)BQ"N'XSuY![LO1%E4H%j`1*Fh#)F)heJ,h:>!^U(o#.dQfF,drDVUm?)!l!sa]h(g&^SaMYt!&:8SMAnS^r'b--!\UMWJHk_]C
%2/Dr?r[P<3K%(uKkNtp6e<>Yr=isT`%R'.67$4e3<L?e,8Yi1X8jPRHT=qt)r?Ab3WTY$uW`2>?]t;9!_i8V!npYWXXVPGfS$A!F
%)PFgNNBeZg@H58pmijf6qejH6\$)>Nra75(#IDACSK7qJWO<&#nm:IX<Mkn_CW4:MU&!l8Zq^)G&bbI3a>j6)-$kG_X("I<<6]Jk
%K[;6erEcp:VTrGN;4Ah7>2)5B)M)LK3=*N=/=V'6:ko`4?)NSg:^ed9aW@!$<BX,:2&X-XqP.BS3adKnRAf+*<Z/]EV+_T/8)9$O
%d*"N3k/ffjNdO)2_qq&SMAU17$ogS;Rmj,,g2e3?bqs)IFWi%@O^]Ba<b=]q00>,?^9K".^T%!2KPAIqXg0+0/0qGcR1f4NX5T[?
%H_d9f\m,pOKtBOOd(-.Ug^$e5fsnHPQk531!48WQXJ[f:.A'"MPE6+n3_u9`j*W)=g5q5Z%rK:f[febQ5t!QTAq\lcOM^=AG'ncZ
%=C;-T&,k9O)GUuQ#1=:Sm.5V"8;d3QV,6Uf;,iFZM2"gdS100#o[PY9$6`+YN#lp`WH8bN3S,4[Iu7^&+LSM3"s\Qrm$if[&snIi
%c\jUTL2l!."B$,57>h3cs1)B69t2V:L'.iI'c5P@/!()OSr@_q`*L/NTq"\1CgGuB6J2qdQKs!%.(9B@^XGX<JP!sR>=?`dEPH-E
%Yg_0*$2-7-96\Oi1kM3kREfO>O$[MTNJaUP!AFL4GgIGD'=SR66lW/BZ:YI\<:W<!"Ff!Q2N`TPQrDR"Ks=[GGe<L[F5t+\%.PI_
%_u0dSo-T/9ZeuV25Ao@fhqof0,9<QufoB[1@UeW6>@e?mqMqpZ8&jo:P,m$^'rGMifq,??D@fXl>:,WYB'YY:$ltgU$K4-=YnZTd
%)4ZD$<&EMb)s2t1>ocli`3</DW6.]-6UmmsRdD8n\jq._Z/`eh<(lOt,B&Wi&fppuOCe["9OmK5:/.PjB(79`KgC>"_F1g\aP8+g
%Q2=Z&B5ru%muC-aPa(hu>BE!]!Sd.I7(#UkjYqDA@9PldVS\#Cc'u(,XYEP*U%YK8-_u2=nXm"]dO?#u0mlJ!Rqp'2f-#R?;r_Ae
%4\IUsM?__JPJ)CIVoLoU:AoO&&d*#Oo>E1r2B"nqc,WGu*?RtupY_88nR&=Vp)QQC1q#DK_/-'G'PFR@F(pYY<FkD@I>CQ5.Ba_.
%'<;74EbN0CPGDub))0Omk9ff9Pb)tfG[XT\T^3@t[cMU4+n7/<Uo<+-gON!02!HWM5lBH^H4ZfSi`*EN$ZqJLCA0@K,(5\(PmqHV
%VK]UK27aI>-RlI*9dV&.gWc^_gcYU=,!ZNCI?<,0fdd\^^F@WV@j^I\#:LW\4$BNm//<P_*Fld5D]?jfD!<3SEo[0nja;Krm:J`&
%ncS5dW]e>Cdt<<7Bk_DqG@:U0icipo80&#jS0XYmYuq@,-'&0gW>$Wd@!^eKaE`E[0ub"Eo&ueji"q8i_.C7YP2IQU%QZTJ8Gj2;
%)]g$S?V*K4I5Z-j^+\e`oI=kSIjIO=B3&"ds6:AQ2Cai@$eoGE6]eTH8fL96V@rWmJ1D?10hLp;lo$pjcMGQ;HX=:d'<-&m![r5k
%?j-uU]rCkGZkQ#*WFg^`N^hhcgFE<s/Ss5i>&(73rZ(g#m"t=nKTrGtB"EUNm@[:mlh_rZj#q[DpK=L):.1u.-](`(c;2N.QO",:
%M1S*g<JT.JBi7W@2`4kZT&nKJ@"r9.)&`pP;l>`)d?c2])BtB)(gjk2_`-4IZ)<5]]A+6'X`oT@409nt@(24M%?<NV7Jje/=O*JR
%XfR\8GbEfG^/fo`$#rRTKY=,t^lQNeej6(Q.SO#PqT0/m)8BMhJhBtEPD"e,?u*WK4Gg;0ldEuF;@"4X.NM;N';\OO6a&B[9u4lV
%@9V:U<)0\IQpE:sV(oG-4(:`RTQD:rs%<SBr;Y<TE0Z*_cd:_;!h2IHb3XL!W:d"\B';,7e#2"ihq[k(Qj+F^dA&5HN=b]C3_t<M
%OaRO7!ej)gqI,,7l-$Lfjg@NcY7=O:`T&&3@Z=T!#4U9"Q9ur3gBZZNI?OoERXOq;pbpMY[pA/43qhme!'hbUCAk[K>WKr$+LN8%
%3S?F>Q4;3Q,A9.fkcesZ0I<"&d>\6MG8-umBVPpFS0$9NI$(@2)2_YSVs\\>9<lc@gp"hD^+k9!7^^5,Xalh[2;UAoKJ:kk6g\_H
%.o`u\%LbW%R7rT(2U!nQb?N$+NGW-_`Jt"n>?ESlJAA_koS`@B\l;<0S&Fp[,@(\R#bZ^>ASN\TclA4bepopuARE%g**t??BVh8a
%qGs.r>62^eg,A'9^.8_DK^#LPoB7aY6rMdNMXQtq*:;BA91K\<h)6!'39#N5WL+GFl_?VGPh>Q(mEM01"+?7>2^tQUf5r89;48G)
%Ui^i]IbDIQl4e?d*K'NQkOhcKGUV5L:Ie-G)p(EHARt>^%A-c\Udk_/f$3T=]+fU_DuK14D3K;0k%Xi^9(W=e9u6C@,A\GK,$Ai"
%PB%n(>h,Z1H.qu1141p`&?`N#+uBFp5faW0[AU,,DY8)N6%U&YDgd"q--A1#9kI;UoX=2mAGU]1R$'%6,L`G;47[b!%*FML_9VA+
%T(cWYKBN7b/4^7R=6=',n'uBDJa+Y+BbJYD!O^OD-8."\nT\")BJS>4Kf[(0P(Kte1[l__r30f09c0++X4p0e5Z4pnR\1kphfTYT
%S]cnXmc<GTgGr4m0T'UX+Wmd3YFEmqDNPAO8L1N$n5.]Wj/E5]:82;_V<\ET2rZU\NB"FbJoQ\jJPUUL4Sa:;#F/ll]CGb#1._`e
%+Z&)-0t%#hZQ;2bOLr`15Xt2AC@Bt^Hs)U`^\<<T%f+Nq"I4Yt4W^N1,S1Y\&#,bh7$1HXk$cSlDWuuRp9NR2NsLe>k/fg@q^?6Y
%l7Qi7h`T[W4T&Z#DRPjI'KEm;e&W3*a[enqqh^$7l>"Z[AEdR!eopFT!W<X<n@S)`rEb-;:CG<@FB<f\d+k-).o99ZBGhilnMgD=
%ItB"iA4E`E!_"bLMtZ%P)]V!j7/<=T!aLK#KLE,[RkTOMn(A?N,*7EA)o/Z.gQ^,I!XLd5?9W&Bqk8i^3%,.%+C7kE&\9^c$=5rN
%$"GR>[l6Z1^5hb,77@/>:(@e2?lGU_+p`$aI(u($b2R#JMu0J`mO+aEbsZ):N>])9':n[Q"O(0YF2WiqE#><^fs_W*#*Z*^;Z5T%
%FbZ@kn477/U$M-pp58UuqrRRoGi<8RXI,$"<ZkV0+fL?-h(pFnr31;Q2Unrm]07sL@j^(D;_.[G&5Y3P&df&,5&kXAA4+82C=ZT8
%XF+7ugTOCQiQ!F0,S!&)mJoc](S)i/IORDSIcnancU8H!d+e,naePW2LT9S*,!ig6/SsEYT;@(QV"FhBQ'VSH%7SX.3h^X`!fBPF
%rLgjO+oAhR'A046*,#I:Oo4A-:JaGmT8U"kU^@eTDs;GB\L"31K36p'/:Y%7pD[]=\6UO/_Gj'N=1:p>+oai@]XR@!RbqDsO!CdV
%en0/GH=psC*mFdSMXISRP^14Y;H)nEY+N4ki`*<c>[.q=(>iKd_&a<Xgt@0E*=[$@n:;n`bC7P[^OBF.X<(^Oq:h:kJXZ[^!8H-u
%+0GSi3.0't5!KIZZ<e[DZ2+.b5ssLmn.&$BD$R7"T)b*h^<(1UOkuMm/11b$CeD,F[-]`$Vp)og%;",nd)M,ECh=m)UWt77kQ*L%
%6(0sijClM3gPl0nkfi`.S_<nQ(Yde]X6B-6?ToA1S@30Frtc0b?lAiTIYNQTs'W-rp3X"Tl'THTkp/]BB$$G.hk-a`Zj'G33)F"f
%"_W)5XA@UID+^!'JmM):r$7@bN((HcK>L=7n47NYC;36IOLM*Y7)q?:O:khKC[^*uL2P?!Tp(u,c./Z6]C!r#7q?Q*rLs/cM\1be
%Y-u+=C90Uh^V1W8q`I0ZEAaI'r!ocIhtupPk2qS@qJjK5[@P<<#5Lgk:N;ncKchcr4:\?ePV0u^E:FtK?>3%Co5fggG%8fN@<8u*
%CQG2HmSTRO6.cT!&$6!?Z$>Qq&8Csr?Z1;\(lPMYgQ;@C/@NjYJ*Ap\m`g/>IsnR65LQ0*j_p,G"=Yo"j>]PlojXE'm44#e^%9YG
%,fMj_%3YoU_,k4Ke5SoKTE&aG.FUqO%lF/Hfd9V87OMKnXK)D;gam:DTe!Xq'neM)pE5ob^Upi_0SG5DSFsKVolCd`(=)^ZpBU0)
%Z8_OWG^fH7BeRYSr&8]riCA>tXafAgKW$611Hn$@7G9;FR_n2-=#ea^8'/_eq$3n]r[RA=j`Zb_\@u8$XJEZEqV'o8%lk@Bl^L;#
%LBQ_&@CAC5\mm%,0p8mWb1t^'BQS=6l!L7iF]9.P]fFh0])n%3h&MS:pG#u]DgUn\:q"s3+3h"(*l.looC]NC,Atp?Q0.+_CcJ5?
%m"-K8qWG"O]Nt`?L;:cBGr^K?^->7Hi2*IuARJ]Nfh=)]4Rr)e8b"6DAs9n'?#g=a99(5oH]oqH'*]t=CP"pjN7ORg7jR#V2!PS=
%WO:Z.1Cq/-qjl$]gMP8"N6,c"rNZ:sX7:*QEJFDkr2__]&nbN4%c8A<)?CX"1?'Z78)apa;eV.#e[-#P(i&^)GaGjY846p/H@lHq
%7Mg2Cbgu%j8Q?N4f.KlNb;s*pj9eKMA!m_tdn-u*p*:QiI.NI"X-?"kJls.`,7&dWj?E6W#c(GW?Z&E,L1E.7_,u0^jVS:NJN`".
%0?<Q3gYjs2.d>bRE&@tI4T&_s9bZnd<N9/]]"o[`+BDQE+/FLi9FB'P)j.$-fQg3SoLc?bSOd$Fl93#WThqpe1et=ZBnWU?<OYkq
%OC58V@0`hjG[f=Vg662lP:@ZMgr*8Y<DT`NF`k'iHS9Tj89Ho,hXTOATT%Gc(sT8!*prnUH%]ON4b=EeE.6qo9^#&4dWnHta%t;f
%@lP.+*QQ_)7qp>pIo0CGLBan+[O3I;U-,Qu9dFQjbR3dK@s:\0?!9NM0190a(?2@UB^J)BT=GJ1!o5lBm`bb]:ugTEi=ahRf=0M+
%H5NifWV;2=n#Q!!S;s!Ck@]M=H9)ZVnKV,1V_e>5ebBWC3Oe^j'8Sti2$45&M3gHf#&mQXi'b@td2L]bUm709)@A_qNke!tT1MS^
%#"POUIFS(h.uFY;R$%`,WM$g+;*+cnT#&?g#Sm6K.b]$;k!8nI'Iuc!_<]2nn`abiAgN&SrJ(f37AE4H[1VAbKqOSp)^^])E(Zin
%8^+TGbiX,"1OjK(\<p[S/>ZuZ+Om$(@)@]O?Q8nJjO]2:24*DNKYcbSf2e.A_ln!=I^TmJW)?a.)'10h&H"3?MjAq\bmP/5dIYbW
%dk>p^,s>h'Tu>coG<?"knW500mXQF$1r];@G1$e>$F_noEi0).Bk#&+a*#=\K!n<UU8dP2;NV5Yf&hSeMbacb!>:(&oH7`[>0FUc
%T^ih,4R5<`cH@::Ri28N!Q]/!T)\n57Z1!Z]7["K\i)!rOa*PZ6(!+S"<Gpb<8OnhIN-_$M""\e]##M=BQ4a[Gm#VkeI@1VP%doG
%$bYjD6%ZgZ:+<<$H?cFc.ea[_8a,b<MQaEp!kWe@KMgZ)N6`f_D\jgH/"`3@Fr@PW1TSO/SR^Wl^LH(if\\^JmUldXTf6^9(>+:d
%GIE-(`/XK-/!*nRP'Z7jbU*B!]*o8k,KK,.$ll$=$2%VtPgd3Ln\C?@BVPP3Kp<k&(bkS^>TpO-/`^mo&Ytj)hO8tD90a-uLrVpJ
%<Cs6hWf,p1\?P_,@usC=d9_@*/9MYXniV`M-IHV8J2K2B&RX6MHLZk).2hl7OXa=(>f-1B(E^]I3@+*]9Zs%H%jC`nVVFDD!?tU5
%qg\(qV9#,:/P\0X^C+oWTq^U%GrCcXOn0tFjA2uh8TlNQ!n8C9N\d=?"K6p"UEVa>.*uH`5-@Dj-70#t3>J653t1PO]F&@)S;-04
%WY8NN]13YNAg0p,lYo(s!\-eBqB73u4ta6:OuLE3>t@5i+V;!*nX+@;D2q!(KO7L;<<>kd36C)lZJi1.Dc,G4-L?e1Fl'DhDQp;T
%IW!?cl/cq<-it9ZE^f"X0+r&iG%80lU`IrEEbf\75QKj>$lKNfcr7H/aL^%-DbeBjbtf^W"imOt!)%EOYp5l9:[\2cp"#kSa#WI1
%$&<#GKFio8.WIO-KupWV,dRUN^7UkAp\^?!$>_=sM%!a'@)7f]dG*',LE],:XU_i2/-RNc<5BGE4Y,A>\L?joI`X3o:Ja%Y`7("i
%n_9>%l#a;WH<C^Xa#^rTI$?i0!HotS<8E`PO;'Ik_7M*O!b<)F@7B2QlY\N>^7H2Y^Bl-jLbG)57C*0P,nt+C?u92sX>gb4_mu+]
%F8Pjai/m*O<=54'a0>?"G5esuX:qX)R*PIM^^A<H<4/-tUVL**%T'hT!@P',;S*WsHiPK$:V0t"gX-5V18TSA#=%j6$IF9Pa`blX
%F/LR"4WMPb:'[["h.c'\m-MnpMKJ2gB->#W9J-n!a$t8+Eo2kK8oYi<`X0sDN#q"Dj34d7Ff'RfcJ%o%8mo]0p*Uq*ZKp]JiQ.Ou
%!@uTa@qLcG[8!1q/#/XH:cX\UcW.+V\H#&TCLQQ@a`m!OpW3qlgRolo\&T]@,A_%bUn&BCq@%.!_-Rr![tJdCI/>8EGU3!Dj..&*
%P+-QZ!_h"Y0sTXl\U523"/OjHAG]p-D!NGt?S*:F!h!d$KZ[APckhdRlZ3Dss/m2Q3sgoX?T1j&_f-0a-ia-5SCY544b42D,dqq;
%4l=2#o2LT$:Pm*KCV!L3^V`&icg"fcSDoOLd<'1IbYtcI:Y-71a:u[a`.oOQpbk9-=?`_j4@[_\mB'1!gq.kF/q)GS-'<cd/T10+
%aAp5(>t#9ZUfL"*O;(sL7OWd\$V?]K2%ch:8B2+59)24-Jlr)9G!S^*F-fGJa\t:<WJ06\[aqtb'L>^]DC9Gt?%:J<<iatuEmB<c
%Sk9/0+\8X]cb#2]U_X)QfQI4j?s7r!p*%n!5aPR;eJKmb4$si@(lX]SJM>F9nX&XciRjeko9H+@/3r9VR<8GNYfl1u+JDj2k0RJ#
%V&l6M#6@-eor[UKZM!b_L$XZ/::6`>i39/4\s">r#0<i1f!KS9$t#X*8M1P<<Q`GG3R2l9A_@qm?pt5UHY>PS&KQbbPJqD,^MJ1j
%+U\GVcD;4r*9H5)7SAlLRKZto0#OVQHkV;Y$oCg0A9M`96a<5l#*_W6Fki(A]hY_-S9E'uU]@t,>aE,:+Bs$;#%7M[7S9r_a%0[*
%Rl=eK'b[@D/X&VX"&p:64m]!fXu^Tg64X*VZR"/LJOtGDe.M1B)G30g?RE#Q%Saki:(/.D'R27e%(reXa&df;'3o);QN\G'M3')H
%OoBr-C^(GBN(m8J9JN15%;[Eu8F4)s#3p&`&eArh^6p/,jJ3<5SM3i)b."C7d*V1q$%*]]#'.f(?Y\C./MnnnZ3EiQ.W$`JKFa.(
%H@b$t]H$a7G*K.).;1*)E-X=-ca:t.7IU?REW%/rA-Hp$%$]TUGfEpVcSm6mh'lahS6Sn'5;(+Rre<M-fg[)u8=L;9@#6qiP_J24
%E>k$e4H1!18(\sbM-J$Ld5I??-XBRpZSZIsB.F-c!WW4tUWVI+f!L;#9K;qpgFpGd@%(:V>9*dH=aCqYn`&2i9R]t$o3@Z92M#q?
%m-/k$RgsT8h7R$VRVu>7ksd>RSc4ohH7'?[rt]MVIhR6C;qYbe*%II\kQ)rIK3l6qVeG\=;qGVoQoL[<!N#I_jXj4I%_e%Md4h5)
%jSR-G'T5%sc(hdm7AB%%5E4Yk`=(prfA\_d)8C*>WC]s$i<1k#Urg-G@MlDqXZ8t"NE'+Qnt:k?;>Zq)a:OdLM+mS$hsU-b-FAc>
%\l=tC,+E<5KVkE?nXq:\`Aad2AoHZfkLNj=DlY<0pf:!UqKmfPSo&f^K,H`V0[)VYlo18se+o/t;5YbfR^U5:`aBA<QjA5T+kf+k
%cEDS7I1^pAf,om/`f8,8]PCsp?%^n?#NqkH^XY?(9msjEl/1dEkq+[0joX5ThqY3Gs-BLdXZe`^:-k03U44*#mntY42:9t\;e.^9
%kDAf0GBm$#<lBW"PA[o+Kh/H)+Q0eBZ-a<-Kr"T:\2.Vc&^dFB[g0K@^\U10\V!@12:]B"rblAs1@1aePuCOe&ME2i5$"=^R&p"q
%GV.^Q<V.Kqc2-EA;]fsu>J6cg/CgT6il'Bcr.-RV$LU_c3(?_'4_8r32kN/>PjG8d/Af?ElR"8/8r_KLm1?Ip7X%Z[^0JQX><*!R
%<h__6^OC6pb--7Ld!bb"_,j$dZ[q3LjkOfNM"7IS]"kW5n?Oi^G\(-2F:*$AMX3"Ds6@=RBUA#`Kl"S,l$-@"89FFu,/l)/3mb$5
%[0MVQdVgR6$X*]sJD72_l?bfgSsMsn4oba[8a5)"PEAg0]m[D3l/fSHs65*diI_m9rC=&QdrPEI^O*NjZTeK0/d4pQaBh,Qq"pmO
%gAU%B?($>JjL"hCc="*4"`=q$:!0ss.aX!s4.9c205%S2=\m08AK&jaSp[E,(u07>R=%B/1J/lj`ajOJ9H<t@hL<6>DVOV:rpTLI
%O+WWpLQ6*$3.nX<:F+k>msP80:\O6Arac&kCY`n9e!QT%7Rou*=.6l''W%dOT=SXS<4=,l431+Zj(61'>DbN3lD_&_Hi*2SijOOo
%/Phj3\NAJ\L]H]S]L./(G(BB,VCuH2FG:jknCFk*'#cj+5ZVHhSpdp?>f;J9:B!i"XZB_hJ'cF@Xq7r.Z6#+41cGeH>]%VtB9-[f
%K26UV(U'c`7=^)XZ-Ap=4@dSi.qq.-'$%UaT\@%'S-.r0E,hhg("OM`Z3.CXC1XI<"4E:q+'37=_B_OhOI^08!LT:/B=bF?e7GEf
%"snuXPUHI1:K$b)b'XVdLlG=93E__I,iC8=2%e-9p#MZW7$`AY]sPc#$E1c&l/=r4M1:M^<%Qsnk0Z<2`Mj,^-%PZlGR@EgNoSTB
%5U2`9`'P%La;HFJTNAgWX9Wr)aEkDV8jTh9:anLDE6H%L=ZNrbj5-2E^r!)1@>JMXF$(es#m9poUSCuO.VXaE+WdL0;RF8j<PXKC
%nISP5J'O@L_<jLs4eYk.>8-0e''2F-7?33qQ;jER5/j9m!?JIQK$u(3Weq`F&8Q#/N>q*b^fhFa2tuMI0n9\d,pI(:G\ujn+CXLh
%$^$S4$!dsgo6`?[U.OZ#:rWX7(_J<N;65\#cdO'lP]`,K>r2]0:lo[q9Tll9baM9`48X(A$OL7LeeEh*\W302g;U6r+:#@l-et#O
%Ts)`A7qbF\g3K$-4:#(l<T)So^hsrRiRD,_9a2`+]f;h<geSV]nHZ;G$>+a:&6N_^-sELpVGKVDn4d@lj*^Doah*YU5Nion=VF3$
%WU2)MM>WlEOsDPds/?bq#?Lje22q8FPW:/fp2L.PON>gX"KLH$)B8b(L*WW'G^$PYMH6WgH?8Y-M\HR\>`KQq:k4333+uLqBYE59
%'8X$[#oJO:-^!sTnF(D6*US:'l+r*Y2S#G,ei(!\(X:c`PU>-%oO'&V%?:W9i+aj$2Z_<?ng37kQZ^1t,o!C9VU7=,Rs&tRg4Q>)
%68cp8MTB:r^c\pB5WO])%3P[u_a/0%5r)9DfB*)IVJX$+5#YQ8\Ekb.e$0aSdN'52@-*,l#k!p1A2%8THAX1[!Leun*)gL*:G<gM
%l%Y-@_L=mNRNc\',C3;rfn-McW1*tSTsrFcI1hFbbd's)Hjqu9peb8EF4hT!Ccg9NCcbq8&ZH!(TMHA6YgJ-#MN+Ltm&98FTN$!I
%`3GYti4"n+=S5G?ftui/,(fatS/'sX$%N67GD#saJ=Xi&NYVUMf=i$iW_G:7S%ndM%1lN$0sYbkEVCd'`8H"g*)o8R[CNpUW^">a
%MO"SV=+b1(.8=,_\s@<K5+J[CLgG:QLXm?RE<qF_*X#^&bR%^9YH%kH4^0QM77@+02mfH_d$.T.L+a(>m\fmXC4NoT.p!7_#.+?9
%86HQDH^_f";%eSk^Hs<\P.1<bWiUdW.s<tB.ZPl"5up=NkC\T(,*u42i'Sr$C6sQcmcC,]+K5[&Ft7T_T50Ru!?pjm;!N'qgafZn
%=XTh9i@Jp<]fYs4&+B0fC)`OqDHqti'Ar!?XtK]q1dM0Z1Oum-R*f5<c^Ned!AIPi&EN,V`@liS;E9=QTt-o.+q:c.ik)_AaYgl3
%ohf;lFV]2;WhL&^S0I&<mF/40&K!1;IPF8d'kH:B!1F?tC=Jd\^N0:e^lesmE6U]4EaG9gWkrUMiL>0UJIC`j&^4-a6WUl-KDR<n
%)?PcTZ"jub3KVK`"TE.CFD92kc55_pf-uNVlREtM@-_FoCdm'"4o!8d%_5D`69hSF4PM)'B1RZ`m8[6bbWNUsD6%Kl#p;a-(V*56
%2^d]Jj2rAQR_<)6&dn7Tf=NKap3MhC,\]gMB\RO*eScY;Y$<?8%TjXb2Kj]Rp\,@O8_)En!H!OXj=V(kfRUebOBO<JBRj,;*t5(\
%JUec0O:d?m.<>\/IqU0]0-/;#99J@;%i5QJTPaE%\D!N?[o==ijp:=^)JB["2M?$9V79A[*QOCO#)6sAWYdT[E7&,;"VT=^E4OFI
%9mQgBffjb$Y+6)c<42Sf#Y'1:P$bn(<$"FHMZs^0!#Y>`p0_SZ&-A+Ei[Kcc7<e'>p-&_/5F'mW%d9>91)^;d$HW(UMa06>]&$_[
%`MI(*@9^#('6Pc<8\Au?ifK<\oN55MR\k(T%`?u%M+$Bl>XR_DD]ffN-OS#/p'0`[At@nB5T;c)6gKifKqL`nIX2F'f8_NMCXhVr
%>0_:k:,^ah3s<r6F/?08K[YN(36*c/$LH!BhQ2t/b#=7kfP<c#->KjtI3u8*SjZ$)p=0%r;AcY3D$im'RW6*iVG7k*_+hrTad\?6
%Ch/<hg6AGZhOZ(tY&Tb=CWJ#0c7s(2N^8B<V[g-\Z6.<BgZOGL=Td5J`mttA&bEo&8o+W3f-[Imh;C>)NE2kF\_9.66P+9hl4)+h
%o^p_]QaoDKJGpY(BX<Fi\W%3mLM:MU]"AOC*N.M?97!"GOB%Ff4gR\$;.@S==^8[8hg,=AE"WNk_%l(&fBL\\B-\O6GoW/7q"^Z$
%R('N@F<k8Y&Gg.q1hZJpCLf>SVV5*k42`Pb5#EQ9-GBQE<m.p\Ac(Hj#d^OKP7&a8#J6^'^V(CkZc:F2OA5q+0]AuTXrcq;ZgG+O
%ZICq,7U.O=??"q'Nuk;#c'`T7,8%3oBbh^i6KLZa"X0=?"J&p<`lP,Zr-S".OGZr.MTDeh[UZYoB:J#K@n#C<C;N#<`rrhgUuQ":
%Z"/Uj^*`^]1>[?l9ub9jbL/-bB4fTBQRZI,#YDO8b_>9%qtFuA)`=bJ1qMbJp=&o+I0CWsB?BV54]_bH!lqNZ.')fpG^5)ZBqu@E
%31A';md%="0),%C3FRgpm4PJM@kf4WF<FhJZN2Rt$NTZDah@RIV8s/4?&Ve1U=b7R>/c^05PPo7n$dL;a3hHbA=MA]p*Id"j@aGi
%HX3NYik'he]DE03m'XAZHLfKB>mXGl)6cP.Pl@hP,)]?=8HMTGQ+$!jGA#XOpdaN:bH-C?.Kt)Z\C_bDPZoumIA*0ZOdF,7@QW^C
%\M84P#D'_[a0[s\?(hg#e)H*U5@95G#gHP8ll-MG*:mQ;YrL)m1mIE5mcQ[<Dr)6V"Js9##4\P>4%89n0bp\ESW]<.:h4@"JYuJ0
%)s5l*+5,Y;jpZON/a5*KTHr1B_q\a#YeZ=Q6I<O3(Yr$),OM5]>b-0[Ok-*L;tk_Yc\q6*jLhc]5J%q8,^V]1Ff;BKqPD:*WOrN,
%_V`!8dE"QrYE1K7](;qn)]K?JR@?(CZ:%:".LE2kihD\8*Z/T&/J/CXEP.hpmJc<I:$#ndM`^3EpK/<S8:/s=R3%I1%$>+X#l6PL
%?"C3rL-geL\nk['9c!@2h=8c&okii_DZ+>?4$si]Q_)5CfPZJ<D9<3(Zt\>SKBQP@0qfLP>DKh&m%50_q1oEC'"dLM5q]R2J^s3E
%&'B\Oq%Za,:epFc.Eu1%cn2IrKNHG<q1?"HdV<i!hX%$d!P#B#o8<ul)!Rh]kS\ER1h/>kCpK!R-1!4/&AWB^#^.Yf9$.=2;^BpR
%'3-]DNgp9^Xer?U&6Z/ZOSblu;S?!#++8+WJ%.ks;r/29K)f[EKg]S@ejXFGalaHF+SRQFeM<7sG)VI%9!]tie-#QT%Ztp;Z[@Y"
%4fG*XrN&2+j9[d(P\>e@ZNE_rM@=NuP)CcV`a0cF6uE5+/o)94NbXdmr.A+KikP7h/JEnT\Km.Ur&<+YES+_hF#PPBE,DbO&r@Q4
%<9GA1^KhbDpW5--a5.gj^Z:%P4(Fkt3hiLRCDbWkdkH,\/N6ebLo(aMR(UOc[5Tlm6n('3S5ONbXAUd`/Y'_=hYc0YgdZo&DGk$V
%N`$$A/-Cdrl::+g)WVR0m^Is"Se"ltpRf4C=6_\\4B=C^\HQA5k2[aqp7>`W1d+J2eQqF35BV-ts8R+_[5:F&XlkQkk<9MF=e2Yt
%XPd(M>^Os+!OdHO;r7B^oU5/4=eGLJ&8jL%lpD,h6N3jti&5fUJ2NSGn<V+9Sl'PUOjXu%/iR+N7$7t"Tg?S3B!*St$t.JE<`eEa
%XaAgkg:1lH6rAB6kD:1W\JlPrK?/+t5X_LPT)ll1_OrK]S1?8`8%=JCA4&7NgEg(IUN%=LT3,98^R%:AI.i940g<8A$:0k;;;X"[
%b0W%Q_\h"OD*R_31e/>oXK2B?,D[2lG$`87q,._"mFTC.2]sa8JmofN+#Y/XpG@_hlikBmrCpHbF3^Y*ql.Y*h6etG,o+D\oJC=@
%TJ%s>!umG':gJNcd6)fP0&sFr`a_`T5=`Il[J(8IXDdF[6i"Xrc:Is"aLS&UWjoM/R4+H=[mH<I0%lI'BYOW#*F[q#%aGnQ'\@?\
%;&as1>B!"smE98e2]mL\5s51IH]QB;iZ@/(Z:=.6[s]sMho.M>ae8rLC+`>*g@==p/-IJ<]1sD>gcaTGYP4Mnmk8Yse_!C9n[7Xf
%i-isprqHe\@@cs7*\*LLC?gTS/W\McbG2/qn5f3E%W>\qIjr'l9`%9:QZ1u#0Rk*kahs-g,l#ga?A1TPHAUZ]'<X"VK)\%7<aJ__
%o"]FQN8>Q]TLg@^S2lBMFB*u)^_(8s]K$l#>-c52>?IbX8ocdF%GJOkS\&G)8djT-C_0EC9U&aSU+]76WIp](c)lWAHgM>]A$@n4
%*N60V\>h/p^A-tkpm#]"T3,E)0@V)T^k`>M1\9d=%I3l!R7&l:E;$X.'9:TE4^VHZ*,%B32*5BfV2Geb/W1DcJ%tg(K[Y,uRH1D?
%$FBJ3nb2_.p7%7qNtWjm"n5>mQ,@$Gg&HA>L&KHC;0'=p<os"6^]%,6_s:B2-]=&I-h-/QUeB$i[_HgQ5UQGnf?!M,r190eMXT:1
%NM-*t_f91g\tQ*\N8E_5EH=!DkI>cNP5#M]Vd(V67\%!?^&P=ErcYLr1;CZlH`4-PMN5^Lk:dB!4nY!;JmR:/D86#68;g[W?[@-r
%i!GmF3(M%J%aX(A^Qj7DGre0ZJ]Q@T!q?KZOAG2*-HI_-[4]TF+B1e?Oh5&C+0q)uqV69I_p+lQR,@#)b$?\>IiG(G=s3d/plCbs
%3k+p51dB7[><hl1HEFm7dp%>#PqpSFYJ!i&O63>K)Sc]/-sKdKkpB+L=(!FB$iANLq);28VKa#5dk*-`:7%,UU0B(B\s*c9+bt7/
%&A1#maVs:\lKo`k;$aW;\H"_deDN]Vd8(c)2^t0#1BPN_j29Z%kjm[<G^.X'Z#+;p/R8VPDd`Mi7c6q'O-hEKHoO?5<5#c3r)WBN
%9$5OWf&i:W!;st/c;:^9q*@PYoEG7?ZWTE.b&p!A2.9A%i!IP3/E:toKlOO!T_26nUp9T&Vd,6r/oATq+P[/(@aD(BcB'MgWaMbj
%!F.RJh#TLeJ;-5kZ=:kr\Nl_-3^kNk'6^^ES7%>JMWAikd@9;5?;"QH3Jdo[mP"G_4`'B`%U\XUQF2XpFOqT';21%!Sq++-MVH.B
%`T3-@E0m`2SKLh=[&j274JIt^eC;9^oDL;>/7I)*bU,^Zg),u"N)rUKpEDpM:9go^h`R<I-(96cCie?"b'tS70[uh)I=>L8$tSd\
%.L7MtfkbM8//8XP@aGB',S&NQ72a!.^5\k?gGWT:[3=$POQR>P+iAL\V7[!KE7lg@q3ZNR@6dDcI@]D,(83$t@Z=;_f-0$Wc[dtP
%H?H@3&gk[TdecRr-K1iU+Y]F(<jMi97o1sL5c_YH#6s:Z7jokU&elM@eDpVQjR@/+#p)"paE^G^r7.H!Z5;8qYK%d$n%M\I/ZFIZ
%Ta5P7,RS*ZA,E4^_\9jP,SgI*jAO#gfgAWh)r]'e-qTQJI+8^J>#h#_i5,LC9A;S-$`S`C?s(_,C$#s7*7L&W'8G@Z',B7XP_3,)
%@\7&G0So*nEd28hU`eDe&CM(`EnnqJoA8A?#mG!TTnh;\fL0iJR;4sZT;T;Y2us[PC(V"a+IVPmafOO_P:R*gHaXqV`UTUa4qqa,
%`(9$^F.fh22I)tU*28^D4pQ=mlq'o>!eR0o"3B)l\IWabnk5-70\l$_D;O0AMYNasQu?U\WTZ[>,DmPD%AN'M_TYO\-_ZVN?2OW1
%>QG56a&[Ag2eki[=;?[O9ae4$>93<p+uemKT'a:p3F4XImC(?2<j,-g;/.of,J\Pq95]r8a+1&or-H\`dGp]I0Q7[l*8<bSQ(VNS
%WYtlA]QEU+O>E6.V\5Pai.YGAn(fB0S#7S=6'[sB]RuLH=\e?h#8kuLQ+.R;[>C,mXps1f!+&P54a/q;CO?5Q\F9(hq_169ZIFLY
%Tf%Q&&Zeh/If0[?Ak0qC6g0*[hjcjFeqi]I2Y;oE((O"DX2tYi=fI]F;@A?!JqW`H^)sGs(MMlTfQ-<dkn!`[?dblIZa[mR;psse
%+UR,kkX1KB_>?G'Z&K:D;r'@,-Wgsb=c9&1SFP1!e.X#`m=g,oWn_Z#]CMV37p4C!^s+oK-9`k]m@n.)Vk^dSnbZQ+=&EG.!t=o#
%r^2%?(929tTdK.@V$r0b?D_kf<Gk,papOed.e;_aH;=!MH_+eZVki_.AB!W?o`rn.WODQ51cdbLeCnpQU42CpEf78QHL5K:5#,=7
%Vd]Mo`aB3I9)mnj+>2XP.4.Y9&3n[H0/UrCPF3h7=s#<#3+pfiIkI#36m]9)]b9+Raq;8O*+LUqiOFk&0-*kE$HY[N#gmqc(<7$"
%1baBlFO'L$gi>JBZ9QjR?c2:0RBQ#GrSPfUhu;3\Y7K[F?]gAPqR%,M+boYGe9C!40$fI=[pDR_(??jH7sE5icRBPI1`gY/..AHK
%QI,h*ZT@j&OE(H#.+9AjN!W)nlSA\fa654#A`jab];;3`5XcSpb8V$[R?5XLeI\iCW8J$VQf\qXWX'+a>KIR/-#)fl7>B`3+a61s
%@e4Z&GF^9poHi9jdh)i]17!_Z+Y41e395&H51p9n3<6AI@*.K9c_(=sh\R]W=_5b?GUR%$==Sskp+FU]Ce\rGh_U/%7QO2SA1*rW
%\(!o'Aa`85*[qM[(F4s48Utau*[t#WN\m`u,"ikG3Y0YZ7ObAeMYY=O\i<qiGY+]u^r8b-YC&jb7@4I0lQb?hJl1"ibdbkA%`mq-
%9IhF]8*..U0Y#oBf8HQamr<^YIp39@gtS_6HU1R$Q:qA")IjjG1lH'P04l1`>)HH5p:p$];(=8u*JAd+gh[$\Y:J=k4ALtbKUE)p
%dCT4/$4'r#&*kj1,/?pipITM16Vs$-I4fE0G)l-?."]Q<*BW4O$B0U3Z\K=*1[(O!ZU_p/\HK5S>$bB,QNrEdXIV%_+d,J$+uc6r
%Zj\bQeo6F%SlA;P.oj`"'Q]4-o;Ab`1[i>)OV?Kikk0'i@JWL*#'hPC[djF%^:$e#XM?GjQocGK]6\J50[a`ua"TUmToH)<p'Xp:
%eE]]3%\mq<Z(,f+$:%5lDPRo!lm2MM)%E;G1@k?pQQfT9/;sB"r&Q/dS4mobTCW?i&0.p-0.Z&doHMJ4TZ-'BlU'kK#q9^3V'64@
%`HF!'(q/,JiM!ij5u%V,R4F\8""=n9E8DC1$MG?0ojs(P;\Ros[i\B/!0[P!JADGsrQ$=WTm+Nr#NdTl2\#pj">A["j9)s@N)SL0
%;]fYn&4su#Q*MakX!#2+l1?+.Tsj7g1aSXo:6p$n5b_'uP78ffA9TYuGWoDeQ_<(9\H/`Q_0BcP&.HH8Pm^t+_n2'#-K5,EA1-#W
%$IRarM#UN3H(*MeDG/])",hde<5ASH57\`a*U&,8mHiND+(!]SjNXBVL1BHD=N".+0On&L"7Xc5oZ9se6#qP__iH$IY*!V."9o5]
%]7U3L?5ViJlt\5!Ofu((k(Vh9Krt7,qH4RJ.V/jM27a3I*7\Sg-!1E;?s"W1nS!\Fd.A>!JgKR(Ze%tu9U'R9'Tp4[JrJWdD^=#g
%s-!iO0"RGHUmKk:SneoAf`DdWrd.2@\F8cf&I`Dtd,Cqi[;W^-*r8C*=<4&M)a.-2&/cr7MJ2[mk/GaDalT/m5[1a_.P;Ad`Z]Tj
%qC_*sQ!VE8<(RWH'2?bD?mj?SG-,oa74ua@o-0>jUp[g+>J/1rHYZDGm[\bS,ue@>h*^dhdX5'#h_#>);pN<+R=V$ZPjX0%TjtQ$
%17UJ,U!sJCnh.o=WD')kcWYNaC9,5T-,8(W1:k'\PZ]Ed./+]3k]GRU?lbYRZmqRI#[ioE#j%VmPb(:c4?DXC4d6:XU(S\?U5qRg
%3%G8YLtA0:0(*IQ#_[,E/M[AV?m2q\-fqd"<>7RO2V:KtUt;+A-p4JoB=f>MmOIQ^a4&L;0Fi*]+6G[.j)%d%@%)pKr!F'-U,i0V
%?l<KX!LAji96`$Ts-JkF)6JhV)0r//qN2^AaH4UTG-4bYj1:7U^QcU8/#6/5[[A.q0e0$&=*J223(W#u/)UD$DE08(_4LO#Fd^IK
%2UEF8pEChifon,KlWg#R.>FJ<CL[(.9H?u28JE.6Pf$HMX,Y';mJtt!^'1H+AK.OGWYao]]#d^3d:M*U.*9SaI6s@fhSFtc,$7a>
%6A$H;_dc+;nhfH#jF_rG;[OO'WDX?AYr]Hn:!L"\^H')h(-mIl<!jMkTLAV6p4oWL+\8"rm7`tIb?&^(;k]-6Tnj-%ka?=cJ6(di
%h(,d;qj=L=&i#FJqB^jF:2li?VJlqr"kL[.4X[DHEH+41A/+*?)mGU<0aKd\od+o:'"2"6G,u;tMF[uQYC<e3nKq5X>:FYj-/F.a
%,!lGMSC)PVhNCQnH5f75_023lBn$<4GaE_lA!Z\oT;#bWQnBRdHTJMtD8I-^AboW2\8^U2I5(OsjHb.,U.G+Pn6#LR="&`5"pi>E
%R#r-7Oes=[,hX8fFNr='m,m<E`fSF"8=/s[!\6^XJg%)kV6D=^6oGXj,hj(K</=eGg?/^il7YtV0fLLaPp9P^fLKb0\LSulN-D4_
%P"(A<BpQU'J`D8>#LEGj!>F/%keVR?]mMHL*8Khn8-'_7-_f\]8YHl7^5_UdDtZ@!Rn.-oE[2(B!<Mqb+0=c^G&.YH@8>b_X:Dt0
%n71ii"Xig,e$idK(a6\-F!!<K=;Hc:RkujMW#qo%Bd;B0e+Iof1ta6"o=NWJ:oZ.+G8c"7NMfc"dhRlPZ>5:*)ls=eF,I`C)r2`J
%W[Hh94Qldb8XMH3hRDeIHJLtVh,\j0D3-?f3^3oF\$g:mAQ<qf#g,O8c.Z'tDlt\MLq2FUa[&G:\6'<ZaP8fuL+!qa2ok-`#O&oM
%+IaR@!rLj*`fe2+&LlOaKF\2k:Hhe.0Ten6(SSb)jZUKkgl'[*k.T6kq,BsX9.o4Kk$1pE%M"EG=n>JNU,%2h2B5VmF.X%7.8>d3
%jLAGueucA\+@qjrdD(O&>*fJ!7pCj4fT$3K+/@6;'P8u6hcd+(gPi6VTkbuU1!W<_.A$PUZS`]=fH03MK(&ql@FHCNi1'&b[N;fY
%Btja.+C>iIm6M#-KZXJ6^2NI_.'%@O/AZ-&B19)^DFb7pOAIjK)=9FPJ'A!-0K+%*Zt!5\55g,"q_1+IkIgNc>#AU\7VuWo6LEMm
%6i\,k-mbfsqZOL90O"^L*J(8tFnDK.ijN+H*^Con;0V?dbq$Ft3R4Eak5jubpe^:BNUZLH#3kk@a,?7-Bk[\\o_jp+*2rq9DUA+5
%dP,'t-anT!Z([m?l+uLB3H-R/5%t<[B=_LZYFC`!0TS>Pk4a7b(>nIMkSJ=Kkb2H,QjgHJ/\]JSr#\&3f(4pe::d1W"Jc0tZm^;i
%FhW*Tm)>PNO`2aS`+Be02UH&jBEOBCXOHq*W=&c+eIOqq]_tmK,hd!j?;ns$.$=@)=A8W6nu^O897FL(%u:J[B?(n]Cg9am*p3k%
%h-guRRr7]>cjqJrHgBUbV=X.\F7Wjh?JhC2*T#OW5-[+rEgQ[rmIGnSp/cG%pUBl-%Y]s>PP:-3:E3gcSq.t'SKAl^+.q'O+7UF$
%#+sHt5,G!$T]#_P%I'a)I6qB>SEBPP(%N#qkU/7ApJp2`'^:Z9n./LmS!s@-<l'.6`$\6@NsqFPQpDf2;'0"L+.-me(jd?/M'&+O
%*uLjS?>K8V*.HM,Ib+p>$uut:)s:MrkeYjK"=[pKU%Y3\N,5(^1+cO3'O"$R1DoLj>c1M??[VFoW,&m'YC#j=rZY^/GGs_S9IIT'
%7f+00&h%hb:[Z_p>Jo%)i:<G)F&4O2CIAHo%a=O&@`ZPcD+H]=6PM(3P&#%j)jNL&JST;mF3@,KcD.6pOF)la<u\+;/8(d+5Da"7
%7DA<SJBD`T#62ZU\GBDQYN1I<:/m%ubLfPbSMNfsBJ=Y22sV>JYmdS9>02Bd/ik1`g5sT8UuRp\^.j,o^J&pa!;e,+n5SM!_@7T2
%;H!&YDD5#;CG(F>j=4lrQNA,8k"YJ-kf"n`paXN5/>CJ/X."-3hgT3s.(nL?`_7feBj]_9&7`F9`1t3@_J5QFd:WaG^2-=1VPRoI
%&5rTLW\OR@3*_@,*$5&EHOcfN`NcF72-hdCe3[$;V(D=>s1"/*9aB5a%YnP8/Z6q@H$'QBahk[L":F/lnm!/0+B'6Yl8Yr5VeS5I
%)*IY@]TjJT@5s(.fts-_h9L5"+1Y@Be,/gCNg1WID#+o-?GUQ=EK4+H[ls2ALu5T;PCI<fK<Z\a)Yf9l=ODenkgT_5>,RsaOIUXm
%4KdWY@Dgb"GiZE??\M/Mn+XH/T?]\>#J%OuPnW3&D7Pjd&sa7moa,s(LiX.2aL3`jp1.B.S_pueR;V3j<1B;VJqa-.9T_E&IXpqu
%<l5+skb<s-,:QTB9#[b8(BiJ'+th_Z!nZj+*0<#`1NXGH3CBTUe6D:?cMHeA.M`cO!'-i#&@:T;eUBr[5T:N1m]u)ZblPV@X]4Js
%rO'`pZO6%\0rE482`6peLUb+d>)=$J#H7H#StZq5M7+'tI%*B2`(tU?CVB:LW^rX(S=YZ2q>UB<gU`_T\9_<Zrf#U0@NI$&"9.T!
%NMLpZaU4aJHf""8cn"/5L-C>p:X7bOcQ&\paB^PgT1-[r]rB#P:gkaM\@V-rggONC"L"?hWO?+N:2`S^WI\Vq-9o4GKW`2F>Ql3Y
%f",^c?'M#oU$sem*6+H&UHk2-Tm26gkTl0:8QBni:)iBbm<;\SG#TLh:&4$fO`JpBc-Ep#l*9F3%tKhb\eJj_S\%Hof?>0=iHOa=
%*]_(m@7]!-V4H)U/FP3.l\$<UoDS!p/*FqX'Asni.IMj5AJ:Rn^a;?k-4+cU;q"OcJB+PB.sQjHq%Jbee9pO#":K!`%g=tY>DpO'
%d6\sd8YUP#Xk'bMK*.lh\Qec0iGD*#9sIcbf2ls8c%F;"4lANE?e.B7L$^_/Zt'@-'BRF7ffWn:5kGcaU%!LE2<CGlRB?Xse6/fH
%1U4QVEY;A`c_l0ggH#L_=@qcNqX"HJAbj*>P[N>G4/2_Oh(89Bq`/EHH5FEA=OXZWSEO\FH+Gno)U+F`iOf\^aC2s;_SM&BMpcl@
%8UfYf4*^MN*f?&JmTFJS_Ghkr*S^G%=jC6ph2?fcZPOdV\"?J^.+3Fkp\Fucog]:7))Wg`pCHRW#KUHZY4u/^EN5):pdthZn\L$:
%hKJue$Rg&L8V7k\Da-$FJ<0#-*q=$FKMd!<i)((&jtCul?c'H:&h1ET?oG?HV!%PpEtBi)IQ!n/[dlfOqa,Yn4KEgCq_qb%9%g?J
%I)HlN1aR"Ua,o?W@E@E=45gu)+7oDB3oGK3#b`:IVR`XC44a29]OVRG`J9$S=H%;9`,6tZ(P%mJ=1d0%/hUNn#`kY%T`S]&]eoOr
%ihc)6F=ca%c=4UZ9HhPGe6+#iqO_Bjbfk[BjOp/O\N3-p2lQT*6M@So>tQr\aJge<d<Z!pGV4$ZbBd)#f2@He#TH)#XMYY/WaS[O
%5/mQ`M@M8&e(7T^QKn:`&j0EqO`=[r,XN.XRR9/ZVE!6Xat$_gW!A5C=_*Y6C-?7a6R"tR7YS3dJ4u-p-0)8GT$g:9a$L*%AC_2W
%&:^BH#a:ckNYSq7-2/-%-@RQQ//1Vl+AD2+kc?cnXI9h?[<X]@L?)&;nG\15QK79Z#JI4o<cC.,rLM)*e(R7c29IZ&mrc7%oT!'3
%?.N.'CH?)"lLSL'E8baRL\'cL<XhA3Ce+.(i2K'H2&?2+Br[1lUc2SBnI_(/hFJGb!akF+k-LAIY"Z+B!45sS0=*ZlFAhmJ5F%Ef
%6UbU.d5<_qlh,DBXnc?Mgc;2-]Sg3G$]6fQ>HSLAMT])I[M4oe(m*`X7(W*:TTh9X&>pDD>h[+j"CVBV@NAOC1cRo7dC3!9XqOMZ
%fi(tP':(b;YcX5XZg9;=m_mZZZo,,JU4iSOb.3Uf!rSMBIoPdd>$MbR,uM@0?<F$H!Z6g06F9)QY[0^A'ga,-gk2Dp!uKMR>G:'S
%*Wb(pL6LCj/=.\Rr`Y3hrDHmBL!pP8CGqHp&&gA/\i[dHTJs-0Q(91g>`09U6i]>]iHp.t5m/b,RqjDrV-".,b!lg^0p`^5CGXch
%6F,!28P)1AP16YR.TuQI_JSl$V&#5:IhZ.0a)?<7kZo&CX6;^@p/GKn9pG%8XY/$@c!);ai`-`G!!jACHX.l+A.Oc/a$hc\pSrQ!
%ILicBLN3>)dJ5r8&&,phIo9Z_V6_BaI;OG+V4f%t.lSJ!#`9Br4B8[JG7?aYEYe>#M1bTpHEL#r?"c<&(JE5.NCXS;A`.YImNV!9
%n;#WK:>_lN/7-A*ogSHpZ4YV;;!3J<\29CjFpsXJ_2-'a:Z_-S`;0]L;@n?.71._HI7*0I4.Z(<34"]/'tM8&^8[*I;LS0Vm9o3<
%3DAGKaLZV++mGBe^+No4.;"ghk<*N&[Ir2.F),Z.VX&>%nSiOf/Jl-`N2Q\45H6j2^+;7[qW/I'h[M$Iq_[^0`bL!!\(P9Fb^TMG
%lS>VU02M5,Ndb+fpGZ@@6*Th(PC^ENNS,AlR!KYTBJ&E'0!)db.VMq6Y]\!kZ&ZTt/@$jQJ%q[R07Ipa)LlZ;0`g4?@r=h)%V&;$
%_E,2erJu??MO)QK^K2&@Jk+V;`Aa+kU))HQUO/+a^/bL8Fgn)dEiIq#O8>ji.W'[Do1=K2ZqIc>]AMI^<Gj_.F@1&$S\?jL732\L
%\SboUm(T0rf6t[KPo'7mp:miZD0XOkFX<5`FoKZGO?$L$MnUa4fZmEGjVI:?)iSqak1X$c=PnK"S/(MjaTio?(t%J;)RB[04buG^
%kMMK1q(8240eR7:STh0hDQb*&6A7O"BHGYWY+>rbC?P*sX,kF%]\5elHKk3qL3&QAiLMY!`-U"k\f=6'*MHueT&B94T"V6'3!'),
%]=h)^R7r%Bqp"/\0FM.Up"[ZfW3Ak4>_8[Nb\E&1PY2_m.Wc2=Z1^DYRhRPc(2dnSP-MY7Xfe52;)`9K+c+<;Jpg"SIQQXW82/bA
%*H1f5)TZp>"pH9=9O2BM8c-r5ZZ_h"df+1P8)Qs0,pYOW+6?$tOc"%B[I3iE(JhuVkblSD0oJ"<h9V18\SaHP*?&Lr$K<a3<HD*E
%fF!UBF7ZkGhVJ!hr)JsP^L8oD2^_:A/),#]k(NIdV@#B<r[$uYs7,nWpW]CfK5Wmoni-[E=ij(aIi*n@:N+"e_=ICuh-gT&CI,X.
%G1c8'/U7`,r88O:])2.lnEpFj9XK!kjDF12C7`b0in`^;>AN[[b]fEED:QD16%!-_q:mUqd5La8k4lLCob6*Pqj[N(Vo)$Fb56tA
%k>&A0*K)![WrK6NGWWq&4o.Ck(G;/qq^T\MFI8,RT_B.uRu6mA1A6h3pV,dfmJ)r.PgcR:P)jI=Q\u/X""RlBS"T(?V=SNbMW/7>
%Z<jn0=ASKf<6c6V8OgeG:rqgrT,rju)T,qK>F+$<#(^hreoSQoa[4[o'Huc;[-eSnW>\@r%klKM]>>Q`#(^X&XiZcNUYK^\\EmYE
%jmMj)#5JtsRI<U8o$dZP$hk0WFfpsLgGlEljqp*d6/ug?OE&KB]C0*Rs4@.n1ZfmtJ6*,$4\s!W>Z0bD)aW>h2-miDcE9,.Zn?Qd
%5eM,dfB"n"5mc4r^#SLL/=6=l;c?F+i%CLW&ERl5j_+b#U<C%u(FLMKYh()h]F+L&)eC+>+K$jHi6hm-XB`<k[dW-Bd8-K)e9p+K
%\JI70ep/2>/,?d*8,'@jEH@ZpQdmW%!G,s+RU[WrHVB^8%0DaQfSPm"Th)$$%[h@_DGlNY<aN[!r0Cge*BWcTn53H@#Y`UTKWt8N
%=8SUNXRbZ](S]B,K02t'*S54Br<bKllV0r*r<2%ml]=T$L.50J_(L(fK<!3FSH'"Mk0d2HC2fe,MC$*k6W]_?$3F:7H4/4!dQ6f8
%DJqgI8TYEe"2C#^<o[i<U2!/7e5:$ciTN+U3q;K'hRe@M>7!q7*$)So+]t'A,&<A"#k+fHK2N^2PkW_[D\)3bWtSmPMpLiFQE^=`
%W+.s.@OGQ?7%F@gVu:5F?,T#6A+>E?1p1*;NMi:pkL,Fs-AFMT7^^"?&I\r<F&^/<PBc,69Bu^'Hu8<gGI#tkd;d.C_X?/R,l[_m
%Lpu32qUYVehR&g-h+OqHIIW(:C:7I``o_cS_?dcdcX5c@f:\ArO'We#AO[ZR=rl-<\#YSm8"f/5<rY1,,BB%:gN3%I8YMp6LmQ@^
%""rR.B&$so]KT?/rOcq`k5GIcjjPuqf3=KD1#CM&g\6/s:`cBVWUfWZDdOJVZk:t2JGoMj=JG:DIu`aS?)#s.La;gY&BAZ%.IEAC
%gFqZY1]k/Y1+)-6\+qSKi(J4ij\9KN"2F1e(16>#)@o-fk`(Upiq^BWW[4;gSm!5Nd/)/3Xk<>.f*]hWrm=@6n'#b$J#669O8o!I
%hVS8#n(XXeD^kVaZ_inHba2X7Ac3kpZZ#k.Ouqpa$@g^.H7r4TGNVnCgf<NlFrTdQcYf=kq"YFu9N:P%Z<1nI6^KJl^OsEFRNcIa
%@K?6F/-[uPLE`)tG)V1tXH_sp9!Gj-eG#&;DgVDqp%6M.(l%<a<CJQM,M8>r3aWmcjT;>-,/X1N'MXQ/iPT,hiV%jW1\cboQSP:t
%8XG06:!#[95+q%A$NGPo$r7U#8,F&oe5RT3\5rK;0YI'6,"#BC!EY(H(Mfju1c/\:DDs"TH7`P%RO5`1Tqo^k+V]Oc#%hRVerZ0[
%2q[=u$*RQ0bTN1lMmj":7kFTeRc<aYk'J-/^'iZ\:0]`,6?eI_Y^[^/ch2GG7ip&UUr/ZgDm/#=&>nnE85sc;;7=kE6F%l8CHZZD
%.(Z[AAh/N2XDZNJ[/6>*m3b$h9<guMEX^^d^dGNUBBDZS2W!,G!R4;c+j1ItG^SJN5a.1a8/bh`8qjlA^%uhEl^=J[s./YE.0*Q6
%oIa>*/`CX&"'ArA>`A-H>@g2r/4;D1\m.KP0:kiCChk6-]!"aEEFoY@g5!(R7rT!f=+#KZn,onWoa2;R_HqlJUB$_MgBAIL:k1.5
%U8<5C)_=&.cRsJHeTKLp+n4=0eqKWj&4&*W'gaY;ASbBu$2PCl=>Fu\g9c*5Fbih*&J8Jk1[,U]g.Jt2B&Pp%,=tb:ME0*Cqa;CO
%f`=GPjd[o.Lg?d3QC[H1Q8M..rql/&So,F!mCFdWDgOgLhlU*op'FY;Sr?jJQl`@7>i+,OpVH)UF'9X;Y9C%p.:@#?Ea^^SMu@Pe
%RbQcD"b@.OK[UHXF;Zdnb!n8cO(g_h'dW'6&j"-l$*<7&6G2D(gBFGhUdtLlh9<%d@>sOg(t1rJ'_0%Up6O`H;Bqkt'Tsb0eSUQq
%WD9,D+K\c]@.ZB*$<fqn!,aSS<D"EYWK\#`(IYXUbdg.`k6ZN$Whh1i&oi7ph3PWF4'PH>CuQp>3>&+,d&S_NkWZ9*'TTPja`DQZ
%O@@.?c.K1VoYX_;[4n@DA_W?99>\mr2bBANI8IiM5Ose"Bu(X`2jNm_3[^$C)P87BmmX0/f?7F0=-OCu[(!RD3V@.b,j`,\hCgMa
%8/S-%KER6d3\%q'\>42OR3%!_%g5Xgg4M>(bsu-.$P$2srgpi8)DP(IJm-KkBH\bSoV<I^hZG'SUBjm%@.K-^9PpI+:8^8eDW3/s
%cD7oEDJDlXIs;E_&al5X19cdGADA0u`LEd']9's)@I#af*YTf-JrA$RY6EnHOu!Accdu]Y"<j56PRW@n*C3-HE]Vc0-*2pYU"G1@
%!`&WKk$;VUmVe+!9'e>nTd8d4!`2RCZt3&,KkVeXh#r]GYVIU=VV5Q[+R<]ul]@W#WH=5L@7\o0X7GU,2pNg5G-!-QP.iqW'')((
%+*a%:8F%oRg*unW%baebIu0K/aC(4hQ;%$<0%FDeUNU?Z,hUVs$+,=Q\Ho<-cJ$u*\jRS^\f4%iXq,<<Fc#5l%30]:rl0p>7<,Ft
%/d?<t_H"QjI"Er:_AN?E[Z9"lm!28>gECE)3k@RG'Yn9$Z`$WWnpVY;MFb4tM?C)FNQ"g/082H9H(V"n9FH;?(=H+P.@P#bg2RfF
%G/:#S>m5ISF)]A*9TLLRTi4X?0%gnQd4.`tN`9=AZi0V"6;%Y2qGdb8oe\_1%]GD>&S0A+^A>@p"JGX],@2FJD5;'6F'@Dl-Pr#b
%5Bm%h3U$@l00*@3baFp.7=a3FYM\J$@/.toh_An4p(0WMD1R?d\5\5>a<!3=5X-r]L8CY\pd32W\E5QT9_8W#X/!G"m/WMO<QMT.
%-Ea2%#)3&"W+ShKW?mOC`)A"%@?#jC:%\AKe!AH43L^,n$<ZStG`L+T372t:`Be@Fh(Q_Z[*GoGZ,Z8b]-@QfhmW#SK4urT.U?+7
%1!$<$G<(+k2#$$+EcoWoK"jV@7AZ<D5c->"4OabX$nY!mCi58C_-SlY?;(sCJ:</4<TX,G-fsZaIbA>Pp)D_>mTrLg*<OFpWhl$>
%DC+KoNX8W"\6]4jnPSMRGbXb?h^Ka/Zua"mSos:(#[S;MD4H"5(S6+9@F)]6/XrYcR>j)N@DJ%-^ePIb!VUQ'-jpAq$Y0=lDXCi=
%[j&1ESetE6f%DqW6%5qlOG4DHn7NIOY2D$m\Q@3GkO8_>k;36K\-4@/Vl2,^M[qU*MVh%ionX2@RbS)&D%(a%rrrQn[=KR+\j?b1
%/2`)8KUAP^C<fpj1B]<T(L;k2.7I:%Ple]L%:>g"!5,"UW[`O3eQq_^?loD#6s!^DbX>%I,g9:N%;`PuEZ0+c1@5V^#O$J/P27MV
%$pB&4cKo%Uat'$gW_IQuiu4]$Bj353H#8`iYN'4&eK0N%m9AM00eZ34.qM9+P/F7#LjUX<)V*3==BA#n8Kj.pP`Z/Z]81AWE=`T2
%R`j]&LY7E[:G-Mk;[Bon>WpRtSF;sUrYhi16fdT_KHP)nE;k+;J!,8mg&W]W"9c=A:RkFl$stfA(U6`f&!I-]+Zl.ArhFo?6?IV&
%3=b*;C0T[QHr/gFKt/=?)`Gr-3-NT9OW@qg^i"*a.\L2881lOuiPE[J7rHrC*dAIea4C6Z*@N:9*UNd$0j6ob,N"W][-Yno@bKor
%P\7%X[+l;VdVQm,I#`UME1=9&)EWm<P6W==9r6u(F**h&k,<!!*j0r]*l"Mi)rL[UB0Ns0+O:tY;Fq$nOo4dC:H1'2CO+<9YaB:-
%I.ZLl06QL2kNXG:iYNHdhhmhj<;MB=@t!W5XF&g^%41.<W?RR7#p>J#73ZO0?=(_a\6ts6&=R*`#^lge.eEb&JUllb/noD%\XjcG
%[^b_6VMp:%o]?Fg;M%9tc8V77/?\n[.-<Qg`>,Cfq\HFU);?aMFTapHR<HnSjkNC+e/TV8,Ji+X2BP@X5AsGLY9`<`!TrDW$iUUX
%i5l8AEQd?hcPr[:7,Jt=GQku<5buq#TS4$Y,gs<.aa)8;Hm,T9O<#pul3qBbURZ7hhAh?o#Fu-YFX5Kd3#B^B6)I(ejl%_1?qK;N
%KK2V'eWramYBZ!OBMioZXkF6&)ejH`Nost8)n;]H:H:i$UI[D'DdN0<3^R<?g_kkgNTrhU;%uY4kt;cINC&LlCpUo/<sQ3.;-Np=
%EJr$?!q7@,=mHhPE!fmHL]D]D+DdggEXit^9Q1in/17fLg97nt\QF\*[[b04<:+ahj(7Z,k#4c5'GdSa`52$TX2cTV-LPQP-L/I]
%;kD\hn>5h41qO>/"f\6?M7B#Q]]BA.?B'p\@t>sh\W9<:1%JpU_L=a;XFTub^Z/=_L44=QSHkfea,WjH'I>2bG]U&3[)F9@V5KqP
%cq8H7'(k.]:=fqcpd'!^n_Uq@9.@MZElJj?:$]n8gdP_<='qNDZ7*r4:nkJ62pn*>OZ>c8ILJ7&NX%^aMBC,K+5DU,/#1dSb5Otp
%gRQI/m1cT].ubT[9)I(9QdY\_Hmk/<0Z=9ri",IQ,A,k'K8el&n0SHLZj[ufe)`>+n6P\K3<&L.gAY`r6CAqfGhgeCGHt.5bmdoM
%j\A0M!Xk>Y$#Z8q8tcAE5[6*aa!$CZMNEe$:q"4Ls-.3HfY(921qS>XjmD-jgdF2adib,rK._&.lB4AgoV2V%8F+`q)+/:1S?N@6
%j\^3TD#ZJn-W^n4`%K'YG(G^mEm^aiLrp*>DZc3e]O;;$Jr4H[kj_IePUg>**jQq,)7LnODPq@Gp1SUCljc1C4`V?MeBHt'+4U3u
%+pr9+Pq@`#'^upK0jkrY/<Q][WVKVpd%N!\k=Z^8Ulmj7#m^$eg:<.<Eo'_oo=\,mAR/1Pr@%f9E.da=:)%]l<#32->l,fc=E]Z'
%f'sVK"f@M?]qkNW5htpr=5PTFKnaF[8`,PWU0#fWE`qQ1K+J2!-KU]O(OjKRHn&$4WVK>d2Th>4o;7WCdnIFKs&qhN^GlL4`J_/e
%Q"'Na@8tSllY&pO;>PTTLA(;+l?;^g0`Gc*s1%^'-gkc\J,WC&2po>=pJUZHbA_Ke<Hu72PcV=L:sDEk^,nTZB3)"=YjD0!o$FJP
%c,n>66V5]\;+c$hC`C'rCf[]7hn(9fkE(,fD=46P-ef>2%*==l1C]IC!YFUd-iTlo&\jhhE7:XO5D8C<W<g$@$;&K>8D1AY!\Cnb
%eBZa280@#fW*J0/&_anQ^1k,a30FP1+8Hlir*Y-m=-$E*<Ca6If,j*XFY3RRSgj0RD-@s%5^*:"j???+p8$8im9QD`)gE:D[D<L-
%7UEXWY&+ec8I[4cgD".hKb-RC95LIF/TMF)1*K`VK.*=BdH)(PQc]g+rQo:>l`j7!^(_G(K':)<A?j;+;an?[#,^.;VYLqLa>8uf
%_Db!JY26po3J#dNROiZMI9<`:K<&g.+`Z;@F)^p=&D*"&9W9W4+#ebrY_p=XDkN\B+,C!6m(/9:jHe!3]bagi$M$P577#/\6lqf#
%bs7<r`0`Y/,pbQ-?H(Kq"0(Y0(KZJaVK]J=[NUek?gUI(a/\h]J^%HMV$>[]_+*/[e:o:8B0T$,cK)R^&!D)Z)R*`ZH61EoW"R;>
%(lM+r(IACkcfU^"p]FR\ba6nUS'7`cp6[d(1=&3YXtA;XmgcN.Ibb0LKi17[0>NK\d3[''rh/'9&t[\G+M+IU5*`]K8G?Qd'GqtE
%&\9W>LX(kS#J#<C[Do!:3&C%Ha\"mqF:s]'>r,cUmC(.W=PT!*V<-K';Ek3R;qt:@3n]t0\FOf6_A[B*lbZfGQNdFN3AspQN<FR=
%'-!=eli=`.MDjNGE/eEo'gH'S7Z8eoj:V54Y!fP,j,K=>P5).>YH#H/8*A>6,/AOHj`Cil#6qnf$43P84<?#4_">7>,(#SF)h$P;
%aTaKLZ;FIc`pFl,RdP<2c="S[5@9tNL5V`ON8\lI&*7$b'HWTP(?(2QL7Y_)L>:R\\Nf:l72VDZ6.)1N*o96U"\s6KQ3`<lQW):*
%(16>-N:8F4AGD"Mdh.;jP2%)RZ:W_R?'!KWXDlruNZ2n_m]ohH>\2#sb<po%B8iWB?'R^?_?M2k/]0f^qW?k:+t!Y,@)nB^j,U<f
%MlOoE"QmO_\;B(4XS'fEE]f^i-],4TRap>7EjDD\MI;"b6,rI<XVW23[#rW\YirGqQ"uM+SZ?Z6cl;T_R\cks@?C>2-lqTb9;Ph/
%-164FUf(RSKsT8t(rqH>+p#5Zq>brWBg7gpMkqjeV+qIEO[X/NipRsBa>@J?jjl`'eX!kV^:hP.6UM/-^!)S<CmE:9jSNHWm?,Df
%l_8EV`2+#2LBa](r[5PIkV=.tY9C1dZU=TKk3C<;6'!4#XYbqA:CuIer$4o`WV?5)g-&3IAmZRW[)itJHZ_Y.N8!:G2QGS%Om_!C
%BA;&QR9.Foa,+064's`dX/gZN3Z[7(@/1a]hRH09Sc>6RG#QaBjK!N?NsF@r'+`5S\q*\L;^rTS8.FV_&!KF4\4i_o5$_A-GaS?=
%6-%9oZfAU,*5KBlS8IQ>\SU/[`@(I.UAo4TEfG+2bRXpP7[hE,DSN7j$:B"c,nhRdT/J[HD(9Zp<Z#c-aiAhG)<2hfq:Yb>#ZLQZ
%!A3FVmanto6_kijE1tn?V%&K&UeXk-@N&;imth<!\TfO[.CE6me0Re1X[@4$q)oH1S4s@_Fd0U0PX]\XqeQ,pl6e4]5`l"8a@eR@
%^l9!BhSSh*8Z>dM6'W(n*Ou+gqS!V\p!mbOLd,2)^fo=Rs"'=7q9A6<8CPQ28PkY[C(m(Bd`-/G#2=qD2?dtE56\2jXoc@7I<?h1
%-Zt*SQU^`kmYRdVKKZ]Q'7r_)H-l8e+JIqQ,)TqNo]Eso/SHHe.XF(=/pkP.\[>/V-Y^+"($?i466Nkh:UN;ug2hAtdM02fPs1_d
%q+r(D`hKiH$<gQP<[9!^WVON,Bc]\6-[q.pKJmBZ8$%.;22iY(3QY[UPMZK:Un>B,`(*%c#t266N,dKJpn`brFRduiJ`EOs4VXl.
%D=l*-\<`$4:(Crd1dog!<lNo&_K*)?g(oLOfM3eIlE/.^T\'k?=b/lC5?63fji2.XhK*.$*2q-Rq+8+>S)WOoj5-;aVi]h%n:=5.
%RhJ6Oh)G5#&2A[bP:MXVa32J97<GL_@O%_S/=B>O%;4#=kd]Fp9r%Co<p708K4m7=hRq-lP\BeoUF$N7nqiYhVLanZk`Hur#O(.^
%M2"pBrBru"2J>QoTm^mg0AsM?]kMEr=PGB<':BFdYRmrSV!M<sOKs:mOAR[m$YJGVZefXqoJ5hm&Wp6B;Fsg;X69;]G<<Z6BtlAY
%`9d#6o-n;[0rWc8:lBp>8,BSVF7nj9FJPQhXA/?LqkPk6Cp?$Xf^W?Tgon(em2i.4Tjg3BI(O\9$kO[nG\&4cgp1heVC0iQ,(:`h
%*Z]>AF\U$.2D?apXAjhQj^(Prl%gI.b/%-=er>"ej'`*,5HR#mlPAd`+P^:*QAZ2kpQ3%4G,CAd,fb+2Je4Xkff.[hCjU2e^`FTr
%au<XNnhCS]"3n7"XTN:W@L`$IcBhl#E@2B.n-I_3\_pG3+c[\^e!7g>lt:b@3mWri=.p9rqmr=Hj7]2B`AO@F*mqgcbQuBRJR<fr
%q!VE1_#UqFH&SOf^U:$[jlqtB6[O0C%eQ,hY);'&[cq3a4BtF>L#h<-'uJ#h=Ac\tG+prYn*8(]].Cn#2D:e4)(k<emDigc4.sF0
%:tgZ5`kKNWoRYa^qeQB8B^8b#+>/lAc#_$P&?XZHgf]MLkmDf./5\TLXI\;$K(dl*8/`Keh'MW]q[_@c6'J^ZmU/<7Aqc[+^(b-G
%hX9fY84.MG#Yk'/&(g^7iN0/2+O8qp]iPokYVaFc;a=n%m_%ui\=i^B&L9Om6SH`\]-25Gog_XICFmE3<)6T\?!OdX\FnnfX!tc*
%;7`H2<=D5M?.60F"/K"Kr""^a'9=1)A$\TO]bO[JIHhXORHeDMEI7:6'P7HiN[I3=%#aDa389^CSn.A[?(+sk<Ns=-,/lEje>E1H
%8Z)[=%+FaI>I(EQb=lc$g]^?'UcR7\TXQalm\3*#I`Sp`rK>tP8Y9neAN2WX/dX%HooPRVWpLa$GGs4]gVkM:L_#Z^oNFc'nHK&/
%#+1EQ;e??<o0%(R>PfK:@':*W=aV)a_t+/"e^KcR/P$'X+,$R=gVCZSKj)sAHG[MNTu&A:O'@'U*s%nFkr=@dCnN/;&C\Z#M5)?.
%0*9\7VP1bpXS\n>9h<Iq9=[^m6NqWo:h39>f!@K8rOTPLdQ>h#HP]!UTU^EN!%P$V6TfXJid"mZp*dU;YYb>e"QJm^/AFDAmlo(l
%4f0=5>3!lVGW^6Bl6p??f=fG$n5b%slMd$Kr-_ZD#7gS@4o6=+$%-u[n<o2jg\&NuXunn\1\ntcb9sH15/-p)h@tCtEp7YS<1g\g
%HN1;;j'/r&YNJ*Ze9e\-r8>`e1Dc(dp#^;+qY]9goJ8G/+'dKJikkG=:&Nk-nctN.+5^Ck`M8dA7VZ.(\3Kb-/O,C\J+LAQ;h2Z)
%Cr(l=$+Bnh:BWh./pP8)O>frN;4DQUNlZtNKsqu]UPcQ#(o^6rc(tltki)j5Mas2]FqpY*"-m8%#oh5AVUId*kLH_@;IT+0**5Dh
%o.kc2BL(GD:7[$1g?R$8"5SJf3rE/JDCY).M;Hk@?8oBl+l$M^#-+67[(VE27`dpumUFp>72I6j<DUV3eu#+1rq+joMfkj+KB@kt
%8koEVETE$0:*[K,`j4b=4Ltf`UA)!hMoS>DCc3Sc0S"CA]4uLd?Th<"m7*S*8*no>4^+*M^G\#alck\C/,Bt[>hd>1bW@79dG!<G
%dUJD8$(<#an3+`ROP>`b2%RLLF$Omh7,f0q_f<2X*R=;g"^_Rm.jQPbU%soq10oq7fQa6TL3_Xn]2&`g^8[j3i=%TW\AYXdS[<tu
%#V?d*mPNi]3eQh%_c%Q`k&53'pQ\/QhY!u&s(p.AVGRq\!$'e*e;j7bIcn+UX)5I5)_a7GoC,8.e.Mr!#0\X5EuIe2W704=^CH*B
%*Y*;<I!Pahpn)g#'3EGN\?Ptr`quC!2uZm]o$K6X#R,H;Ic0[pi87PN^T2sm#5<=An2I:tmmfXW+#Wkp6'igVfn5PakLm42s)^RH
%+<Yi)@aL#<`%&j*\Dr9:;)@5;qS=c^TK3Yc#o;s3;tc`9[>e-V;_h"ui%eCqW'@(U?/3]jL_d]g[qB@PiX$kk8rB14mT40C*fTK!
%g9L.7HfiCDG?MAe)'Cm!!N">/^Sn38WX9LY5t;)QR4m5H4%pGcfmRU\Ujao7B4c#h3<(C6@D=W3jV@VT\SFMo+Zs!g6Ymmi2\;/+
%Bs&`U/L^Lq.7Yk!SQ1]^i-AR9BJsCV]7[JMlo!PioUQYcV2d!JK,7.OY$a,bePcdkISEB;;AuV<E-8U)R1k-=o[gKP%FVdh#cF/E
%c_fg#X].t(LTkY6?GN0]V6^36^4BJdC-puPd#)KpdP@-S%M(FP%a*LOo:3qgqr,TfFO4'W6[a[C[+>n5%dP?2^7HgS>?b]6/-?rr
%88H_oX(dR:@+@r+P.Y\q]e(VP_2/s\(Y^hGjub72^mc-O%d5$(&b.Q55%"C_52W+6ijb6]2GpOD5/iRAFJBG`BLceZ+X!p"rjphE
%Z"otf"T/2m8?fj!K)IhFm-g'E5;NpGnH7cf8R/4ETrTNVVT'47d-O_S/C5p][#XDee)&[#Ygm$b0(p)8HI=]OoRpq(*^4'Q:"sWb
%7V#55XWQcHPQr_91sKBTqI)dE"hZfc-e@$1[C]d%Rr2.0@HKRR6eF:JG1+Gp<b^A+HP8peF\BLAkG9&84cL?#oe\W50=i%li*MBF
%WgW<A,L<O*3'NfPb^\'L-iK)f7/(]Ch;e]W!J6HtQVsAZj^n+/(-UjD,(sk[&B_\UBuh=jW;//7l?]BbT=1sLD'g5PH[Wb>qScB]
%Xu/:5amQBSW'P_q[W(%&,u7?3n+Y."'ncnh1&tLKW,5WK$:P:X7S_83ZV\rL^7Msk/e.>rK";?K3NunA)`cA(D?HBWIs$AkCnXdZ
%%D)8Sq["mjV1-k\KO/$^L8@FSHV2GA^D,h_jG8undDldP[,RRfeP%=SMl7r1Re()-hs6;Hp1FJVF0k=;&]\/JC\&$]gH(#ahd?;U
%HhYa-h=Ci8`Kd44^H>tMUB0b\r1\>I[^gC/CnUV-9!7$9ZL1[,[epY0jA%\eoDIiqnCP5j\``#!D5qO_^7iL,hBtG'CEG0V+]l1E
%2UHnpRD2MDgYYdnn;U/U!AIXFD@=UO9F6fIdo[%Vn`J+K.9o_&')rt2l+++aQV6(RAo0m3F>a/[J\0N/L:DZSl)<;3F-XBu/Fqm;
%DU7e?I;A`9iHkC\<$QQC&6i,K3%I>GW.'=6+hoXWiZH7"@$^I],t2JIC".\=W8-h0V]X<"RtJ3)H3'5[:9X@JM`kD1Bl9D0Po!@b
%M<XCN5!;PnpZ2tA>(.$BT#qh^9=_TIe*;0krc4BeY2>ogT3hEklnMPmL2THVop91fl:Wl,8H/H`X>ll%-q-_HSS/8acWuUt#a:H&
%mJHSZ#$D6f#u"]g8H9n$dsPuWC\9NRd271/2FS:(g;?Nr;er4(IIU-NpCaY#iVl[@cuun4N'H3i`Sp@h>?QIGCYboIq"j:].'9\d
%Jo^Cdr!^Wl$EVeh>X@WMB`)k_=n#Xc:P0"@TMgH8KP4nh7Y;EZYVd59%ZPstGqO4V)G`*:"Q/8d,WV(Sq@m(<'K<9Uk^Rm8h?<C0
%h#/TsfS=3ml^>uIWEU0qY/0P0FXcu?.$n8Q5H%q<3JN.;\pj/a8M$-dk%D%o5p$'I,7UIIGH1RlX-/C-Eq)>@hZ`=]Jm*o@*=&*=
%\XP0HZQ7psG]1$sjBt2(/Om!9h4MIZ>5$Mh7$et04Z\eB=faD_o"?!=9Kb%];Xa=bKq$-^:uh0BIJq.:\.SW/M\#ILcfgS&U401X
%=(M1,oHQ*%D_JS7s+eI&F#]YXG$^%";V["n$,1^#1<+J%0589GQW[Amb.+OYQEE[5ghdsFW).i&RIaC?HptLcpog%@;kj_d$g@W(
%S_UFGafWJ4,$M%V2ntZ))S\ph54Kfq#*q+,.co=dqD(])F:IO`ehlo=mqbh8ED:Mfa+`2B?.3R[)fJD5X(L6B_EJVqX?oen]sWsF
%;FZ?0l1r']%ppSAS4V4jJYZ"EX<KF24l>+3r$8i'HjC%IR#,c'g+;^d\_LqKHKRr#Btu?\^H^!cXjk*;@bRDrBD'7"5+oiClBHa@
%df.8*S=b`=\95GhVP9:R>Sm%G'\FGl`+[]QV?jD\.q\tCAEJ&Sj$PnWcsg3JE(*Z5'I*6W\qM_Oi`uHWrRs83[YnOdGc3^*;_Na[
%>huu,^HW55Q%!20^AQ*@gSuFlg8h<&;ATg->Sg.5_ges83h6u@agf)mI]S5B=0t<0Ea-Yb[?8d$dctgH.^juqPWT].ib5NX\3rY>
%Q(<?,W"#'SXmP0;0M&hLT5;o.dU/S\]cP'%h0V3/n*g(752`R#`pdnSm1FmHdCfGcCG3GScLImQB+!e-]BH^RXl4IX6p89e1-T&f
%_;eN_cGeor9Xc_L&UkdVa:GLo,joO4=*YMnI5A9N^g*`-q6a57r>eC%de7m0mC6AlC'rRX['^tsf$D%]f>lJs[s&7shnYs`lJU9#
%1]>57Q<bkchoGO3(CY"]5BjNZ&.3pb8,M[<rQjST[fQ9aTE"bSJ,R8,m"^)c?iU$WJ,/"$p!<Zk^A39V&-)3=J,\O_07WsSs+PCe
%QiGN&0E:UHJ,-SRlbEGb?XEa!s7iet&&7V\rkLbr_uKMHr(m@_5Q&:<2q-+~>
%AI9_PrivateDataEnd
